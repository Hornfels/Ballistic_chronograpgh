

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Jun 27 17:16:56 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F44K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66  0000                     
    67                           ; Version 2.35
    68                           ; Generated 05/05/2021 GMT
    69                           ; 
    70                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F44K22 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     
   103                           	psect	idataBANK0
   104  003D14                     __pidataBANK0:
   105                           	callstack 0
   106                           
   107                           ;initializer for _gate_distance
   108  003D14  0017               	dw	23
   109  0000                     _TRISC	set	3988
   110  0000                     _TRISD	set	3989
   111  0000                     _ANSELA	set	3896
   112  0000                     _ANSELB	set	3897
   113  0000                     _TMR0L	set	4054
   114  0000                     _TMR0H	set	4055
   115  0000                     _PORTD	set	3971
   116  0000                     _ADRESL	set	4035
   117  0000                     _ADRESH	set	4036
   118  0000                     _ADCON0	set	4034
   119  0000                     _INTEDG0	set	32654
   120  0000                     _IPEN	set	32391
   121  0000                     _TMR0ON	set	32431
   122  0000                     _TMR0IE	set	32661
   123  0000                     _PEIE	set	32662
   124  0000                     _GIE	set	32663
   125  0000                     _PSA	set	32427
   126  0000                     _T0SE	set	32428
   127  0000                     _T0CS	set	32429
   128  0000                     _T08BIT	set	32430
   129  0000                     _INT0IF	set	32657
   130  0000                     _INT0IE	set	32660
   131  0000                     _TMR0IF	set	32658
   132  0000                     _OSCCON	set	4051
   133  0000                     _LATC	set	3979
   134  0000                     _PORTE	set	3972
   135  0000                     _TRISA	set	3986
   136  0000                     _TRISB	set	3987
   137  0000                     _TRISE	set	3990
   138  0000                     _ADCON2	set	4032
   139  0000                     _ADCON1	set	4033
   140                           
   141                           	psect	smallconst
   142  000300                     __psmallconst:
   143                           	callstack 0
   144  000300  00                 	db	0
   145  000301                     STR_2:
   146  000301  43                 	db	67	;'C'
   147  000302  61                 	db	97	;'a'
   148  000303  6C                 	db	108	;'l'
   149  000304  69                 	db	105	;'i'
   150  000305  62                 	db	98	;'b'
   151  000306  72                 	db	114	;'r'
   152  000307  61                 	db	97	;'a'
   153  000308  74                 	db	116	;'t'
   154  000309  69                 	db	105	;'i'
   155  00030A  6F                 	db	111	;'o'
   156  00030B  6E                 	db	110	;'n'
   157  00030C  20                 	db	32
   158  00030D  64                 	db	100	;'d'
   159  00030E  6F                 	db	111	;'o'
   160  00030F  6E                 	db	110	;'n'
   161  000310  65                 	db	101	;'e'
   162  000311  00                 	db	0
   163  000312                     STR_9:
   164  000312  42                 	db	66	;'B'
   165  000313  75                 	db	117	;'u'
   166  000314  6C                 	db	108	;'l'
   167  000315  6C                 	db	108	;'l'
   168  000316  65                 	db	101	;'e'
   169  000317  74                 	db	116	;'t'
   170  000318  20                 	db	32
   171  000319  64                 	db	100	;'d'
   172  00031A  65                 	db	101	;'e'
   173  00031B  74                 	db	116	;'t'
   174  00031C  65                 	db	101	;'e'
   175  00031D  63                 	db	99	;'c'
   176  00031E  74                 	db	116	;'t'
   177  00031F  65                 	db	101	;'e'
   178  000320  64                 	db	100	;'d'
   179  000321  00                 	db	0
   180  000322                     STR_1:
   181  000322  43                 	db	67	;'C'
   182  000323  61                 	db	97	;'a'
   183  000324  6C                 	db	108	;'l'
   184  000325  69                 	db	105	;'i'
   185  000326  62                 	db	98	;'b'
   186  000327  72                 	db	114	;'r'
   187  000328  61                 	db	97	;'a'
   188  000329  74                 	db	116	;'t'
   189  00032A  69                 	db	105	;'i'
   190  00032B  6E                 	db	110	;'n'
   191  00032C  67                 	db	103	;'g'
   192  00032D  2E                 	db	46
   193  00032E  2E                 	db	46
   194  00032F  2E                 	db	46
   195  000330  00                 	db	0
   196  000331                     STR_7:
   197  000331  56                 	db	86	;'V'
   198  000332  5B                 	db	91	;'['
   199  000333  63                 	db	99	;'c'
   200  000334  6D                 	db	109	;'m'
   201  000335  2F                 	db	47
   202  000336  73                 	db	115	;'s'
   203  000337  5D                 	db	93	;']'
   204  000338  3A                 	db	58	;':'
   205  000339  20                 	db	32
   206  00033A  25                 	db	37
   207  00033B  66                 	db	102	;'f'
   208  00033C  00                 	db	0
   209  00033D                     STR_5:
   210  00033D  54                 	db	84	;'T'
   211  00033E  68                 	db	104	;'h'
   212  00033F  20                 	db	32
   213  000340  62                 	db	98	;'b'
   214  000341  72                 	db	114	;'r'
   215  000342  3A                 	db	58	;':'
   216  000343  20                 	db	32
   217  000344  25                 	db	37
   218  000345  64                 	db	100	;'d'
   219  000346  00                 	db	0
   220  000347                     STR_4:
   221  000347  54                 	db	84	;'T'
   222  000348  68                 	db	104	;'h'
   223  000349  20                 	db	32
   224  00034A  66                 	db	102	;'f'
   225  00034B  72                 	db	114	;'r'
   226  00034C  3A                 	db	58	;':'
   227  00034D  20                 	db	32
   228  00034E  25                 	db	37
   229  00034F  64                 	db	100	;'d'
   230  000350  00                 	db	0
   231  000351                     STR_6:
   232  000351  54                 	db	84	;'T'
   233  000352  5B                 	db	91	;'['
   234  000353  6D                 	db	109	;'m'
   235  000354  73                 	db	115	;'s'
   236  000355  5D                 	db	93	;']'
   237  000356  3A                 	db	58	;':'
   238  000357  20                 	db	32
   239  000358  25                 	db	37
   240  000359  66                 	db	102	;'f'
   241  00035A  00                 	db	0
   242  00035B                     STR_8:
   243  00035B  4D                 	db	77	;'M'
   244  00035C  65                 	db	101	;'e'
   245  00035D  61                 	db	97	;'a'
   246  00035E  73                 	db	115	;'s'
   247  00035F  75                 	db	117	;'u'
   248  000360  72                 	db	114	;'r'
   249  000361  69                 	db	105	;'i'
   250  000362  6E                 	db	110	;'n'
   251  000363  67                 	db	103	;'g'
   252  000364  00                 	db	0
   253  000365                     STR_11:
   254  000365  49                 	db	73	;'I'
   255  000366  4E                 	db	78	;'N'
   256  000367  46                 	db	70	;'F'
   257  000368  00                 	db	0
   258  000369                     STR_15:
   259  000369  4E                 	db	78	;'N'
   260  00036A  41                 	db	65	;'A'
   261  00036B  4E                 	db	78	;'N'
   262  00036C  00                 	db	0
   263  00036D                     STR_12:
   264  00036D  69                 	db	105	;'i'
   265  00036E  6E                 	db	110	;'n'
   266  00036F  66                 	db	102	;'f'
   267  000370  00                 	db	0
   268  000371                     STR_16:
   269  000371  6E                 	db	110	;'n'
   270  000372  61                 	db	97	;'a'
   271  000373  6E                 	db	110	;'n'
   272  000374  00                 	db	0
   273  000375                     STR_19:
   274  000375  6C                 	db	108	;'l'
   275  000376  66                 	db	102	;'f'
   276  000377  00                 	db	0
   277  000378  00                 	db	0	; dummy byte at the end
   278  0000                     
   279                           ; #config settings
   280                           
   281                           	psect	cinit
   282  003A5A                     __pcinit:
   283                           	callstack 0
   284  003A5A                     start_initialization:
   285                           	callstack 0
   286  003A5A                     __initialization:
   287                           	callstack 0
   288                           
   289                           ; Initialize objects allocated to BANK0 (2 bytes)
   290                           ; load TBLPTR registers with __pidataBANK0
   291  003A5A  0E14               	movlw	low __pidataBANK0
   292  003A5C  6EF6               	movwf	tblptrl,c
   293  003A5E  0E3D               	movlw	high __pidataBANK0
   294  003A60  6EF7               	movwf	tblptrh,c
   295  003A62  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   296  003A64  6EF8               	movwf	tblptru,c
   297  003A66  0009               	tblrd		*+	;fetch initializer
   298  003A68  CFF5 F0FB          	movff	tablat,__pdataBANK0
   299  003A6C  0009               	tblrd		*+	;fetch initializer
   300  003A6E  CFF5 F0FC          	movff	tablat,__pdataBANK0+1
   301                           
   302                           ; Clear objects allocated to BANK1 (178 bytes)
   303  003A72  EE01  F000         	lfsr	0,__pbssBANK1
   304  003A76  0EB2               	movlw	178
   305  003A78                     clear_0:
   306  003A78  6AEE               	clrf	postinc0,c
   307  003A7A  06E8               	decf	wreg,f,c
   308  003A7C  E1FD               	bnz	clear_0
   309                           
   310                           ; Clear objects allocated to BANK0 (12 bytes)
   311  003A7E  EE00  F0EF         	lfsr	0,__pbssBANK0
   312  003A82  0E0C               	movlw	12
   313  003A84                     clear_1:
   314  003A84  6AEE               	clrf	postinc0,c
   315  003A86  06E8               	decf	wreg,f,c
   316  003A88  E1FD               	bnz	clear_1
   317                           
   318                           ; Clear objects allocated to COMRAM (6 bytes)
   319  003A8A  6A5D               	clrf	(__pbssCOMRAM+5)& (0+255),c
   320  003A8C  6A5C               	clrf	(__pbssCOMRAM+4)& (0+255),c
   321  003A8E  6A5B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   322  003A90  6A5A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   323  003A92  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
   324  003A94  6A58               	clrf	__pbssCOMRAM& (0+255),c
   325  003A96                     end_of_initialization:
   326                           	callstack 0
   327  003A96                     __end_of__initialization:
   328                           	callstack 0
   329  003A96  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   330  003A98  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   331  003A9A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   332  003A9C  6EF8               	movwf	tblptru,c
   333  003A9E  0100               	movlb	0
   334  003AA0  EF79  F012         	goto	_main	;jump to C main() function
   335                           
   336                           	psect	bssCOMRAM
   337  000058                     __pbssCOMRAM:
   338                           	callstack 0
   339  000058                     _prec:
   340                           	callstack 0
   341  000058                     	ds	2
   342  00005A                     _flags:
   343                           	callstack 0
   344  00005A                     	ds	2
   345  00005C                     _LCD_RS_flag:
   346                           	callstack 0
   347  00005C                     	ds	2
   348                           
   349                           	psect	bssBANK0
   350  0000EF                     __pbssBANK0:
   351                           	callstack 0
   352  0000EF                     _nout:
   353                           	callstack 0
   354  0000EF                     	ds	2
   355  0000F1                     _width:
   356                           	callstack 0
   357  0000F1                     	ds	2
   358  0000F3                     _button_pushed:
   359                           	callstack 0
   360  0000F3                     	ds	2
   361  0000F5                     _timer_overflows:
   362                           	callstack 0
   363  0000F5                     	ds	2
   364  0000F7                     _threshold_back:
   365                           	callstack 0
   366  0000F7                     	ds	2
   367  0000F9                     _threshold_front:
   368                           	callstack 0
   369  0000F9                     	ds	2
   370                           
   371                           	psect	dataBANK0
   372  0000FB                     __pdataBANK0:
   373                           	callstack 0
   374  0000FB                     _gate_distance:
   375                           	callstack 0
   376  0000FB                     	ds	2
   377                           
   378                           	psect	bssBANK1
   379  000100                     __pbssBANK1:
   380                           	callstack 0
   381  000100                     	ds	20
   382  000114                     	ds	20
   383  000128                     	ds	20
   384  00013C                     	ds	20
   385  000150                     	ds	10
   386  00015A                     floorf@F526:
   387                           	callstack 0
   388  00015A                     	ds	4
   389  00015E                     ___fpclassifyf@F465:
   390                           	callstack 0
   391  00015E                     	ds	4
   392  000162                     _dbuf:
   393                           	callstack 0
   394  000162                     	ds	80
   395                           
   396                           	psect	cstackBANK0
   397  000060                     __pcstackBANK0:
   398                           	callstack 0
   399  000060                     _efgtoa$747:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x0
   403  000060                     	ds	2
   404  000062                     _efgtoa$754:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x2
   408  000062                     	ds	2
   409  000064                     _efgtoa$755:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x4
   413  000064                     	ds	2
   414  000066                     efgtoa@t:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x6
   418  000066                     	ds	2
   419  000068                     efgtoa@pp:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x8
   423  000068                     	ds	2
   424  00006A                     efgtoa@ne:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0xA
   428  00006A                     	ds	2
   429  00006C                     efgtoa@m:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0xC
   433  00006C                     	ds	2
   434  00006E                     efgtoa@ou:
   435                           	callstack 0
   436                           
   437                           ; 4 bytes @ 0xE
   438  00006E                     	ds	4
   439  000072                     efgtoa@d:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x12
   443  000072                     	ds	2
   444  000074                     efgtoa@sign:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x14
   448  000074                     	ds	2
   449  000076                     efgtoa@p:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x16
   453  000076                     	ds	2
   454  000078                     efgtoa@w:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x18
   458  000078                     	ds	2
   459  00007A                     efgtoa@nmode:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x1A
   463  00007A                     	ds	1
   464  00007B                     efgtoa@mode:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x1B
   468  00007B                     	ds	1
   469  00007C                     efgtoa@h:
   470                           	callstack 0
   471                           
   472                           ; 4 bytes @ 0x1C
   473  00007C                     	ds	4
   474  000080                     efgtoa@l:
   475                           	callstack 0
   476                           
   477                           ; 4 bytes @ 0x20
   478  000080                     	ds	4
   479  000084                     efgtoa@i:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x24
   483  000084                     	ds	2
   484  000086                     efgtoa@g:
   485                           	callstack 0
   486                           
   487                           ; 4 bytes @ 0x26
   488  000086                     	ds	4
   489  00008A                     efgtoa@e:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x2A
   493  00008A                     	ds	2
   494  00008C                     efgtoa@n:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x2C
   498  00008C                     	ds	2
   499  00008E                     efgtoa@u:
   500                           	callstack 0
   501                           
   502                           ; 4 bytes @ 0x2E
   503  00008E                     	ds	4
   504  000092                     ?_vfpfcnvrt:
   505                           	callstack 0
   506  000092                     vfpfcnvrt@fp:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x32
   510  000092                     	ds	2
   511  000094                     vfpfcnvrt@fmt:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x34
   515  000094                     	ds	2
   516  000096                     vfpfcnvrt@ap:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x36
   520  000096                     	ds	2
   521  000098                     ?_vfprintf:
   522                           	callstack 0
   523  000098                     vfprintf@fp:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x38
   527  000098                     	ds	2
   528  00009A                     vfprintf@fmt:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x3A
   532  00009A                     	ds	2
   533  00009C                     vfprintf@ap:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x3C
   537  00009C                     	ds	2
   538  00009E                     ?_sprintf:
   539                           	callstack 0
   540  00009E                     sprintf@s:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x3E
   544  00009E                     	ds	2
   545  0000A0                     sprintf@fmt:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x40
   549  0000A0                     	ds	6
   550  0000A6                     sprintf@ap:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x46
   554  0000A6                     	ds	2
   555  0000A8                     sprintf@f:
   556                           	callstack 0
   557                           
   558                           ; 11 bytes @ 0x48
   559  0000A8                     	ds	11
   560  0000B3                     print_time_velocity@time:
   561                           	callstack 0
   562  0000B3                     print_threshold@message_fr:
   563                           	callstack 0
   564                           
   565                           ; 20 bytes @ 0x53
   566  0000B3                     	ds	4
   567  0000B7                     print_time_velocity@velocity:
   568                           	callstack 0
   569                           
   570                           ; 4 bytes @ 0x57
   571  0000B7                     	ds	4
   572  0000BB                     print_time_velocity@message_fr:
   573                           	callstack 0
   574                           
   575                           ; 20 bytes @ 0x5B
   576  0000BB                     	ds	12
   577  0000C7                     print_threshold@message_bc:
   578                           	callstack 0
   579                           
   580                           ; 20 bytes @ 0x67
   581  0000C7                     	ds	8
   582  0000CF                     print_time_velocity@message_bc:
   583                           	callstack 0
   584                           
   585                           ; 20 bytes @ 0x6F
   586  0000CF                     	ds	20
   587  0000E3                     main@velocity:
   588                           	callstack 0
   589                           
   590                           ; 4 bytes @ 0x83
   591  0000E3                     	ds	4
   592  0000E7                     main@front:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x87
   596  0000E7                     	ds	2
   597  0000E9                     main@back:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x89
   601  0000E9                     	ds	2
   602  0000EB                     main@time:
   603                           	callstack 0
   604                           
   605                           ; 4 bytes @ 0x8B
   606  0000EB                     	ds	4
   607                           
   608                           	psect	cstackCOMRAM
   609  000001                     __pcstackCOMRAM:
   610                           	callstack 0
   611  000001                     ?_strlen:
   612                           	callstack 0
   613  000001                     ?___fpclassifyf:
   614                           	callstack 0
   615  000001                     ?_isupper:
   616                           	callstack 0
   617  000001                     ?_strncmp:
   618                           	callstack 0
   619  000001                     ?___awdiv:
   620                           	callstack 0
   621  000001                     ?___awmod:
   622                           	callstack 0
   623  000001                     ?___fladd:
   624                           	callstack 0
   625  000001                     ?___fldiv:
   626                           	callstack 0
   627  000001                     ?___flmul:
   628                           	callstack 0
   629  000001                     ?___aldiv:
   630                           	callstack 0
   631  000001                     ?___flneg:
   632                           	callstack 0
   633  000001                     ?___fltol:
   634                           	callstack 0
   635  000001                     ?___xxtofl:
   636                           	callstack 0
   637  000001                     ?___aodiv:
   638                           	callstack 0
   639  000001                     ?___aomod:
   640                           	callstack 0
   641  000001                     lcd_write@c:
   642                           	callstack 0
   643  000001                     change_position@position:
   644                           	callstack 0
   645  000001                     ___awdiv@dividend:
   646                           	callstack 0
   647  000001                     ___awmod@dividend:
   648                           	callstack 0
   649  000001                     isupper@c:
   650                           	callstack 0
   651  000001                     fputc@c:
   652                           	callstack 0
   653  000001                     strcpy@dest:
   654                           	callstack 0
   655  000001                     strlen@s:
   656                           	callstack 0
   657  000001                     strncmp@_l:
   658                           	callstack 0
   659  000001                     ___aldiv@dividend:
   660                           	callstack 0
   661  000001                     ___fleq@ff1:
   662                           	callstack 0
   663  000001                     ___flneg@f1:
   664                           	callstack 0
   665  000001                     ___fltol@f1:
   666                           	callstack 0
   667  000001                     ___fladd@b:
   668                           	callstack 0
   669  000001                     ___fldiv@b:
   670                           	callstack 0
   671  000001                     ___flmul@b:
   672                           	callstack 0
   673  000001                     ___xxtofl@val:
   674                           	callstack 0
   675  000001                     ___fpclassifyf@x:
   676                           	callstack 0
   677  000001                     ___aodiv@dividend:
   678                           	callstack 0
   679  000001                     ___aomod@dividend:
   680                           	callstack 0
   681                           
   682                           ; 8 bytes @ 0x0
   683  000001                     	ds	1
   684  000002                     ??_lcd_clear:
   685  000002                     ??_lcd_init:
   686  000002                     lcd_goto@pos:
   687                           	callstack 0
   688  000002                     lcd_puts@s:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x1
   692  000002                     	ds	1
   693  000003                     ??_isupper:
   694  000003                     ___awdiv@divisor:
   695                           	callstack 0
   696  000003                     ___awmod@divisor:
   697                           	callstack 0
   698  000003                     fputc@fp:
   699                           	callstack 0
   700  000003                     strcpy@src:
   701                           	callstack 0
   702  000003                     strlen@a:
   703                           	callstack 0
   704  000003                     strncmp@_r:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x2
   708  000003                     	ds	1
   709  000004                     
   710                           ; 1 bytes @ 0x3
   711  000004                     	ds	1
   712  000005                     ??_fputc:
   713  000005                     ??___fpclassifyf:
   714  000005                     ??_strcpy:
   715  000005                     ??___fltol:
   716  000005                     ??___xxtofl:
   717  000005                     ___awdiv@counter:
   718                           	callstack 0
   719  000005                     ___awmod@counter:
   720                           	callstack 0
   721  000005                     strncmp@n:
   722                           	callstack 0
   723  000005                     ___aldiv@divisor:
   724                           	callstack 0
   725  000005                     ___fleq@ff2:
   726                           	callstack 0
   727  000005                     ___fladd@a:
   728                           	callstack 0
   729  000005                     ___fldiv@a:
   730                           	callstack 0
   731  000005                     ___flmul@a:
   732                           	callstack 0
   733                           
   734                           ; 4 bytes @ 0x4
   735  000005                     	ds	1
   736  000006                     ___awdiv@sign:
   737                           	callstack 0
   738  000006                     ___awmod@sign:
   739                           	callstack 0
   740                           
   741                           ; 1 bytes @ 0x5
   742  000006                     	ds	1
   743  000007                     ??_strncmp:
   744  000007                     ?_tolower:
   745                           	callstack 0
   746  000007                     ___awdiv@quotient:
   747                           	callstack 0
   748  000007                     strcpy@s:
   749                           	callstack 0
   750  000007                     tolower@c:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x6
   754  000007                     	ds	1
   755  000008                     strncmp@l:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x7
   759  000008                     	ds	1
   760  000009                     ??___fladd:
   761  000009                     ??___fldiv:
   762  000009                     ??___flmul:
   763  000009                     ??_tolower:
   764  000009                     ??___fleq:
   765  000009                     ?_read_adc:
   766                           	callstack 0
   767  000009                     ___aldiv@counter:
   768                           	callstack 0
   769  000009                     ___fltol@sign1:
   770                           	callstack 0
   771  000009                     ___xxtofl@sign:
   772                           	callstack 0
   773  000009                     ___fpclassifyf@e:
   774                           	callstack 0
   775  000009                     strcpy@d:
   776                           	callstack 0
   777  000009                     ___aodiv@divisor:
   778                           	callstack 0
   779  000009                     ___aomod@divisor:
   780                           	callstack 0
   781                           
   782                           ; 8 bytes @ 0x8
   783  000009                     	ds	1
   784  00000A                     ___aldiv@sign:
   785                           	callstack 0
   786  00000A                     ___fltol@exp1:
   787                           	callstack 0
   788  00000A                     ___xxtofl@exp:
   789                           	callstack 0
   790  00000A                     fputs@s:
   791                           	callstack 0
   792  00000A                     strncmp@r:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x9
   796  00000A                     	ds	1
   797  00000B                     read_adc@result:
   798                           	callstack 0
   799  00000B                     ___aldiv@quotient:
   800                           	callstack 0
   801  00000B                     ___xxtofl@arg:
   802                           	callstack 0
   803  00000B                     ___fpclassifyf@u:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0xA
   807  00000B                     	ds	1
   808  00000C                     fputs@fp:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0xB
   812  00000C                     	ds	1
   813  00000D                     ??_calibrate:
   814  00000D                     ___fladd@signs:
   815                           	callstack 0
   816  00000D                     ___flmul@sign:
   817                           	callstack 0
   818  00000D                     ___fldiv@rem:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0xC
   822  00000D                     	ds	1
   823  00000E                     ___fladd@aexp:
   824                           	callstack 0
   825  00000E                     fputs@c:
   826                           	callstack 0
   827  00000E                     ___flmul@grs:
   828                           	callstack 0
   829                           
   830                           ; 4 bytes @ 0xD
   831  00000E                     	ds	1
   832  00000F                     ?_calculate_time:
   833                           	callstack 0
   834  00000F                     ___fladd@bexp:
   835                           	callstack 0
   836  00000F                     calibrate@i:
   837                           	callstack 0
   838  00000F                     fputs@i:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0xE
   842  00000F                     	ds	1
   843  000010                     ___fladd@grs:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0xF
   847  000010                     	ds	1
   848  000011                     ?_pad:
   849                           	callstack 0
   850  000011                     ___aodiv@counter:
   851                           	callstack 0
   852  000011                     ___aomod@counter:
   853                           	callstack 0
   854  000011                     ___fldiv@sign:
   855                           	callstack 0
   856  000011                     calibrate@i_106:
   857                           	callstack 0
   858  000011                     pad@fp:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x10
   862  000011                     	ds	1
   863  000012                     ___aodiv@sign:
   864                           	callstack 0
   865  000012                     ___aomod@sign:
   866                           	callstack 0
   867  000012                     ___flmul@aexp:
   868                           	callstack 0
   869  000012                     ___fldiv@new_exp:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x11
   873  000012                     	ds	1
   874  000013                     ??_calculate_time:
   875  000013                     ?_abs:
   876                           	callstack 0
   877  000013                     ___flmul@bexp:
   878                           	callstack 0
   879  000013                     calibrate@sum:
   880                           	callstack 0
   881  000013                     pad@buf:
   882                           	callstack 0
   883  000013                     abs@a:
   884                           	callstack 0
   885  000013                     ___aodiv@quotient:
   886                           	callstack 0
   887                           
   888                           ; 8 bytes @ 0x12
   889  000013                     	ds	1
   890  000014                     ___fldiv@grs:
   891                           	callstack 0
   892  000014                     ___flmul@prod:
   893                           	callstack 0
   894                           
   895                           ; 4 bytes @ 0x13
   896  000014                     	ds	1
   897  000015                     ??_abs:
   898  000015                     calculate_time@result:
   899                           	callstack 0
   900  000015                     pad@p:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x14
   904  000015                     	ds	2
   905  000017                     ??_pad:
   906                           
   907                           ; 1 bytes @ 0x16
   908  000017                     	ds	1
   909  000018                     ___fldiv@bexp:
   910                           	callstack 0
   911  000018                     ___flmul@temp:
   912                           	callstack 0
   913  000018                     pad@i:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x17
   917  000018                     	ds	1
   918  000019                     ___fldiv@aexp:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x18
   922  000019                     	ds	1
   923  00001A                     ?___flsub:
   924                           	callstack 0
   925  00001A                     ?_floorf:
   926                           	callstack 0
   927  00001A                     ?_calculate_velocity:
   928                           	callstack 0
   929  00001A                     pad@w:
   930                           	callstack 0
   931  00001A                     calculate_velocity@time:
   932                           	callstack 0
   933  00001A                     ___flge@ff1:
   934                           	callstack 0
   935  00001A                     ___flsub@b:
   936                           	callstack 0
   937  00001A                     floorf@x:
   938                           	callstack 0
   939                           
   940                           ; 4 bytes @ 0x19
   941  00001A                     	ds	2
   942  00001C                     ?_dtoa:
   943                           	callstack 0
   944  00001C                     dtoa@fp:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x1B
   948  00001C                     	ds	2
   949  00001E                     ??_floorf:
   950  00001E                     ___flge@ff2:
   951                           	callstack 0
   952  00001E                     ___flsub@a:
   953                           	callstack 0
   954  00001E                     _calculate_velocity$1106:
   955                           	callstack 0
   956  00001E                     dtoa@d:
   957                           	callstack 0
   958                           
   959                           ; 8 bytes @ 0x1D
   960  00001E                     	ds	4
   961  000022                     ??___flge:
   962                           
   963                           ; 1 bytes @ 0x21
   964  000022                     	ds	2
   965  000024                     floorf@m:
   966                           	callstack 0
   967                           
   968                           ; 4 bytes @ 0x23
   969  000024                     	ds	2
   970  000026                     ??_dtoa:
   971                           
   972                           ; 1 bytes @ 0x25
   973  000026                     	ds	2
   974  000028                     floorf@e:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x27
   978  000028                     	ds	2
   979  00002A                     floorf@u:
   980                           	callstack 0
   981                           
   982                           ; 4 bytes @ 0x29
   983  00002A                     	ds	4
   984  00002E                     ?_efgtoa:
   985                           	callstack 0
   986  00002E                     _dtoa$723:
   987                           	callstack 0
   988  00002E                     efgtoa@fp:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0x2D
   992  00002E                     	ds	2
   993  000030                     dtoa@p:
   994                           	callstack 0
   995  000030                     efgtoa@f:
   996                           	callstack 0
   997                           
   998                           ; 4 bytes @ 0x2F
   999  000030                     	ds	2
  1000  000032                     dtoa@w:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x31
  1004  000032                     	ds	2
  1005  000034                     efgtoa@c:
  1006                           	callstack 0
  1007  000034                     dtoa@s:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x33
  1011  000034                     	ds	1
  1012  000035                     ??_efgtoa:
  1013                           
  1014                           ; 1 bytes @ 0x34
  1015  000035                     	ds	1
  1016  000036                     dtoa@n:
  1017                           	callstack 0
  1018                           
  1019                           ; 8 bytes @ 0x35
  1020  000036                     	ds	8
  1021  00003E                     dtoa@i:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x3D
  1025  00003E                     	ds	2
  1026  000040                     ??_vfpfcnvrt:
  1027                           
  1028                           ; 1 bytes @ 0x3F
  1029  000040                     	ds	4
  1030  000044                     vfpfcnvrt@ll:
  1031                           	callstack 0
  1032                           
  1033                           ; 8 bytes @ 0x43
  1034  000044                     	ds	8
  1035  00004C                     vfpfcnvrt@f:
  1036                           	callstack 0
  1037                           
  1038                           ; 4 bytes @ 0x4B
  1039  00004C                     	ds	4
  1040  000050                     vfpfcnvrt@ct:
  1041                           	callstack 0
  1042                           
  1043                           ; 3 bytes @ 0x4F
  1044  000050                     	ds	3
  1045  000053                     vfpfcnvrt@c:
  1046                           	callstack 0
  1047                           
  1048                           ; 1 bytes @ 0x52
  1049  000053                     	ds	1
  1050  000054                     vfprintf@cfmt:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x53
  1054  000054                     	ds	2
  1055  000056                     ??_main:
  1056                           
  1057                           ; 1 bytes @ 0x55
  1058  000056                     	ds	2
  1059                           
  1060 ;;
  1061 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1062 ;;
  1063 ;; *************** function _main *****************
  1064 ;; Defined at:
  1065 ;;		line 216 in file "main.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  time            4  139[BANK0 ] PTR const unsigned char 
  1070 ;;  velocity        4  131[BANK0 ] PTR const unsigned char 
  1071 ;;  back            2  137[BANK0 ] int 
  1072 ;;  front           2  135[BANK0 ] int 
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  1    wreg      void 
  1075 ;; Registers used:
  1076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1082 ;;      Params:         0       0       0       0
  1083 ;;      Locals:         0      12       0       0
  1084 ;;      Temps:          2       0       0       0
  1085 ;;      Totals:         2      12       0       0
  1086 ;;Total ram usage:       14 bytes
  1087 ;; Hardware stack levels required when called: 10
  1088 ;; This function calls:
  1089 ;;		_calculate_time
  1090 ;;		_calculate_velocity
  1091 ;;		_calibrate
  1092 ;;		_change_position
  1093 ;;		_lcd_clear
  1094 ;;		_lcd_goto
  1095 ;;		_lcd_init
  1096 ;;		_lcd_puts
  1097 ;;		_print_threshold
  1098 ;;		_print_time_velocity
  1099 ;;		_read_adc
  1100 ;;		_setup_buttons_int
  1101 ;;		_setup_timer_int
  1102 ;; This function is called by:
  1103 ;;		Startup code after reset
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text0
  1108  0024F2                     __ptext0:
  1109                           	callstack 0
  1110  0024F2                     _main:
  1111                           	callstack 21
  1112  0024F2                     
  1113                           ;main.c: 217: 
  1114  0024F2  50D3               	movf	211,w,c	;volatile
  1115  0024F4  0B8F               	andlw	143
  1116  0024F6  0970               	iorlw	112
  1117  0024F8  6ED3               	movwf	211,c	;volatile
  1118  0024FA                     
  1119                           ;main.c: 219:     TRISC = 0x00;
  1120  0024FA  6893               	setf	147,c	;volatile
  1121  0024FC                     
  1122                           ;main.c: 220: 
  1123  0024FC  0E00               	movlw	0
  1124  0024FE  010F               	movlb	15	; () banked
  1125  002500  6F39               	movwf	57,b	;volatile
  1126  002502                     
  1127                           ; BSR set to: 15
  1128                           ;main.c: 222:     PORTE = 0xff;
  1129  002502  6938               	setf	56,b	;volatile
  1130  002504                     
  1131                           ; BSR set to: 15
  1132                           ;main.c: 223: 
  1133  002504  6892               	setf	146,c	;volatile
  1134  002506                     
  1135                           ; BSR set to: 15
  1136                           ;main.c: 226: 
  1137  002506  0E00               	movlw	0
  1138  002508  6E95               	movwf	149,c	;volatile
  1139  00250A                     
  1140                           ; BSR set to: 15
  1141                           ;main.c: 229:     lcd_goto(0);
  1142  00250A  0E01               	movlw	1
  1143  00250C  6EC2               	movwf	194,c	;volatile
  1144  00250E                     
  1145                           ; BSR set to: 15
  1146                           ;main.c: 231:     calibrate();
  1147  00250E  0E00               	movlw	0
  1148  002510  6EC1               	movwf	193,c	;volatile
  1149  002512                     
  1150                           ; BSR set to: 15
  1151                           ;main.c: 233:     _delay((unsigned long)((100000)*(128000/4000.0)));
  1152  002512  0E29               	movlw	41
  1153  002514  6EC0               	movwf	192,c	;volatile
  1154  002516                     
  1155                           ; BSR set to: 15
  1156                           ;main.c: 236: 
  1157  002516  0E00               	movlw	0
  1158  002518  6E94               	movwf	148,c	;volatile
  1159  00251A                     
  1160                           ; BSR set to: 15
  1161                           ;main.c: 238: 
  1162  00251A  0E00               	movlw	0
  1163  00251C  6E96               	movwf	150,c	;volatile
  1164  00251E                     
  1165                           ; BSR set to: 15
  1166                           ;main.c: 239:     print_threshold();
  1167  00251E  6884               	setf	132,c	;volatile
  1168  002520                     
  1169                           ; BSR set to: 15
  1170                           ;main.c: 241:     lcd_clear();
  1171  002520  EC6F  F01E         	call	_setup_timer_int	;wreg free
  1172  002524                     
  1173                           ;main.c: 242:     lcd_goto(0);
  1174  002524  EC84  F01E         	call	_setup_buttons_int	;wreg free
  1175  002528                     
  1176                           ;main.c: 244: 
  1177  002528  ECE1  F016         	call	_lcd_init	;wreg free
  1178  00252C                     
  1179                           ;main.c: 245:     while(1) {
  1180  00252C  EC4F  F01E         	call	_lcd_clear	;wreg free
  1181  002530                     
  1182                           ;main.c: 246: 
  1183  002530  0E00               	movlw	0
  1184  002532  EC7A  F01E         	call	_lcd_goto
  1185  002536                     
  1186                           ;main.c: 248: 
  1187  002536  ECCC  F015         	call	_calibrate	;wreg free
  1188  00253A                     
  1189                           ;main.c: 249:         if (front < threshold_front) {
  1190  00253A  0E11               	movlw	17
  1191  00253C  6E57               	movwf	(??_main+1)^0,c
  1192  00253E  0E3C               	movlw	60
  1193  002540  6E56               	movwf	??_main^0,c
  1194  002542  0ECB               	movlw	203
  1195  002544                     u5457:
  1196  002544  2EE8               	decfsz	wreg,f,c
  1197  002546  D7FE               	bra	u5457
  1198  002548  2E56               	decfsz	??_main^0,f,c
  1199  00254A  D7FC               	bra	u5457
  1200  00254C  2E57               	decfsz	(??_main+1)^0,f,c
  1201  00254E  D7FA               	bra	u5457
  1202  002550  F000               	nop	
  1203  002552                     
  1204                           ;main.c: 250: 
  1205  002552  0E11               	movlw	17
  1206  002554  6E57               	movwf	(??_main+1)^0,c
  1207  002556  0E3C               	movlw	60
  1208  002558  6E56               	movwf	??_main^0,c
  1209  00255A  0ECB               	movlw	203
  1210  00255C                     u5467:
  1211  00255C  2EE8               	decfsz	wreg,f,c
  1212  00255E  D7FE               	bra	u5467
  1213  002560  2E56               	decfsz	??_main^0,f,c
  1214  002562  D7FC               	bra	u5467
  1215  002564  2E57               	decfsz	(??_main+1)^0,f,c
  1216  002566  D7FA               	bra	u5467
  1217  002568  F000               	nop	
  1218  00256A                     
  1219                           ;main.c: 252:             TMR0ON = 1;
  1220  00256A  0E00               	movlw	0
  1221  00256C  6E02               	movwf	(change_position@position+1)^0,c
  1222  00256E  0E00               	movlw	0
  1223  002570  6E01               	movwf	change_position@position^0,c
  1224  002572  EC5F  F01E         	call	_change_position	;wreg free
  1225  002576                     
  1226                           ;main.c: 256: 
  1227  002576  EC01  F01C         	call	_print_threshold	;wreg free
  1228  00257A                     
  1229                           ;main.c: 257:             while(1) {
  1230  00257A  0E41               	movlw	65
  1231  00257C  6E57               	movwf	(??_main+1)^0,c
  1232  00257E  0EF0               	movlw	240
  1233  002580  6E56               	movwf	??_main^0,c
  1234  002582  0E33               	movlw	51
  1235  002584                     u5477:
  1236  002584  2EE8               	decfsz	wreg,f,c
  1237  002586  D7FE               	bra	u5477
  1238  002588  2E56               	decfsz	??_main^0,f,c
  1239  00258A  D7FC               	bra	u5477
  1240  00258C  2E57               	decfsz	(??_main+1)^0,f,c
  1241  00258E  D7FA               	bra	u5477
  1242  002590  F000               	nop	
  1243  002592                     
  1244                           ;main.c: 258: 
  1245  002592  EC4F  F01E         	call	_lcd_clear	;wreg free
  1246  002596                     
  1247                           ;main.c: 259:                 int back = read_adc();
  1248  002596  0E00               	movlw	0
  1249  002598  EC7A  F01E         	call	_lcd_goto
  1250  00259C                     
  1251                           ;main.c: 260: 
  1252  00259C  0E5B               	movlw	low STR_8
  1253  00259E  6E02               	movwf	lcd_puts@s^0,c
  1254  0025A0  0E03               	movlw	high STR_8
  1255  0025A2  6E03               	movwf	(lcd_puts@s+1)^0,c
  1256  0025A4  EC72  F01C         	call	_lcd_puts	;wreg free
  1257  0025A8                     l4831:
  1258                           
  1259                           ;main.c: 264:                     TMR0ON = 0;
  1260  0025A8  ECBA  F01D         	call	_read_adc	;wreg free
  1261  0025AC  C009  F0E7         	movff	?_read_adc,main@front
  1262  0025B0  C00A  F0E8         	movff	?_read_adc+1,main@front+1
  1263  0025B4                     
  1264                           ;main.c: 266:                     timer_overflows = 0;
  1265  0025B4  0100               	movlb	0	; () banked
  1266  0025B6  51F9               	movf	_threshold_front& (0+255),w,b
  1267  0025B8  5DE7               	subwf	main@front& (0+255),w,b
  1268  0025BA  51E8               	movf	(main@front+1)& (0+255),w,b
  1269  0025BC  0A80               	xorlw	128
  1270  0025BE  6E56               	movwf	??_main^0,c
  1271  0025C0  51FA               	movf	(_threshold_front+1)& (0+255),w,b
  1272  0025C2  0A80               	xorlw	128
  1273  0025C4  5856               	subwfb	??_main^0,w,c
  1274  0025C6  B0D8               	btfsc	status,0,c
  1275  0025C8  EFE8  F012         	goto	u5401
  1276  0025CC  EFEA  F012         	goto	u5400
  1277  0025D0                     u5401:
  1278  0025D0  EFD4  F012         	goto	l4831
  1279  0025D4                     u5400:
  1280  0025D4                     
  1281                           ; BSR set to: 0
  1282                           ;main.c: 269:                     lcd_clear();
  1283  0025D4  8ED5               	bsf	4053,7,c	;volatile
  1284  0025D6                     
  1285                           ; BSR set to: 0
  1286                           ;main.c: 271:                     lcd_puts("Bullet detected");
  1287  0025D6  0E0D               	movlw	13
  1288  0025D8  6E83               	movwf	131,c	;volatile
  1289  0025DA                     
  1290                           ; BSR set to: 0
  1291                           ;main.c: 272: 
  1292  0025DA  0E00               	movlw	0
  1293  0025DC  6E02               	movwf	(change_position@position+1)^0,c
  1294  0025DE  0E01               	movlw	1
  1295  0025E0  6E01               	movwf	change_position@position^0,c
  1296  0025E2  EC5F  F01E         	call	_change_position	;wreg free
  1297  0025E6                     l4841:
  1298                           
  1299                           ;main.c: 276: 
  1300  0025E6  ECBA  F01D         	call	_read_adc	;wreg free
  1301  0025EA  C009  F0E9         	movff	?_read_adc,main@back
  1302  0025EE  C00A  F0EA         	movff	?_read_adc+1,main@back+1
  1303  0025F2                     
  1304                           ;main.c: 278:                     while (button_pushed == 0) {}
  1305  0025F2  0100               	movlb	0	; () banked
  1306  0025F4  51F7               	movf	_threshold_back& (0+255),w,b
  1307  0025F6  5DE9               	subwf	main@back& (0+255),w,b
  1308  0025F8  51EA               	movf	(main@back+1)& (0+255),w,b
  1309  0025FA  0A80               	xorlw	128
  1310  0025FC  6E56               	movwf	??_main^0,c
  1311  0025FE  51F8               	movf	(_threshold_back+1)& (0+255),w,b
  1312  002600  0A80               	xorlw	128
  1313  002602  5856               	subwfb	??_main^0,w,c
  1314  002604  B0D8               	btfsc	status,0,c
  1315  002606  EF07  F013         	goto	u5411
  1316  00260A  EF09  F013         	goto	u5410
  1317  00260E                     u5411:
  1318  00260E  EFF3  F012         	goto	l4841
  1319  002612                     u5410:
  1320  002612                     
  1321                           ; BSR set to: 0
  1322                           ;main.c: 281:                     PORTD = 0x00;
  1323  002612  9ED5               	bcf	4053,7,c	;volatile
  1324  002614                     
  1325                           ; BSR set to: 0
  1326                           ;main.c: 282:                     lcd_clear();
  1327  002614  EC76  F01B         	call	_calculate_time	;wreg free
  1328  002618  C00F  F0EB         	movff	?_calculate_time,main@time
  1329  00261C  C010  F0EC         	movff	?_calculate_time+1,main@time+1
  1330  002620  C011  F0ED         	movff	?_calculate_time+2,main@time+2
  1331  002624  C012  F0EE         	movff	?_calculate_time+3,main@time+3
  1332  002628                     
  1333                           ;main.c: 283:                     lcd_goto(0);
  1334  002628  0E00               	movlw	0
  1335  00262A  0100               	movlb	0	; () banked
  1336  00262C  6FF6               	movwf	(_timer_overflows+1)& (0+255),b
  1337  00262E  0E00               	movlw	0
  1338  002630  6FF5               	movwf	_timer_overflows& (0+255),b
  1339  002632                     
  1340                           ; BSR set to: 0
  1341                           ;main.c: 284:                     lcd_puts("Measuring");
  1342  002632  C0EB  F01A         	movff	main@time,calculate_velocity@time
  1343  002636  C0EC  F01B         	movff	main@time+1,calculate_velocity@time+1
  1344  00263A  C0ED  F01C         	movff	main@time+2,calculate_velocity@time+2
  1345  00263E  C0EE  F01D         	movff	main@time+3,calculate_velocity@time+3
  1346  002642  EC3D  F01C         	call	_calculate_velocity	;wreg free
  1347  002646  C01A  F0E3         	movff	?_calculate_velocity,main@velocity
  1348  00264A  C01B  F0E4         	movff	?_calculate_velocity+1,main@velocity+1
  1349  00264E  C01C  F0E5         	movff	?_calculate_velocity+2,main@velocity+2
  1350  002652  C01D  F0E6         	movff	?_calculate_velocity+3,main@velocity+3
  1351  002656                     
  1352                           ;main.c: 286:                 }
  1353  002656  EC4F  F01E         	call	_lcd_clear	;wreg free
  1354  00265A                     
  1355                           ;main.c: 287:             }
  1356  00265A  0E00               	movlw	0
  1357  00265C  EC7A  F01E         	call	_lcd_goto
  1358  002660                     
  1359                           ;main.c: 288: 
  1360  002660  0E12               	movlw	low STR_9
  1361  002662  6E02               	movwf	lcd_puts@s^0,c
  1362  002664  0E03               	movlw	high STR_9
  1363  002666  6E03               	movwf	(lcd_puts@s+1)^0,c
  1364  002668  EC72  F01C         	call	_lcd_puts	;wreg free
  1365  00266C                     
  1366                           ;main.c: 290:         }
  1367  00266C  0EDD               	movlw	221
  1368  00266E  6E83               	movwf	131,c	;volatile
  1369  002670                     
  1370                           ;main.c: 291: 
  1371  002670  0E11               	movlw	17
  1372  002672  6E57               	movwf	(??_main+1)^0,c
  1373  002674  0E3C               	movlw	60
  1374  002676  6E56               	movwf	??_main^0,c
  1375  002678  0ECB               	movlw	203
  1376  00267A                     u5487:
  1377  00267A  2EE8               	decfsz	wreg,f,c
  1378  00267C  D7FE               	bra	u5487
  1379  00267E  2E56               	decfsz	??_main^0,f,c
  1380  002680  D7FC               	bra	u5487
  1381  002682  2E57               	decfsz	(??_main+1)^0,f,c
  1382  002684  D7FA               	bra	u5487
  1383  002686  F000               	nop	
  1384  002688                     
  1385                           ;main.c: 292:     }
  1386  002688  C0EB  F0B3         	movff	main@time,print_time_velocity@time
  1387  00268C  C0EC  F0B4         	movff	main@time+1,print_time_velocity@time+1
  1388  002690  C0ED  F0B5         	movff	main@time+2,print_time_velocity@time+2
  1389  002694  C0EE  F0B6         	movff	main@time+3,print_time_velocity@time+3
  1390  002698  C0E3  F0B7         	movff	main@velocity,print_time_velocity@velocity
  1391  00269C  C0E4  F0B8         	movff	main@velocity+1,print_time_velocity@velocity+1
  1392  0026A0  C0E5  F0B9         	movff	main@velocity+2,print_time_velocity@velocity+2
  1393  0026A4  C0E6  F0BA         	movff	main@velocity+3,print_time_velocity@velocity+3
  1394  0026A8  ECBD  F01B         	call	_print_time_velocity	;wreg free
  1395  0026AC  88F2               	bsf	4082,4,c	;volatile
  1396  0026AE                     l4867:
  1397  0026AE  0100               	movlb	0	; () banked
  1398  0026B0  51F3               	movf	_button_pushed& (0+255),w,b
  1399  0026B2  11F4               	iorwf	(_button_pushed+1)& (0+255),w,b
  1400  0026B4  B4D8               	btfsc	status,2,c
  1401  0026B6  EF5F  F013         	goto	u5421
  1402  0026BA  EF61  F013         	goto	u5420
  1403  0026BE                     u5421:
  1404  0026BE  EF57  F013         	goto	l4867
  1405  0026C2                     u5420:
  1406  0026C2                     
  1407                           ; BSR set to: 0
  1408  0026C2  0E00               	movlw	0
  1409  0026C4  6FF4               	movwf	(_button_pushed+1)& (0+255),b
  1410  0026C6  0E00               	movlw	0
  1411  0026C8  6FF3               	movwf	_button_pushed& (0+255),b
  1412  0026CA  0E00               	movlw	0
  1413  0026CC  6E83               	movwf	131,c	;volatile
  1414  0026CE                     
  1415                           ; BSR set to: 0
  1416  0026CE  EC4F  F01E         	call	_lcd_clear	;wreg free
  1417  0026D2  0E00               	movlw	0
  1418  0026D4  EC7A  F01E         	call	_lcd_goto
  1419  0026D8  0E5B               	movlw	low STR_8
  1420  0026DA  6E02               	movwf	lcd_puts@s^0,c
  1421  0026DC  0E03               	movlw	high STR_8
  1422  0026DE  6E03               	movwf	(lcd_puts@s+1)^0,c
  1423  0026E0  EC72  F01C         	call	_lcd_puts	;wreg free
  1424  0026E4  0E00               	movlw	0
  1425  0026E6  6E02               	movwf	(change_position@position+1)^0,c
  1426  0026E8  0E00               	movlw	0
  1427  0026EA  6E01               	movwf	change_position@position^0,c
  1428  0026EC  EC5F  F01E         	call	_change_position	;wreg free
  1429  0026F0  EFD4  F012         	goto	l4831
  1430  0026F4  EF30  F000         	goto	start
  1431  0026F8                     __end_of_main:
  1432                           	callstack 0
  1433                           
  1434 ;; *************** function _setup_timer_int *****************
  1435 ;; Defined at:
  1436 ;;		line 48 in file "main.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		None
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1450 ;;      Params:         0       0       0       0
  1451 ;;      Locals:         0       0       0       0
  1452 ;;      Temps:          0       0       0       0
  1453 ;;      Totals:         0       0       0       0
  1454 ;;Total ram usage:        0 bytes
  1455 ;; Hardware stack levels used: 1
  1456 ;; Hardware stack levels required when called: 1
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text1
  1465  003CDE                     __ptext1:
  1466                           	callstack 0
  1467  003CDE                     _setup_timer_int:
  1468                           	callstack 29
  1469  003CDE                     
  1470                           ;main.c: 50: 
  1471  003CDE  9ED5               	bcf	4053,7,c	;volatile
  1472                           
  1473                           ;main.c: 51:     INTEDG0 = 0;
  1474  003CE0  9CD5               	bcf	4053,6,c	;volatile
  1475                           
  1476                           ;main.c: 52:     PEIE = 1;
  1477  003CE2  9AD5               	bcf	4053,5,c	;volatile
  1478                           
  1479                           ;main.c: 53:     GIE = 1;
  1480  003CE4  98D5               	bcf	4053,4,c	;volatile
  1481                           
  1482                           ;main.c: 54:     INT0IF = 0;
  1483  003CE6  86D5               	bsf	4053,3,c	;volatile
  1484                           
  1485                           ;main.c: 56: }
  1486  003CE8  9EF2               	bcf	4082,7,c	;volatile
  1487                           
  1488                           ;main.c: 57: 
  1489  003CEA  8CF2               	bsf	4082,6,c	;volatile
  1490                           
  1491                           ;main.c: 58: int read_adc(void) {
  1492  003CEC  8AF2               	bsf	4082,5,c	;volatile
  1493                           
  1494                           ;main.c: 59: 
  1495  003CEE  8ED0               	bsf	4048,7,c	;volatile
  1496                           
  1497                           ;main.c: 61:     ADCON0 = ADCON0 | 0x02;
  1498  003CF0  8EF2               	bsf	4082,7,c	;volatile
  1499  003CF2  0012               	return		;funcret
  1500  003CF4                     __end_of_setup_timer_int:
  1501                           	callstack 0
  1502                           
  1503 ;; *************** function _setup_buttons_int *****************
  1504 ;; Defined at:
  1505 ;;		line 65 in file "main.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;		None
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;		None
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		None
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1519 ;;      Params:         0       0       0       0
  1520 ;;      Locals:         0       0       0       0
  1521 ;;      Temps:          0       0       0       0
  1522 ;;      Totals:         0       0       0       0
  1523 ;;Total ram usage:        0 bytes
  1524 ;; Hardware stack levels used: 1
  1525 ;; Hardware stack levels required when called: 1
  1526 ;; This function calls:
  1527 ;;		Nothing
  1528 ;; This function is called by:
  1529 ;;		_main
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           	psect	text2
  1534  003D08                     __ptext2:
  1535                           	callstack 0
  1536  003D08                     _setup_buttons_int:
  1537                           	callstack 29
  1538  003D08                     
  1539                           ;main.c: 66:         if((ADCON0 & 0x02) == 0) {
  1540  003D08  9EF2               	bcf	4082,7,c	;volatile
  1541                           
  1542                           ;main.c: 68: 
  1543  003D0A  9CF1               	bcf	4081,6,c	;volatile
  1544                           
  1545                           ;main.c: 69: 
  1546  003D0C  8CF2               	bsf	4082,6,c	;volatile
  1547                           
  1548                           ;main.c: 70:             result = ADRESH * 4;
  1549  003D0E  8EF2               	bsf	4082,7,c	;volatile
  1550                           
  1551                           ;main.c: 71:             result += ADRESL / 64;
  1552  003D10  92F2               	bcf	4082,1,c	;volatile
  1553  003D12  0012               	return		;funcret
  1554  003D14                     __end_of_setup_buttons_int:
  1555                           	callstack 0
  1556                           
  1557 ;; *************** function _print_time_velocity *****************
  1558 ;; Defined at:
  1559 ;;		line 182 in file "main.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;  time            4   83[BANK0 ] void 
  1562 ;;  velocity        4   87[BANK0 ] void 
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;  message_bc     20  111[BANK0 ] unsigned char [20]
  1565 ;;  message_fr     20   91[BANK0 ] unsigned char [20]
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1575 ;;      Params:         0       8       0       0
  1576 ;;      Locals:         0      40       0       0
  1577 ;;      Temps:          0       0       0       0
  1578 ;;      Totals:         0      48       0       0
  1579 ;;Total ram usage:       48 bytes
  1580 ;; Hardware stack levels used: 1
  1581 ;; Hardware stack levels required when called: 9
  1582 ;; This function calls:
  1583 ;;		_lcd_clear
  1584 ;;		_lcd_goto
  1585 ;;		_lcd_puts
  1586 ;;		_sprintf
  1587 ;; This function is called by:
  1588 ;;		_main
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text3
  1593  00377A                     __ptext3:
  1594                           	callstack 0
  1595  00377A                     _print_time_velocity:
  1596                           	callstack 21
  1597  00377A                     
  1598                           ;main.c: 184: 
  1599  00377A  EC4F  F01E         	call	_lcd_clear	;wreg free
  1600  00377E                     
  1601                           ;main.c: 186:     result = timer_overflows * (65536 / (4000000 / 1000));
  1602  00377E  EE20  F0BB         	lfsr	2,print_time_velocity@message_fr
  1603  003782  0E13               	movlw	19
  1604  003784                     u5331:
  1605  003784  6ADE               	clrf	postinc2,c
  1606  003786  06E8               	decf	wreg,f,c
  1607  003788  E2FD               	bc	u5331
  1608  00378A                     
  1609                           ;main.c: 187:     result += (TMR0H * 256 + TMR0L) / (4000000 / 1000);
  1610  00378A  0EBB               	movlw	low print_time_velocity@message_fr
  1611  00378C  0100               	movlb	0	; () banked
  1612  00378E  6F9E               	movwf	sprintf@s& (0+255),b
  1613  003790  0E00               	movlw	high print_time_velocity@message_fr
  1614  003792  6F9F               	movwf	(sprintf@s+1)& (0+255),b
  1615  003794  0E51               	movlw	low STR_6
  1616  003796  6FA0               	movwf	sprintf@fmt& (0+255),b
  1617  003798  0E03               	movlw	high STR_6
  1618  00379A  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
  1619  00379C  C0B3  F0A2         	movff	print_time_velocity@time,?_sprintf+4
  1620  0037A0  C0B4  F0A3         	movff	print_time_velocity@time+1,?_sprintf+5
  1621  0037A4  C0B5  F0A4         	movff	print_time_velocity@time+2,?_sprintf+6
  1622  0037A8  C0B6  F0A5         	movff	print_time_velocity@time+3,?_sprintf+7
  1623  0037AC  EC04  F01D         	call	_sprintf	;wreg free
  1624  0037B0                     
  1625                           ;main.c: 188:     return result;
  1626  0037B0  0EBB               	movlw	low print_time_velocity@message_fr
  1627  0037B2  6E02               	movwf	lcd_puts@s^0,c
  1628  0037B4  0E00               	movlw	high print_time_velocity@message_fr
  1629  0037B6  6E03               	movwf	(lcd_puts@s+1)^0,c
  1630  0037B8  EC72  F01C         	call	_lcd_puts	;wreg free
  1631  0037BC                     
  1632                           ;main.c: 190: }
  1633  0037BC  0E28               	movlw	40
  1634  0037BE  EC7A  F01E         	call	_lcd_goto
  1635  0037C2                     
  1636                           ;main.c: 191: 
  1637  0037C2  EE20  F0CF         	lfsr	2,print_time_velocity@message_bc
  1638  0037C6  0E13               	movlw	19
  1639  0037C8                     u5341:
  1640  0037C8  6ADE               	clrf	postinc2,c
  1641  0037CA  06E8               	decf	wreg,f,c
  1642  0037CC  E2FD               	bc	u5341
  1643  0037CE                     
  1644                           ;main.c: 192: 
  1645  0037CE  0ECF               	movlw	low print_time_velocity@message_bc
  1646  0037D0  0100               	movlb	0	; () banked
  1647  0037D2  6F9E               	movwf	sprintf@s& (0+255),b
  1648  0037D4  0E00               	movlw	high print_time_velocity@message_bc
  1649  0037D6  6F9F               	movwf	(sprintf@s+1)& (0+255),b
  1650  0037D8  0E31               	movlw	low STR_7
  1651  0037DA  6FA0               	movwf	sprintf@fmt& (0+255),b
  1652  0037DC  0E03               	movlw	high STR_7
  1653  0037DE  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
  1654  0037E0  C0B7  F0A2         	movff	print_time_velocity@velocity,?_sprintf+4
  1655  0037E4  C0B8  F0A3         	movff	print_time_velocity@velocity+1,?_sprintf+5
  1656  0037E8  C0B9  F0A4         	movff	print_time_velocity@velocity+2,?_sprintf+6
  1657  0037EC  C0BA  F0A5         	movff	print_time_velocity@velocity+3,?_sprintf+7
  1658  0037F0  EC04  F01D         	call	_sprintf	;wreg free
  1659                           
  1660                           ;main.c: 193: float calculate_velocity(double time) {
  1661  0037F4  0ECF               	movlw	low print_time_velocity@message_bc
  1662  0037F6  6E02               	movwf	lcd_puts@s^0,c
  1663  0037F8  0E00               	movlw	high print_time_velocity@message_bc
  1664  0037FA  6E03               	movwf	(lcd_puts@s+1)^0,c
  1665  0037FC  EC72  F01C         	call	_lcd_puts	;wreg free
  1666  003800  0012               	return		;funcret
  1667  003802                     __end_of_print_time_velocity:
  1668                           	callstack 0
  1669                           
  1670 ;; *************** function _print_threshold *****************
  1671 ;; Defined at:
  1672 ;;		line 165 in file "main.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;		None
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;  message_bc     20  103[BANK0 ] unsigned char [20]
  1677 ;;  message_fr     20   83[BANK0 ] unsigned char [20]
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1687 ;;      Params:         0       0       0       0
  1688 ;;      Locals:         0      40       0       0
  1689 ;;      Temps:          0       0       0       0
  1690 ;;      Totals:         0      40       0       0
  1691 ;;Total ram usage:       40 bytes
  1692 ;; Hardware stack levels used: 1
  1693 ;; Hardware stack levels required when called: 9
  1694 ;; This function calls:
  1695 ;;		_lcd_clear
  1696 ;;		_lcd_goto
  1697 ;;		_lcd_puts
  1698 ;;		_sprintf
  1699 ;; This function is called by:
  1700 ;;		_main
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text4
  1705  003802                     __ptext4:
  1706                           	callstack 0
  1707  003802                     _print_threshold:
  1708                           	callstack 21
  1709  003802                     
  1710                           ;main.c: 167:     lcd_clear();
  1711  003802  EC4F  F01E         	call	_lcd_clear	;wreg free
  1712  003806                     
  1713                           ;main.c: 169:     char message_fr[20] = {0};
  1714  003806  EE20  F0B3         	lfsr	2,print_threshold@message_fr
  1715  00380A  0E13               	movlw	19
  1716  00380C                     u5311:
  1717  00380C  6ADE               	clrf	postinc2,c
  1718  00380E  06E8               	decf	wreg,f,c
  1719  003810  E2FD               	bc	u5311
  1720  003812                     
  1721                           ;main.c: 170:     sprintf(message_fr, "T[ms]: %f", time);
  1722  003812  0EB3               	movlw	low print_threshold@message_fr
  1723  003814  0100               	movlb	0	; () banked
  1724  003816  6F9E               	movwf	sprintf@s& (0+255),b
  1725  003818  0E00               	movlw	high print_threshold@message_fr
  1726  00381A  6F9F               	movwf	(sprintf@s+1)& (0+255),b
  1727  00381C  0E47               	movlw	low STR_4
  1728  00381E  6FA0               	movwf	sprintf@fmt& (0+255),b
  1729  003820  0E03               	movlw	high STR_4
  1730  003822  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
  1731  003824  C0F9  F0A2         	movff	_threshold_front,?_sprintf+4
  1732  003828  C0FA  F0A3         	movff	_threshold_front+1,?_sprintf+5
  1733  00382C  EC04  F01D         	call	_sprintf	;wreg free
  1734  003830                     
  1735                           ;main.c: 171:     lcd_puts(message_fr);
  1736  003830  0EB3               	movlw	low print_threshold@message_fr
  1737  003832  6E02               	movwf	lcd_puts@s^0,c
  1738  003834  0E00               	movlw	high print_threshold@message_fr
  1739  003836  6E03               	movwf	(lcd_puts@s+1)^0,c
  1740  003838  EC72  F01C         	call	_lcd_puts	;wreg free
  1741  00383C                     
  1742                           ;main.c: 173:     lcd_goto(40);
  1743  00383C  0E28               	movlw	40
  1744  00383E  EC7A  F01E         	call	_lcd_goto
  1745  003842                     
  1746                           ;main.c: 174:     char message_bc[20] = {0};
  1747  003842  EE20  F0C7         	lfsr	2,print_threshold@message_bc
  1748  003846  0E13               	movlw	19
  1749  003848                     u5321:
  1750  003848  6ADE               	clrf	postinc2,c
  1751  00384A  06E8               	decf	wreg,f,c
  1752  00384C  E2FD               	bc	u5321
  1753  00384E                     
  1754                           ;main.c: 175:     sprintf(message_bc, "V[cm/s]: %f", velocity);
  1755  00384E  0EC7               	movlw	low print_threshold@message_bc
  1756  003850  0100               	movlb	0	; () banked
  1757  003852  6F9E               	movwf	sprintf@s& (0+255),b
  1758  003854  0E00               	movlw	high print_threshold@message_bc
  1759  003856  6F9F               	movwf	(sprintf@s+1)& (0+255),b
  1760  003858  0E3D               	movlw	low STR_5
  1761  00385A  6FA0               	movwf	sprintf@fmt& (0+255),b
  1762  00385C  0E03               	movlw	high STR_5
  1763  00385E  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
  1764  003860  C0F7  F0A2         	movff	_threshold_back,?_sprintf+4
  1765  003864  C0F8  F0A3         	movff	_threshold_back+1,?_sprintf+5
  1766  003868  EC04  F01D         	call	_sprintf	;wreg free
  1767                           
  1768                           ;main.c: 176:     lcd_puts(message_bc);
  1769  00386C  0EC7               	movlw	low print_threshold@message_bc
  1770  00386E  6E02               	movwf	lcd_puts@s^0,c
  1771  003870  0E00               	movlw	high print_threshold@message_bc
  1772  003872  6E03               	movwf	(lcd_puts@s+1)^0,c
  1773  003874  EC72  F01C         	call	_lcd_puts	;wreg free
  1774  003878  0012               	return		;funcret
  1775  00387A                     __end_of_print_threshold:
  1776                           	callstack 0
  1777                           
  1778 ;; *************** function _sprintf *****************
  1779 ;; Defined at:
  1780 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  s               2   62[BANK0 ] PTR unsigned char 
  1783 ;;		 -> print_time_velocity@message_bc(20), print_time_velocity@message_fr(20), print_threshold@message_bc(20), print_th
      +reshold@message_fr(20), 
  1784 ;;		 -> debug_print@message(10), 
  1785 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  1786 ;;		 -> STR_7(12), STR_6(10), STR_5(10), STR_4(10), 
  1787 ;;		 -> STR_3(3), 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  f              11   72[BANK0 ] struct _IO_FILE
  1790 ;;  ap              2   70[BANK0 ] PTR void [1]
  1791 ;;		 -> ?_sprintf(2), 
  1792 ;;  ret             2    0        int 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  2   62[BANK0 ] int 
  1795 ;; Registers used:
  1796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1802 ;;      Params:         0       8       0       0
  1803 ;;      Locals:         0      13       0       0
  1804 ;;      Temps:          0       0       0       0
  1805 ;;      Totals:         0      21       0       0
  1806 ;;Total ram usage:       21 bytes
  1807 ;; Hardware stack levels used: 1
  1808 ;; Hardware stack levels required when called: 8
  1809 ;; This function calls:
  1810 ;;		_vfprintf
  1811 ;; This function is called by:
  1812 ;;		_print_threshold
  1813 ;;		_print_time_velocity
  1814 ;;		_debug_print
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           	psect	text5
  1819  003A08                     __ptext5:
  1820                           	callstack 0
  1821  003A08                     _sprintf:
  1822                           	callstack 21
  1823  003A08  0EA2               	movlw	low (?_sprintf+4)
  1824  003A0A  0100               	movlb	0	; () banked
  1825  003A0C  6FA6               	movwf	sprintf@ap& (0+255),b
  1826  003A0E  0E00               	movlw	high (?_sprintf+4)
  1827  003A10  6FA7               	movwf	(sprintf@ap+1)& (0+255),b
  1828  003A12  C09E  F0A8         	movff	sprintf@s,sprintf@f
  1829  003A16  C09F  F0A9         	movff	sprintf@s+1,sprintf@f+1
  1830  003A1A                     
  1831                           ; BSR set to: 0
  1832  003A1A  0E00               	movlw	0
  1833  003A1C  6FAC               	movwf	(sprintf@f+4)& (0+255),b
  1834  003A1E  0E00               	movlw	0
  1835  003A20  6FAB               	movwf	(sprintf@f+3)& (0+255),b
  1836  003A22                     
  1837                           ; BSR set to: 0
  1838  003A22  0E00               	movlw	0
  1839  003A24  6FB2               	movwf	(sprintf@f+10)& (0+255),b
  1840  003A26  0E00               	movlw	0
  1841  003A28  6FB1               	movwf	(sprintf@f+9)& (0+255),b
  1842  003A2A                     
  1843                           ; BSR set to: 0
  1844  003A2A  0EA8               	movlw	low sprintf@f
  1845  003A2C  6F98               	movwf	vfprintf@fp& (0+255),b
  1846  003A2E  0E00               	movlw	high sprintf@f
  1847  003A30  6F99               	movwf	(vfprintf@fp+1)& (0+255),b
  1848  003A32  C0A0  F09A         	movff	sprintf@fmt,vfprintf@fmt
  1849  003A36  C0A1  F09B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1850  003A3A  0EA6               	movlw	low sprintf@ap
  1851  003A3C  6F9C               	movwf	vfprintf@ap& (0+255),b
  1852  003A3E  0E00               	movlw	high sprintf@ap
  1853  003A40  6F9D               	movwf	(vfprintf@ap+1)& (0+255),b
  1854  003A42  ECA5  F01C         	call	_vfprintf	;wreg free
  1855  003A46  0100               	movlb	0	; () banked
  1856  003A48  51AB               	movf	(sprintf@f+3)& (0+255),w,b
  1857  003A4A  259E               	addwf	sprintf@s& (0+255),w,b
  1858  003A4C  6ED9               	movwf	fsr2l,c
  1859  003A4E  51AC               	movf	(sprintf@f+4)& (0+255),w,b
  1860  003A50  219F               	addwfc	(sprintf@s+1)& (0+255),w,b
  1861  003A52  6EDA               	movwf	fsr2h,c
  1862  003A54  0E00               	movlw	0
  1863  003A56  6EDF               	movwf	indf2,c
  1864  003A58                     
  1865                           ; BSR set to: 0
  1866  003A58  0012               	return		;funcret
  1867  003A5A                     __end_of_sprintf:
  1868                           	callstack 0
  1869                           
  1870 ;; *************** function _vfprintf *****************
  1871 ;; Defined at:
  1872 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  1875 ;;		 -> sprintf@f(11), 
  1876 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1877 ;;		 -> STR_7(12), STR_6(10), STR_5(10), STR_4(10), 
  1878 ;;		 -> STR_3(3), 
  1879 ;;  ap              2   60[BANK0 ] PTR PTR void 
  1880 ;;		 -> sprintf@ap(2), 
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  cfmt            2   83[COMRAM] PTR unsigned char 
  1883 ;;		 -> STR_7(12), STR_6(10), STR_5(10), STR_4(10), 
  1884 ;;		 -> STR_3(3), 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  2   56[BANK0 ] int 
  1887 ;; Registers used:
  1888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1894 ;;      Params:         0       6       0       0
  1895 ;;      Locals:         2       0       0       0
  1896 ;;      Temps:          0       0       0       0
  1897 ;;      Totals:         2       6       0       0
  1898 ;;Total ram usage:        8 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; Hardware stack levels required when called: 7
  1901 ;; This function calls:
  1902 ;;		_vfpfcnvrt
  1903 ;; This function is called by:
  1904 ;;		_sprintf
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           	psect	text6
  1909  00394A                     __ptext6:
  1910                           	callstack 0
  1911  00394A                     _vfprintf:
  1912                           	callstack 21
  1913  00394A                     
  1914                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1915  00394A  C09A  F054         	movff	vfprintf@fmt,vfprintf@cfmt
  1916  00394E  C09B  F055         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1917  003952                     
  1918                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1919  003952  0E00               	movlw	0
  1920  003954  0100               	movlb	0	; () banked
  1921  003956  6FF0               	movwf	(_nout+1)& (0+255),b
  1922  003958  0E00               	movlw	0
  1923  00395A  6FEF               	movwf	_nout& (0+255),b
  1924                           
  1925                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1926  00395C  EFC3  F01C         	goto	l4431
  1927  003960                     l4429:
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1931  003960  C098  F092         	movff	vfprintf@fp,vfpfcnvrt@fp
  1932  003964  C099  F093         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1933  003968  0E54               	movlw	low vfprintf@cfmt
  1934  00396A  6F94               	movwf	vfpfcnvrt@fmt& (0+255),b
  1935  00396C  0E00               	movlw	high vfprintf@cfmt
  1936  00396E  6F95               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1937  003970  C09C  F096         	movff	vfprintf@ap,vfpfcnvrt@ap
  1938  003974  C09D  F097         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1939  003978  EC3A  F00C         	call	_vfpfcnvrt	;wreg free
  1940  00397C  0100               	movlb	0	; () banked
  1941  00397E  5192               	movf	?_vfpfcnvrt& (0+255),w,b
  1942  003980  27EF               	addwf	_nout& (0+255),f,b
  1943  003982  5193               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1944  003984  23F0               	addwfc	(_nout+1)& (0+255),f,b
  1945  003986                     l4431:
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1949  003986  C054  FFF6         	movff	vfprintf@cfmt,tblptrl
  1950  00398A  C055  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1951  00398E                     	if	0	;tblptru may be non-zero
  1952  00398E                     	endif
  1953  00398E                     	if	0	;tblptru may be non-zero
  1954  00398E                     	endif
  1955  00398E  0008               	tblrd		*
  1956  003990  50F5               	movf	tablat,w,c
  1957  003992  0900               	iorlw	0
  1958  003994  A4D8               	btfss	status,2,c
  1959  003996  EFCF  F01C         	goto	u5071
  1960  00399A  EFD1  F01C         	goto	u5070
  1961  00399E                     u5071:
  1962  00399E  EFB0  F01C         	goto	l4429
  1963  0039A2                     u5070:
  1964  0039A2                     
  1965                           ; BSR set to: 0
  1966                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1967  0039A2  C0EF  F098         	movff	_nout,?_vfprintf
  1968  0039A6  C0F0  F099         	movff	_nout+1,?_vfprintf+1
  1969  0039AA                     
  1970                           ; BSR set to: 0
  1971  0039AA  0012               	return		;funcret
  1972  0039AC                     __end_of_vfprintf:
  1973                           	callstack 0
  1974                           
  1975 ;; *************** function _vfpfcnvrt *****************
  1976 ;; Defined at:
  1977 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  fp              2   50[BANK0 ] PTR struct _IO_FILE
  1980 ;;		 -> sprintf@f(11), 
  1981 ;;  fmt             2   52[BANK0 ] PTR PTR unsigned char 
  1982 ;;		 -> vfprintf@cfmt(2), 
  1983 ;;  ap              2   54[BANK0 ] PTR PTR void 
  1984 ;;		 -> sprintf@ap(2), 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  ll              8   67[COMRAM] long long 
  1987 ;;  llu             8    0        unsigned long long 
  1988 ;;  f               4   75[COMRAM] unsigned long long 
  1989 ;;  ct              3   79[COMRAM] unsigned char [3]
  1990 ;;  vp              3    0        PTR void 
  1991 ;;  cp              3    0        PTR unsigned char 
  1992 ;;  i               2    0        int 
  1993 ;;  done            2    0        int 
  1994 ;;  c               1   82[COMRAM] unsigned char 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  2   50[BANK0 ] int 
  1997 ;; Registers used:
  1998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2004 ;;      Params:         0       6       0       0
  2005 ;;      Locals:        16       0       0       0
  2006 ;;      Temps:          4       0       0       0
  2007 ;;      Totals:        20       6       0       0
  2008 ;;Total ram usage:       26 bytes
  2009 ;; Hardware stack levels used: 1
  2010 ;; Hardware stack levels required when called: 6
  2011 ;; This function calls:
  2012 ;;		_dtoa
  2013 ;;		_efgtoa
  2014 ;;		_fputc
  2015 ;;		_isupper
  2016 ;;		_strncmp
  2017 ;;		_tolower
  2018 ;; This function is called by:
  2019 ;;		_vfprintf
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           	psect	text7
  2024  001874                     __ptext7:
  2025                           	callstack 0
  2026  001874                     _vfpfcnvrt:
  2027                           	callstack 21
  2028  001874                     
  2029                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2030  001874  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2031  001878  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2032  00187C  CFDE FFF6          	movff	postinc2,tblptrl
  2033  001880  CFDD FFF7          	movff	postdec2,tblptrh
  2034  001884                     	if	0	;tblptru may be non-zero
  2035  001884                     	endif
  2036  001884                     	if	0	;tblptru may be non-zero
  2037  001884                     	endif
  2038  001884  0008               	tblrd		*
  2039  001886  50F5               	movf	tablat,w,c
  2040  001888  0A25               	xorlw	37
  2041  00188A  A4D8               	btfss	status,2,c
  2042  00188C  EF4A  F00C         	goto	u4961
  2043  001890  EF4C  F00C         	goto	u4960
  2044  001894                     u4961:
  2045  001894  EF18  F00E         	goto	l4379
  2046  001898                     u4960:
  2047  001898                     
  2048                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2049  001898  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2050  00189C  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2051  0018A0  2ADE               	incf	postinc2,f,c
  2052  0018A2  0E00               	movlw	0
  2053  0018A4  22DD               	addwfc	postdec2,f,c
  2054  0018A6                     
  2055                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2056  0018A6  0E00               	movlw	0
  2057  0018A8  0100               	movlb	0	; () banked
  2058  0018AA  6FF2               	movwf	(_width+1)& (0+255),b
  2059  0018AC  0E00               	movlw	0
  2060  0018AE  6FF1               	movwf	_width& (0+255),b
  2061  0018B0  C0F1  F05A         	movff	_width,_flags
  2062  0018B4  C0F2  F05B         	movff	_width+1,_flags+1
  2063  0018B8                     
  2064                           ; BSR set to: 0
  2065                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2066  0018B8  6858               	setf	_prec^0,c
  2067  0018BA  6859               	setf	(_prec+1)^0,c
  2068  0018BC                     
  2069                           ; BSR set to: 0
  2070                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2071  0018BC  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2072  0018C0  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2073  0018C4  CFDE FFF6          	movff	postinc2,tblptrl
  2074  0018C8  CFDD FFF7          	movff	postdec2,tblptrh
  2075  0018CC                     	if	0	;tblptru may be non-zero
  2076  0018CC                     	endif
  2077  0018CC                     	if	0	;tblptru may be non-zero
  2078  0018CC                     	endif
  2079  0018CC  0008               	tblrd		*
  2080  0018CE  50F5               	movf	tablat,w,c
  2081  0018D0  6E07               	movwf	tolower@c^0,c
  2082  0018D2  6A08               	clrf	(tolower@c+1)^0,c
  2083  0018D4  EC52  F01D         	call	_tolower	;wreg free
  2084  0018D8  5007               	movf	?_tolower^0,w,c
  2085  0018DA  6E50               	movwf	vfpfcnvrt@ct^0,c
  2086  0018DC                     
  2087                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2088  0018DC  5050               	movf	vfpfcnvrt@ct^0,w,c
  2089  0018DE  B4D8               	btfsc	status,2,c
  2090  0018E0  EF74  F00C         	goto	u4971
  2091  0018E4  EF76  F00C         	goto	u4970
  2092  0018E8                     u4971:
  2093  0018E8  EFAE  F00C         	goto	l4325
  2094  0018EC                     u4970:
  2095  0018EC                     
  2096                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2097  0018EC  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2098  0018F0  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2099  0018F4  CFDE F040          	movff	postinc2,??_vfpfcnvrt
  2100  0018F8  CFDD F041          	movff	postdec2,??_vfpfcnvrt+1
  2101  0018FC  0E01               	movlw	1
  2102  0018FE  2640               	addwf	??_vfpfcnvrt^0,f,c
  2103  001900  0E00               	movlw	0
  2104  001902  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2105  001904  C040  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2106  001908  C041  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2107  00190C                     	if	0	;tblptru may be non-zero
  2108  00190C                     	endif
  2109  00190C                     	if	0	;tblptru may be non-zero
  2110  00190C                     	endif
  2111  00190C  0008               	tblrd		*
  2112  00190E  50F5               	movf	tablat,w,c
  2113  001910  6E07               	movwf	tolower@c^0,c
  2114  001912  6A08               	clrf	(tolower@c+1)^0,c
  2115  001914  EC52  F01D         	call	_tolower	;wreg free
  2116  001918  5007               	movf	?_tolower^0,w,c
  2117  00191A  6E51               	movwf	(vfpfcnvrt@ct+1)^0,c
  2118  00191C                     
  2119                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2120  00191C  5051               	movf	(vfpfcnvrt@ct+1)^0,w,c
  2121  00191E  B4D8               	btfsc	status,2,c
  2122  001920  EF94  F00C         	goto	u4981
  2123  001924  EF96  F00C         	goto	u4980
  2124  001928                     u4981:
  2125  001928  EFAE  F00C         	goto	l4325
  2126  00192C                     u4980:
  2127  00192C                     
  2128                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2129  00192C  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2130  001930  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2131  001934  CFDE F040          	movff	postinc2,??_vfpfcnvrt
  2132  001938  CFDD F041          	movff	postdec2,??_vfpfcnvrt+1
  2133  00193C  0E02               	movlw	2
  2134  00193E  2640               	addwf	??_vfpfcnvrt^0,f,c
  2135  001940  0E00               	movlw	0
  2136  001942  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2137  001944  C040  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2138  001948  C041  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2139  00194C                     	if	0	;tblptru may be non-zero
  2140  00194C                     	endif
  2141  00194C                     	if	0	;tblptru may be non-zero
  2142  00194C                     	endif
  2143  00194C  0008               	tblrd		*
  2144  00194E  50F5               	movf	tablat,w,c
  2145  001950  6E07               	movwf	tolower@c^0,c
  2146  001952  6A08               	clrf	(tolower@c+1)^0,c
  2147  001954  EC52  F01D         	call	_tolower	;wreg free
  2148  001958  5007               	movf	?_tolower^0,w,c
  2149  00195A  6E52               	movwf	(vfpfcnvrt@ct+2)^0,c
  2150  00195C                     l4325:
  2151                           
  2152                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2153  00195C  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2154  001960  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2155  001964  CFDE FFF6          	movff	postinc2,tblptrl
  2156  001968  CFDD FFF7          	movff	postdec2,tblptrh
  2157  00196C                     	if	0	;tblptru may be non-zero
  2158  00196C                     	endif
  2159  00196C                     	if	0	;tblptru may be non-zero
  2160  00196C                     	endif
  2161  00196C  0008               	tblrd		*
  2162  00196E  50F5               	movf	tablat,w,c
  2163  001970  0A64               	xorlw	100
  2164  001972  B4D8               	btfsc	status,2,c
  2165  001974  EFBE  F00C         	goto	u4991
  2166  001978  EFC0  F00C         	goto	u4990
  2167  00197C                     u4991:
  2168  00197C  EFD2  F00C         	goto	l4329
  2169  001980                     u4990:
  2170  001980  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2171  001984  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2172  001988  CFDE FFF6          	movff	postinc2,tblptrl
  2173  00198C  CFDD FFF7          	movff	postdec2,tblptrh
  2174  001990                     	if	0	;tblptru may be non-zero
  2175  001990                     	endif
  2176  001990                     	if	0	;tblptru may be non-zero
  2177  001990                     	endif
  2178  001990  0008               	tblrd		*
  2179  001992  50F5               	movf	tablat,w,c
  2180  001994  0A69               	xorlw	105
  2181  001996  A4D8               	btfss	status,2,c
  2182  001998  EFD0  F00C         	goto	u5001
  2183  00199C  EFD2  F00C         	goto	u5000
  2184  0019A0                     u5001:
  2185  0019A0  EF12  F00D         	goto	l4335
  2186  0019A4                     u5000:
  2187  0019A4                     l4329:
  2188                           
  2189                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2190  0019A4  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2191  0019A8  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2192  0019AC  2ADE               	incf	postinc2,f,c
  2193  0019AE  0E00               	movlw	0
  2194  0019B0  22DD               	addwfc	postdec2,f,c
  2195                           
  2196                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2197  0019B2  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2198  0019B6  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2199  0019BA  CFDF F040          	movff	indf2,??_vfpfcnvrt
  2200  0019BE  0E02               	movlw	2
  2201  0019C0  26DE               	addwf	postinc2,f,c
  2202  0019C2  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  2203  0019C6  0E00               	movlw	0
  2204  0019C8  22DD               	addwfc	postdec2,f,c
  2205  0019CA  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2206  0019CE  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2207  0019D2  CFDE F044          	movff	postinc2,vfpfcnvrt@ll
  2208  0019D6  CFDD F045          	movff	postdec2,vfpfcnvrt@ll+1
  2209  0019DA  0E00               	movlw	0
  2210  0019DC  BE45               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2211  0019DE  0EFF               	movlw	-1
  2212  0019E0  6E46               	movwf	(vfpfcnvrt@ll+2)^0,c
  2213  0019E2  6E47               	movwf	(vfpfcnvrt@ll+3)^0,c
  2214  0019E4  6E48               	movwf	(vfpfcnvrt@ll+4)^0,c
  2215  0019E6  6E49               	movwf	(vfpfcnvrt@ll+5)^0,c
  2216  0019E8  6E4A               	movwf	(vfpfcnvrt@ll+6)^0,c
  2217  0019EA  6E4B               	movwf	(vfpfcnvrt@ll+7)^0,c
  2218  0019EC                     
  2219                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2220  0019EC  C092  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2221  0019F0  C093  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2222  0019F4  C044  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2223  0019F8  C045  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2224  0019FC  C046  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2225  001A00  C047  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2226  001A04  C048  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2227  001A08  C049  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2228  001A0C  C04A  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2229  001A10  C04B  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2230  001A14  EC01  F010         	call	_dtoa	;wreg free
  2231  001A18  C01C  F092         	movff	?_dtoa,?_vfpfcnvrt
  2232  001A1C  C01D  F093         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2233  001A20  EF33  F00E         	goto	l1050
  2234  001A24                     l4335:
  2235                           
  2236                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2237  001A24  0E66               	movlw	102
  2238  001A26  1850               	xorwf	vfpfcnvrt@ct^0,w,c
  2239  001A28  A4D8               	btfss	status,2,c
  2240  001A2A  EF19  F00D         	goto	u5011
  2241  001A2E  EF1B  F00D         	goto	u5010
  2242  001A32                     u5011:
  2243  001A32  EF5B  F00D         	goto	l4347
  2244  001A36                     u5010:
  2245  001A36                     
  2246                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2247  001A36  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2248  001A3A  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2249  001A3E  CFDE FFF6          	movff	postinc2,tblptrl
  2250  001A42  CFDD FFF7          	movff	postdec2,tblptrh
  2251  001A46                     	if	0	;tblptru may be non-zero
  2252  001A46                     	endif
  2253  001A46                     	if	0	;tblptru may be non-zero
  2254  001A46                     	endif
  2255  001A46  0008               	tblrd		*
  2256  001A48  CFF5 F053          	movff	tablat,vfpfcnvrt@c
  2257  001A4C                     
  2258                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2259  001A4C  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2260  001A50  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2261  001A54  2ADE               	incf	postinc2,f,c
  2262  001A56  0E00               	movlw	0
  2263  001A58  22DD               	addwfc	postdec2,f,c
  2264  001A5A                     
  2265                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2266  001A5A  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2267  001A5E  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2268  001A62  CFDF F040          	movff	indf2,??_vfpfcnvrt
  2269  001A66  0E04               	movlw	4
  2270  001A68  26DE               	addwf	postinc2,f,c
  2271  001A6A  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  2272  001A6E  0E00               	movlw	0
  2273  001A70  22DD               	addwfc	postdec2,f,c
  2274  001A72  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2275  001A76  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2276  001A7A  CFDE F04C          	movff	postinc2,vfpfcnvrt@f
  2277  001A7E  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+1
  2278  001A82  CFDE F04E          	movff	postinc2,vfpfcnvrt@f+2
  2279  001A86  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+3
  2280  001A8A                     l4343:
  2281                           
  2282                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2283  001A8A  C092  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  2284  001A8E  C093  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2285  001A92  C04C  F030         	movff	vfpfcnvrt@f,efgtoa@f
  2286  001A96  C04D  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2287  001A9A  C04E  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2288  001A9E  C04F  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2289  001AA2  C053  F034         	movff	vfpfcnvrt@c,efgtoa@c
  2290  001AA6  ECBD  F001         	call	_efgtoa	;wreg free
  2291  001AAA  C02E  F092         	movff	?_efgtoa,?_vfpfcnvrt
  2292  001AAE  C02F  F093         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2293  001AB2  EF33  F00E         	goto	l1050
  2294  001AB6                     l4347:
  2295                           
  2296                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2297  001AB6  0E50               	movlw	low vfpfcnvrt@ct
  2298  001AB8  6E01               	movwf	strncmp@_l^0,c
  2299  001ABA  0E00               	movlw	high vfpfcnvrt@ct
  2300  001ABC  6E02               	movwf	(strncmp@_l+1)^0,c
  2301  001ABE  0E75               	movlw	low STR_19
  2302  001AC0  6E03               	movwf	strncmp@_r^0,c
  2303  001AC2  0E03               	movlw	high STR_19
  2304  001AC4  6E04               	movwf	(strncmp@_r+1)^0,c
  2305  001AC6  0E00               	movlw	0
  2306  001AC8  6E06               	movwf	(strncmp@n+1)^0,c
  2307  001ACA  0E02               	movlw	2
  2308  001ACC  6E05               	movwf	strncmp@n^0,c
  2309  001ACE  ECEA  F018         	call	_strncmp	;wreg free
  2310  001AD2  5001               	movf	?_strncmp^0,w,c
  2311  001AD4  1002               	iorwf	(?_strncmp+1)^0,w,c
  2312  001AD6  A4D8               	btfss	status,2,c
  2313  001AD8  EF70  F00D         	goto	u5021
  2314  001ADC  EF72  F00D         	goto	u5020
  2315  001AE0                     u5021:
  2316  001AE0  EFE0  F00D         	goto	l4363
  2317  001AE4                     u5020:
  2318  001AE4                     
  2319                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  2320  001AE4  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2321  001AE8  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2322  001AEC  CFDE F040          	movff	postinc2,??_vfpfcnvrt
  2323  001AF0  CFDD F041          	movff	postdec2,??_vfpfcnvrt+1
  2324  001AF4  0E01               	movlw	1
  2325  001AF6  2640               	addwf	??_vfpfcnvrt^0,f,c
  2326  001AF8  0E00               	movlw	0
  2327  001AFA  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2328  001AFC  C040  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2329  001B00  C041  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2330  001B04                     	if	0	;tblptru may be non-zero
  2331  001B04                     	endif
  2332  001B04                     	if	0	;tblptru may be non-zero
  2333  001B04                     	endif
  2334  001B04  0008               	tblrd		*
  2335  001B06  CFF5 F053          	movff	tablat,vfpfcnvrt@c
  2336  001B0A  0EBF               	movlw	191
  2337  001B0C  6E40               	movwf	??_vfpfcnvrt^0,c
  2338  001B0E  0EFF               	movlw	255
  2339  001B10  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  2340  001B12  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2341  001B16  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2342  001B1A  CFDE FFF6          	movff	postinc2,tblptrl
  2343  001B1E  CFDD FFF7          	movff	postdec2,tblptrh
  2344  001B22                     	if	0	;tblptru may be non-zero
  2345  001B22                     	endif
  2346  001B22                     	if	0	;tblptru may be non-zero
  2347  001B22                     	endif
  2348  001B22  0008               	tblrd		*
  2349  001B24  50F5               	movf	tablat,w,c
  2350  001B26  6E42               	movwf	(??_vfpfcnvrt+2)^0,c
  2351  001B28  6A43               	clrf	(??_vfpfcnvrt+3)^0,c
  2352  001B2A  5040               	movf	??_vfpfcnvrt^0,w,c
  2353  001B2C  2642               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2354  001B2E  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  2355  001B30  2243               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2356  001B32  5043               	movf	(??_vfpfcnvrt+3)^0,w,c
  2357  001B34  E107               	bnz	u5031
  2358  001B36  0E1A               	movlw	26
  2359  001B38  5C42               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2360  001B3A  B0D8               	btfsc	status,0,c
  2361  001B3C  EFA2  F00D         	goto	u5031
  2362  001B40  EFA4  F00D         	goto	u5030
  2363  001B44                     u5031:
  2364  001B44  EFBE  F00D         	goto	l4357
  2365  001B48                     u5030:
  2366  001B48                     
  2367                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2368  001B48  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2369  001B4C  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2370  001B50  CFDF F040          	movff	indf2,??_vfpfcnvrt
  2371  001B54  0E04               	movlw	4
  2372  001B56  26DE               	addwf	postinc2,f,c
  2373  001B58  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  2374  001B5C  0E00               	movlw	0
  2375  001B5E  22DD               	addwfc	postdec2,f,c
  2376  001B60  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2377  001B64  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2378  001B68  CFDE F04C          	movff	postinc2,vfpfcnvrt@f
  2379  001B6C  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+1
  2380  001B70  CFDE F04E          	movff	postinc2,vfpfcnvrt@f+2
  2381  001B74  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+3
  2382                           
  2383                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2384  001B78  EFD6  F00D         	goto	l1056
  2385  001B7C                     l4357:
  2386                           
  2387                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2388  001B7C  C096  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2389  001B80  C097  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2390  001B84  CFDF F040          	movff	indf2,??_vfpfcnvrt
  2391  001B88  0E04               	movlw	4
  2392  001B8A  26DE               	addwf	postinc2,f,c
  2393  001B8C  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  2394  001B90  0E00               	movlw	0
  2395  001B92  22DD               	addwfc	postdec2,f,c
  2396  001B94  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2397  001B98  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2398  001B9C  CFDE F04C          	movff	postinc2,vfpfcnvrt@f
  2399  001BA0  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+1
  2400  001BA4  CFDE F04E          	movff	postinc2,vfpfcnvrt@f+2
  2401  001BA8  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+3
  2402  001BAC                     l1056:
  2403                           
  2404                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2405  001BAC  0E02               	movlw	2
  2406  001BAE  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2407  001BB2  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2408  001BB6  26DE               	addwf	postinc2,f,c
  2409  001BB8  0E00               	movlw	0
  2410  001BBA  22DD               	addwfc	postdec2,f,c
  2411  001BBC  EF45  F00D         	goto	l4343
  2412  001BC0                     l4363:
  2413                           
  2414                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2415  001BC0  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2416  001BC4  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2417  001BC8  CFDE FFF6          	movff	postinc2,tblptrl
  2418  001BCC  CFDD FFF7          	movff	postdec2,tblptrh
  2419  001BD0                     	if	0	;tblptru may be non-zero
  2420  001BD0                     	endif
  2421  001BD0                     	if	0	;tblptru may be non-zero
  2422  001BD0                     	endif
  2423  001BD0  0008               	tblrd		*
  2424  001BD2  50F5               	movf	tablat,w,c
  2425  001BD4  0A25               	xorlw	37
  2426  001BD6  A4D8               	btfss	status,2,c
  2427  001BD8  EFF0  F00D         	goto	u5041
  2428  001BDC  EFF2  F00D         	goto	u5040
  2429  001BE0                     u5041:
  2430  001BE0  EF0A  F00E         	goto	l4373
  2431  001BE4                     u5040:
  2432  001BE4                     
  2433                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2434  001BE4  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2435  001BE8  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2436  001BEC  2ADE               	incf	postinc2,f,c
  2437  001BEE  0E00               	movlw	0
  2438  001BF0  22DD               	addwfc	postdec2,f,c
  2439  001BF2                     
  2440                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2441  001BF2  0E00               	movlw	0
  2442  001BF4  6E02               	movwf	(fputc@c+1)^0,c
  2443  001BF6  0E25               	movlw	37
  2444  001BF8  6E01               	movwf	fputc@c^0,c
  2445  001BFA  C092  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2446  001BFE  C093  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2447  001C02  EC55  F019         	call	_fputc	;wreg free
  2448  001C06                     l4369:
  2449                           
  2450                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2451  001C06  0E00               	movlw	0
  2452  001C08  0100               	movlb	0	; () banked
  2453  001C0A  6F93               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2454  001C0C  0E01               	movlw	1
  2455  001C0E  6F92               	movwf	?_vfpfcnvrt& (0+255),b
  2456  001C10  EF33  F00E         	goto	l1050
  2457  001C14                     l4373:
  2458                           
  2459                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2460  001C14  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2461  001C18  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2462  001C1C  2ADE               	incf	postinc2,f,c
  2463  001C1E  0E00               	movlw	0
  2464  001C20  22DD               	addwfc	postdec2,f,c
  2465  001C22                     
  2466                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2467  001C22  0E00               	movlw	0
  2468  001C24  0100               	movlb	0	; () banked
  2469  001C26  6F93               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2470  001C28  0E00               	movlw	0
  2471  001C2A  6F92               	movwf	?_vfpfcnvrt& (0+255),b
  2472  001C2C  EF33  F00E         	goto	l1050
  2473  001C30                     l4379:
  2474                           
  2475                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2476  001C30  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2477  001C34  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2478  001C38  CFDE FFF6          	movff	postinc2,tblptrl
  2479  001C3C  CFDD FFF7          	movff	postdec2,tblptrh
  2480  001C40                     	if	0	;tblptru may be non-zero
  2481  001C40                     	endif
  2482  001C40                     	if	0	;tblptru may be non-zero
  2483  001C40                     	endif
  2484  001C40  0008               	tblrd		*
  2485  001C42  50F5               	movf	tablat,w,c
  2486  001C44  6E01               	movwf	fputc@c^0,c
  2487  001C46  6A02               	clrf	(fputc@c+1)^0,c
  2488  001C48  C092  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2489  001C4C  C093  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2490  001C50  EC55  F019         	call	_fputc	;wreg free
  2491  001C54                     
  2492                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2493  001C54  C094  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2494  001C58  C095  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2495  001C5C  2ADE               	incf	postinc2,f,c
  2496  001C5E  0E00               	movlw	0
  2497  001C60  22DD               	addwfc	postdec2,f,c
  2498  001C62  EF03  F00E         	goto	l4369
  2499  001C66                     l1050:
  2500  001C66  0012               	return		;funcret
  2501  001C68                     __end_of_vfpfcnvrt:
  2502                           	callstack 0
  2503                           
  2504 ;; *************** function _strncmp *****************
  2505 ;; Defined at:
  2506 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2509 ;;		 -> vfpfcnvrt@ct(3), 
  2510 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2511 ;;		 -> STR_21(3), 
  2512 ;;  n               2    4[COMRAM] unsigned int 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2515 ;;		 -> STR_21(3), 
  2516 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2517 ;;		 -> vfpfcnvrt@ct(3), 
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  2    0[COMRAM] int 
  2520 ;; Registers used:
  2521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2527 ;;      Params:         6       0       0       0
  2528 ;;      Locals:         4       0       0       0
  2529 ;;      Temps:          1       0       0       0
  2530 ;;      Totals:        11       0       0       0
  2531 ;;Total ram usage:       11 bytes
  2532 ;; Hardware stack levels used: 1
  2533 ;; Hardware stack levels required when called: 1
  2534 ;; This function calls:
  2535 ;;		Nothing
  2536 ;; This function is called by:
  2537 ;;		_vfpfcnvrt
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           	psect	text8
  2542  0031D4                     __ptext8:
  2543                           	callstack 0
  2544  0031D4                     _strncmp:
  2545                           	callstack 25
  2546  0031D4  C001  F008         	movff	strncmp@_l,strncmp@l
  2547  0031D8  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2548  0031DC  C003  F00A         	movff	strncmp@_r,strncmp@r
  2549  0031E0  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2550  0031E4  0605               	decf	strncmp@n^0,f,c
  2551  0031E6  A0D8               	btfss	status,0,c
  2552  0031E8  0606               	decf	(strncmp@n+1)^0,f,c
  2553  0031EA  2805               	incf	strncmp@n^0,w,c
  2554  0031EC  E106               	bnz	u4911
  2555  0031EE  2806               	incf	(strncmp@n+1)^0,w,c
  2556  0031F0  A4D8               	btfss	status,2,c
  2557  0031F2  EFFD  F018         	goto	u4911
  2558  0031F6  EFFF  F018         	goto	u4910
  2559  0031FA                     u4911:
  2560  0031FA  EF0C  F019         	goto	l4295
  2561  0031FE                     u4910:
  2562  0031FE  0E00               	movlw	0
  2563  003200  6E02               	movwf	(?_strncmp+1)^0,c
  2564  003202  0E00               	movlw	0
  2565  003204  6E01               	movwf	?_strncmp^0,c
  2566  003206  EF54  F019         	goto	l1139
  2567  00320A                     l4293:
  2568  00320A  4A08               	infsnz	strncmp@l^0,f,c
  2569  00320C  2A09               	incf	(strncmp@l+1)^0,f,c
  2570  00320E  4A0A               	infsnz	strncmp@r^0,f,c
  2571  003210  2A0B               	incf	(strncmp@r+1)^0,f,c
  2572  003212  0605               	decf	strncmp@n^0,f,c
  2573  003214  A0D8               	btfss	status,0,c
  2574  003216  0606               	decf	(strncmp@n+1)^0,f,c
  2575  003218                     l4295:
  2576  003218  C008  FFD9         	movff	strncmp@l,fsr2l
  2577  00321C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2578  003220  50DF               	movf	indf2,w,c
  2579  003222  B4D8               	btfsc	status,2,c
  2580  003224  EF16  F019         	goto	u4921
  2581  003228  EF18  F019         	goto	u4920
  2582  00322C                     u4921:
  2583  00322C  EF43  F019         	goto	l4303
  2584  003230                     u4920:
  2585  003230  C00A  FFF6         	movff	strncmp@r,tblptrl
  2586  003234  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2587  003238                     	if	0	;tblptru may be non-zero
  2588  003238                     	endif
  2589  003238                     	if	0	;tblptru may be non-zero
  2590  003238                     	endif
  2591  003238  0008               	tblrd		*
  2592  00323A  50F5               	movf	tablat,w,c
  2593  00323C  0900               	iorlw	0
  2594  00323E  B4D8               	btfsc	status,2,c
  2595  003240  EF24  F019         	goto	u4931
  2596  003244  EF26  F019         	goto	u4930
  2597  003248                     u4931:
  2598  003248  EF43  F019         	goto	l4303
  2599  00324C                     u4930:
  2600  00324C  5005               	movf	strncmp@n^0,w,c
  2601  00324E  1006               	iorwf	(strncmp@n+1)^0,w,c
  2602  003250  B4D8               	btfsc	status,2,c
  2603  003252  EF2D  F019         	goto	u4941
  2604  003256  EF2F  F019         	goto	u4940
  2605  00325A                     u4941:
  2606  00325A  EF43  F019         	goto	l4303
  2607  00325E                     u4940:
  2608  00325E  C008  FFD9         	movff	strncmp@l,fsr2l
  2609  003262  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2610  003266  50DF               	movf	indf2,w,c
  2611  003268  6E07               	movwf	??_strncmp^0,c
  2612  00326A  C00A  FFF6         	movff	strncmp@r,tblptrl
  2613  00326E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2614  003272                     	if	0	;tblptru may be non-zero
  2615  003272                     	endif
  2616  003272                     	if	0	;tblptru may be non-zero
  2617  003272                     	endif
  2618  003272  0008               	tblrd		*
  2619  003274  50F5               	movf	tablat,w,c
  2620  003276  1807               	xorwf	??_strncmp^0,w,c
  2621  003278  B4D8               	btfsc	status,2,c
  2622  00327A  EF41  F019         	goto	u4951
  2623  00327E  EF43  F019         	goto	u4950
  2624  003282                     u4951:
  2625  003282  EF05  F019         	goto	l4293
  2626  003286                     u4950:
  2627  003286                     l4303:
  2628  003286  C008  FFD9         	movff	strncmp@l,fsr2l
  2629  00328A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2630  00328E  50DF               	movf	indf2,w,c
  2631  003290  6E07               	movwf	??_strncmp^0,c
  2632  003292  C00A  FFF6         	movff	strncmp@r,tblptrl
  2633  003296  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2634  00329A                     	if	0	;tblptru may be non-zero
  2635  00329A                     	endif
  2636  00329A                     	if	0	;tblptru may be non-zero
  2637  00329A                     	endif
  2638  00329A  0008               	tblrd		*
  2639  00329C  50F5               	movf	tablat,w,c
  2640  00329E  5C07               	subwf	??_strncmp^0,w,c
  2641  0032A0  6E01               	movwf	?_strncmp^0,c
  2642  0032A2  6A02               	clrf	(?_strncmp+1)^0,c
  2643  0032A4  A0D8               	btfss	status,0,c
  2644  0032A6  0602               	decf	(?_strncmp+1)^0,f,c
  2645  0032A8                     l1139:
  2646  0032A8  0012               	return		;funcret
  2647  0032AA                     __end_of_strncmp:
  2648                           	callstack 0
  2649                           
  2650 ;; *************** function _efgtoa *****************
  2651 ;; Defined at:
  2652 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  2655 ;;		 -> sprintf@f(11), 
  2656 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  2657 ;;  c               1   51[COMRAM] unsigned char 
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;  u               4   46[BANK0 ] unsigned char 
  2660 ;;  g               4   38[BANK0 ] unsigned char 
  2661 ;;  l               4   32[BANK0 ] unsigned char 
  2662 ;;  h               4   28[BANK0 ] unsigned char 
  2663 ;;  ou              4   14[BANK0 ] unsigned char 
  2664 ;;  n               2   44[BANK0 ] int 
  2665 ;;  e               2   42[BANK0 ] int 
  2666 ;;  i               2   36[BANK0 ] int 
  2667 ;;  w               2   24[BANK0 ] int 
  2668 ;;  p               2   22[BANK0 ] int 
  2669 ;;  sign            2   20[BANK0 ] int 
  2670 ;;  d               2   18[BANK0 ] int 
  2671 ;;  m               2   12[BANK0 ] int 
  2672 ;;  ne              2   10[BANK0 ] int 
  2673 ;;  pp              2    8[BANK0 ] int 
  2674 ;;  t               2    6[BANK0 ] int 
  2675 ;;  mode            1   27[BANK0 ] unsigned char 
  2676 ;;  nmode           1   26[BANK0 ] unsigned char 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  2   45[COMRAM] int 
  2679 ;; Registers used:
  2680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2686 ;;      Params:         7       0       0       0
  2687 ;;      Locals:         0      50       0       0
  2688 ;;      Temps:          5       0       0       0
  2689 ;;      Totals:        12      50       0       0
  2690 ;;Total ram usage:       62 bytes
  2691 ;; Hardware stack levels used: 1
  2692 ;; Hardware stack levels required when called: 5
  2693 ;; This function calls:
  2694 ;;		___awdiv
  2695 ;;		___awmod
  2696 ;;		___fladd
  2697 ;;		___fldiv
  2698 ;;		___fleq
  2699 ;;		___flge
  2700 ;;		___flmul
  2701 ;;		___flneg
  2702 ;;		___flsub
  2703 ;;		___fltol
  2704 ;;		___fpclassifyf
  2705 ;;		_floorf
  2706 ;;		_isupper
  2707 ;;		_pad
  2708 ;;		_strcpy
  2709 ;;		_tolower
  2710 ;; This function is called by:
  2711 ;;		_vfpfcnvrt
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           	psect	text9
  2716  00037A                     __ptext9:
  2717                           	callstack 0
  2718  00037A                     _efgtoa:
  2719                           	callstack 21
  2720  00037A                     
  2721                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2722  00037A  0E00               	movlw	0
  2723  00037C  0100               	movlb	0	; () banked
  2724  00037E  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  2725  000380  0E00               	movlw	0
  2726  000382  6F74               	movwf	efgtoa@sign& (0+255),b
  2727  000384                     
  2728                           ; BSR set to: 0
  2729                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2730  000384  C030  F086         	movff	efgtoa@f,efgtoa@g
  2731  000388  C031  F087         	movff	efgtoa@f+1,efgtoa@g+1
  2732  00038C  C032  F088         	movff	efgtoa@f+2,efgtoa@g+2
  2733  000390  C033  F089         	movff	efgtoa@f+3,efgtoa@g+3
  2734  000394                     
  2735                           ; BSR set to: 0
  2736                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2737  000394  BF89               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2738  000396  EFD1  F001         	goto	u4430
  2739  00039A  EFCF  F001         	goto	u4431
  2740  00039E                     u4431:
  2741  00039E  EFE7  F001         	goto	l3991
  2742  0003A2                     u4430:
  2743  0003A2                     
  2744                           ; BSR set to: 0
  2745                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2746  0003A2  0E00               	movlw	0
  2747  0003A4  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  2748  0003A6  0E01               	movlw	1
  2749  0003A8  6F74               	movwf	efgtoa@sign& (0+255),b
  2750  0003AA                     
  2751                           ; BSR set to: 0
  2752                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2753  0003AA  C086  F001         	movff	efgtoa@g,___flneg@f1
  2754  0003AE  C087  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2755  0003B2  C088  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2756  0003B6  C089  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2757  0003BA  EC18  F01E         	call	___flneg	;wreg free
  2758  0003BE  C001  F086         	movff	?___flneg,efgtoa@g
  2759  0003C2  C002  F087         	movff	?___flneg+1,efgtoa@g+1
  2760  0003C6  C003  F088         	movff	?___flneg+2,efgtoa@g+2
  2761  0003CA  C004  F089         	movff	?___flneg+3,efgtoa@g+3
  2762  0003CE                     l3991:
  2763                           
  2764                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2765  0003CE  0E00               	movlw	0
  2766  0003D0  0100               	movlb	0	; () banked
  2767  0003D2  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  2768  0003D4  0E00               	movlw	0
  2769  0003D6  6F8C               	movwf	efgtoa@n& (0+255),b
  2770  0003D8                     
  2771                           ; BSR set to: 0
  2772                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2773  0003D8  C0F1  F078         	movff	_width,efgtoa@w
  2774  0003DC  C0F2  F079         	movff	_width+1,efgtoa@w+1
  2775  0003E0                     
  2776                           ; BSR set to: 0
  2777                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2778  0003E0  5174               	movf	efgtoa@sign& (0+255),w,b
  2779  0003E2  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2780  0003E4  A4D8               	btfss	status,2,c
  2781  0003E6  EFF7  F001         	goto	u4441
  2782  0003EA  EFF9  F001         	goto	u4440
  2783  0003EE                     u4441:
  2784  0003EE  EF00  F002         	goto	l3999
  2785  0003F2                     u4440:
  2786  0003F2                     
  2787                           ; BSR set to: 0
  2788  0003F2  A45A               	btfss	_flags^0,2,c
  2789  0003F4  EFFE  F001         	goto	u4451
  2790  0003F8  EF00  F002         	goto	u4450
  2791  0003FC                     u4451:
  2792  0003FC  EF1A  F002         	goto	l4011
  2793  000400                     u4450:
  2794  000400                     l3999:
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2798  000400  5174               	movf	efgtoa@sign& (0+255),w,b
  2799  000402  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2800  000404  A4D8               	btfss	status,2,c
  2801  000406  EF07  F002         	goto	u4461
  2802  00040A  EF09  F002         	goto	u4460
  2803  00040E                     u4461:
  2804  00040E  EF0F  F002         	goto	l4003
  2805  000412                     u4460:
  2806  000412                     
  2807                           ; BSR set to: 0
  2808  000412  0E00               	movlw	0
  2809  000414  6F61               	movwf	(_efgtoa$747+1)& (0+255),b
  2810  000416  0E2B               	movlw	43
  2811  000418  6F60               	movwf	_efgtoa$747& (0+255),b
  2812  00041A  EF13  F002         	goto	l4005
  2813  00041E                     l4003:
  2814                           
  2815                           ; BSR set to: 0
  2816  00041E  0E00               	movlw	0
  2817  000420  6F61               	movwf	(_efgtoa$747+1)& (0+255),b
  2818  000422  0E2D               	movlw	45
  2819  000424  6F60               	movwf	_efgtoa$747& (0+255),b
  2820  000426                     l4005:
  2821                           
  2822                           ; BSR set to: 0
  2823  000426  C060  F162         	movff	_efgtoa$747,_dbuf
  2824  00042A                     
  2825                           ; BSR set to: 0
  2826                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2827  00042A  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  2828  00042C  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  2829  00042E                     
  2830                           ; BSR set to: 0
  2831                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  2832  00042E  0778               	decf	efgtoa@w& (0+255),f,b
  2833  000430  A0D8               	btfss	status,0,c
  2834  000432  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  2835  000434                     l4011:
  2836                           
  2837                           ; BSR set to: 0
  2838                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  2839  000434  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  2840  000438  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2841  00043C  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2842  000440  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2843  000444  EC6B  F018         	call	___fpclassifyf	;wreg free
  2844  000448  0401               	decf	?___fpclassifyf^0,w,c
  2845  00044A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2846  00044C  A4D8               	btfss	status,2,c
  2847  00044E  EF2B  F002         	goto	u4471
  2848  000452  EF2D  F002         	goto	u4470
  2849  000456                     u4471:
  2850  000456  EF78  F002         	goto	l4029
  2851  00045A                     u4470:
  2852  00045A  0EBF               	movlw	191
  2853  00045C  6E35               	movwf	??_efgtoa^0,c
  2854  00045E  0EFF               	movlw	255
  2855  000460  6E36               	movwf	(??_efgtoa+1)^0,c
  2856  000462  5034               	movf	efgtoa@c^0,w,c
  2857  000464  6E37               	movwf	(??_efgtoa+2)^0,c
  2858  000466  6A38               	clrf	(??_efgtoa+3)^0,c
  2859  000468  5035               	movf	??_efgtoa^0,w,c
  2860  00046A  2637               	addwf	(??_efgtoa+2)^0,f,c
  2861  00046C  5036               	movf	(??_efgtoa+1)^0,w,c
  2862  00046E  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2863  000470  5038               	movf	(??_efgtoa+3)^0,w,c
  2864  000472  E107               	bnz	u4481
  2865  000474  0E1A               	movlw	26
  2866  000476  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2867  000478  B0D8               	btfsc	status,0,c
  2868  00047A  EF41  F002         	goto	u4481
  2869  00047E  EF43  F002         	goto	u4480
  2870  000482                     u4481:
  2871  000482  EF52  F002         	goto	l4021
  2872  000486                     u4480:
  2873  000486                     
  2874                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2875  000486  0E62               	movlw	low _dbuf
  2876  000488  0100               	movlb	0	; () banked
  2877  00048A  258C               	addwf	efgtoa@n& (0+255),w,b
  2878  00048C  6E01               	movwf	strcpy@dest^0,c
  2879  00048E  0E01               	movlw	high _dbuf
  2880  000490  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2881  000492  6E02               	movwf	(strcpy@dest+1)^0,c
  2882  000494  0E65               	movlw	low STR_11
  2883  000496  6E03               	movwf	strcpy@src^0,c
  2884  000498  0E03               	movlw	high STR_11
  2885  00049A  6E04               	movwf	(strcpy@src+1)^0,c
  2886  00049C  ECD6  F01C         	call	_strcpy	;wreg free
  2887                           
  2888                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2889  0004A0  EF5F  F002         	goto	l4023
  2890  0004A4                     l4021:
  2891                           
  2892                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2893  0004A4  0E62               	movlw	low _dbuf
  2894  0004A6  0100               	movlb	0	; () banked
  2895  0004A8  258C               	addwf	efgtoa@n& (0+255),w,b
  2896  0004AA  6E01               	movwf	strcpy@dest^0,c
  2897  0004AC  0E01               	movlw	high _dbuf
  2898  0004AE  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2899  0004B0  6E02               	movwf	(strcpy@dest+1)^0,c
  2900  0004B2  0E6D               	movlw	low STR_12
  2901  0004B4  6E03               	movwf	strcpy@src^0,c
  2902  0004B6  0E03               	movlw	high STR_12
  2903  0004B8  6E04               	movwf	(strcpy@src+1)^0,c
  2904  0004BA  ECD6  F01C         	call	_strcpy	;wreg free
  2905  0004BE                     l4023:
  2906                           
  2907                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2908  0004BE  0100               	movlb	0	; () banked
  2909  0004C0  0EFD               	movlw	253
  2910  0004C2  2778               	addwf	efgtoa@w& (0+255),f,b
  2911  0004C4  0EFF               	movlw	255
  2912  0004C6  2379               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2913  0004C8                     l4025:
  2914                           
  2915                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2916  0004C8  C02E  F011         	movff	efgtoa@fp,pad@fp
  2917  0004CC  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  2918  0004D0  0E62               	movlw	low _dbuf
  2919  0004D2  6E13               	movwf	pad@buf^0,c
  2920  0004D4  0E01               	movlw	high _dbuf
  2921  0004D6  6E14               	movwf	(pad@buf+1)^0,c
  2922  0004D8  C078  F015         	movff	efgtoa@w,pad@p
  2923  0004DC  C079  F016         	movff	efgtoa@w+1,pad@p+1
  2924  0004E0  EC1C  F01A         	call	_pad	;wreg free
  2925  0004E4  C011  F02E         	movff	?_pad,?_efgtoa
  2926  0004E8  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  2927  0004EC  EFC4  F007         	goto	l970
  2928  0004F0                     l4029:
  2929                           
  2930                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  2931  0004F0  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  2932  0004F4  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2933  0004F8  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2934  0004FC  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2935  000500  EC6B  F018         	call	___fpclassifyf	;wreg free
  2936  000504  5001               	movf	?___fpclassifyf^0,w,c
  2937  000506  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2938  000508  A4D8               	btfss	status,2,c
  2939  00050A  EF89  F002         	goto	u4491
  2940  00050E  EF8B  F002         	goto	u4490
  2941  000512                     u4491:
  2942  000512  EFBF  F002         	goto	l4047
  2943  000516                     u4490:
  2944  000516  0EBF               	movlw	191
  2945  000518  6E35               	movwf	??_efgtoa^0,c
  2946  00051A  0EFF               	movlw	255
  2947  00051C  6E36               	movwf	(??_efgtoa+1)^0,c
  2948  00051E  5034               	movf	efgtoa@c^0,w,c
  2949  000520  6E37               	movwf	(??_efgtoa+2)^0,c
  2950  000522  6A38               	clrf	(??_efgtoa+3)^0,c
  2951  000524  5035               	movf	??_efgtoa^0,w,c
  2952  000526  2637               	addwf	(??_efgtoa+2)^0,f,c
  2953  000528  5036               	movf	(??_efgtoa+1)^0,w,c
  2954  00052A  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2955  00052C  5038               	movf	(??_efgtoa+3)^0,w,c
  2956  00052E  E107               	bnz	u4501
  2957  000530  0E1A               	movlw	26
  2958  000532  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2959  000534  B0D8               	btfsc	status,0,c
  2960  000536  EF9F  F002         	goto	u4501
  2961  00053A  EFA1  F002         	goto	u4500
  2962  00053E                     u4501:
  2963  00053E  EFB0  F002         	goto	l4039
  2964  000542                     u4500:
  2965  000542                     
  2966                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2967  000542  0E62               	movlw	low _dbuf
  2968  000544  0100               	movlb	0	; () banked
  2969  000546  258C               	addwf	efgtoa@n& (0+255),w,b
  2970  000548  6E01               	movwf	strcpy@dest^0,c
  2971  00054A  0E01               	movlw	high _dbuf
  2972  00054C  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2973  00054E  6E02               	movwf	(strcpy@dest+1)^0,c
  2974  000550  0E69               	movlw	low STR_15
  2975  000552  6E03               	movwf	strcpy@src^0,c
  2976  000554  0E03               	movlw	high STR_15
  2977  000556  6E04               	movwf	(strcpy@src+1)^0,c
  2978  000558  ECD6  F01C         	call	_strcpy	;wreg free
  2979                           
  2980                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2981  00055C  EF5F  F002         	goto	l4023
  2982  000560                     l4039:
  2983                           
  2984                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2985  000560  0E62               	movlw	low _dbuf
  2986  000562  0100               	movlb	0	; () banked
  2987  000564  258C               	addwf	efgtoa@n& (0+255),w,b
  2988  000566  6E01               	movwf	strcpy@dest^0,c
  2989  000568  0E01               	movlw	high _dbuf
  2990  00056A  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2991  00056C  6E02               	movwf	(strcpy@dest+1)^0,c
  2992  00056E  0E71               	movlw	low STR_16
  2993  000570  6E03               	movwf	strcpy@src^0,c
  2994  000572  0E03               	movlw	high STR_16
  2995  000574  6E04               	movwf	(strcpy@src+1)^0,c
  2996  000576  ECD6  F01C         	call	_strcpy	;wreg free
  2997  00057A  EF5F  F002         	goto	l4023
  2998  00057E                     l4047:
  2999                           
  3000                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3001  00057E  0E00               	movlw	0
  3002  000580  0100               	movlb	0	; () banked
  3003  000582  6F8E               	movwf	efgtoa@u& (0+255),b
  3004  000584  0E00               	movlw	0
  3005  000586  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  3006  000588  0E80               	movlw	128
  3007  00058A  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  3008  00058C  0E3F               	movlw	63
  3009  00058E  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  3010                           
  3011                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3012  000590  0E00               	movlw	0
  3013  000592  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  3014  000594  0E00               	movlw	0
  3015  000596  6F8A               	movwf	efgtoa@e& (0+255),b
  3016  000598                     
  3017                           ; BSR set to: 0
  3018                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3019  000598  C086  F001         	movff	efgtoa@g,___fleq@ff1
  3020  00059C  C087  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3021  0005A0  C088  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3022  0005A4  C089  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3023  0005A8  0E00               	movlw	0
  3024  0005AA  6E05               	movwf	___fleq@ff2^0,c
  3025  0005AC  0E00               	movlw	0
  3026  0005AE  6E06               	movwf	(___fleq@ff2+1)^0,c
  3027  0005B0  0E00               	movlw	0
  3028  0005B2  6E07               	movwf	(___fleq@ff2+2)^0,c
  3029  0005B4  0E00               	movlw	0
  3030  0005B6  6E08               	movwf	(___fleq@ff2+3)^0,c
  3031  0005B8  ECD5  F01A         	call	___fleq	;wreg free
  3032  0005BC  B0D8               	btfsc	status,0,c
  3033  0005BE  EFE3  F002         	goto	u4511
  3034  0005C2  EFE5  F002         	goto	u4510
  3035  0005C6                     u4511:
  3036  0005C6  EF68  F003         	goto	l4065
  3037  0005CA                     u4510:
  3038  0005CA  EF04  F003         	goto	l4057
  3039  0005CE                     l4053:
  3040                           
  3041                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3042  0005CE  C08E  F001         	movff	efgtoa@u,___flmul@b
  3043  0005D2  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  3044  0005D6  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  3045  0005DA  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  3046  0005DE  0E00               	movlw	0
  3047  0005E0  6E05               	movwf	___flmul@a^0,c
  3048  0005E2  0E00               	movlw	0
  3049  0005E4  6E06               	movwf	(___flmul@a+1)^0,c
  3050  0005E6  0E20               	movlw	32
  3051  0005E8  6E07               	movwf	(___flmul@a+2)^0,c
  3052  0005EA  0E41               	movlw	65
  3053  0005EC  6E08               	movwf	(___flmul@a+3)^0,c
  3054  0005EE  EC25  F00A         	call	___flmul	;wreg free
  3055  0005F2  C001  F08E         	movff	?___flmul,efgtoa@u
  3056  0005F6  C002  F08F         	movff	?___flmul+1,efgtoa@u+1
  3057  0005FA  C003  F090         	movff	?___flmul+2,efgtoa@u+2
  3058  0005FE  C004  F091         	movff	?___flmul+3,efgtoa@u+3
  3059  000602                     
  3060                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3061  000602  0100               	movlb	0	; () banked
  3062  000604  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  3063  000606  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  3064  000608                     l4057:
  3065                           
  3066                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3067  000608  C086  F01A         	movff	efgtoa@g,___flge@ff1
  3068  00060C  C087  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3069  000610  C088  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3070  000614  C089  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3071  000618  0E00               	movlw	0
  3072  00061A  6E05               	movwf	___flmul@a^0,c
  3073  00061C  0E00               	movlw	0
  3074  00061E  6E06               	movwf	(___flmul@a+1)^0,c
  3075  000620  0E20               	movlw	32
  3076  000622  6E07               	movwf	(___flmul@a+2)^0,c
  3077  000624  0E41               	movlw	65
  3078  000626  6E08               	movwf	(___flmul@a+3)^0,c
  3079  000628  C08E  F001         	movff	efgtoa@u,___flmul@b
  3080  00062C  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  3081  000630  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  3082  000634  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  3083  000638  EC25  F00A         	call	___flmul	;wreg free
  3084  00063C  C001  F01E         	movff	?___flmul,___flge@ff2
  3085  000640  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3086  000644  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3087  000648  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3088  00064C  ECE9  F017         	call	___flge	;wreg free
  3089  000650  B0D8               	btfsc	status,0,c
  3090  000652  EF2D  F003         	goto	u4521
  3091  000656  EF2F  F003         	goto	u4520
  3092  00065A                     u4521:
  3093  00065A  EFE7  F002         	goto	l4053
  3094  00065E                     u4520:
  3095  00065E  EF4F  F003         	goto	l4063
  3096  000662                     l4059:
  3097                           
  3098                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3099  000662  C08E  F001         	movff	efgtoa@u,___fldiv@b
  3100  000666  C08F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3101  00066A  C090  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3102  00066E  C091  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3103  000672  0E00               	movlw	0
  3104  000674  6E05               	movwf	___fldiv@a^0,c
  3105  000676  0E00               	movlw	0
  3106  000678  6E06               	movwf	(___fldiv@a+1)^0,c
  3107  00067A  0E20               	movlw	32
  3108  00067C  6E07               	movwf	(___fldiv@a+2)^0,c
  3109  00067E  0E41               	movlw	65
  3110  000680  6E08               	movwf	(___fldiv@a+3)^0,c
  3111  000682  EC34  F00E         	call	___fldiv	;wreg free
  3112  000686  C001  F08E         	movff	?___fldiv,efgtoa@u
  3113  00068A  C002  F08F         	movff	?___fldiv+1,efgtoa@u+1
  3114  00068E  C003  F090         	movff	?___fldiv+2,efgtoa@u+2
  3115  000692  C004  F091         	movff	?___fldiv+3,efgtoa@u+3
  3116  000696                     
  3117                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3118  000696  0100               	movlb	0	; () banked
  3119  000698  078A               	decf	efgtoa@e& (0+255),f,b
  3120  00069A  A0D8               	btfss	status,0,c
  3121  00069C  078B               	decf	(efgtoa@e+1)& (0+255),f,b
  3122  00069E                     l4063:
  3123                           
  3124                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3125  00069E  C086  F01A         	movff	efgtoa@g,___flge@ff1
  3126  0006A2  C087  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3127  0006A6  C088  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3128  0006AA  C089  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3129  0006AE  C08E  F01E         	movff	efgtoa@u,___flge@ff2
  3130  0006B2  C08F  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  3131  0006B6  C090  F020         	movff	efgtoa@u+2,___flge@ff2+2
  3132  0006BA  C091  F021         	movff	efgtoa@u+3,___flge@ff2+3
  3133  0006BE  ECE9  F017         	call	___flge	;wreg free
  3134  0006C2  A0D8               	btfss	status,0,c
  3135  0006C4  EF66  F003         	goto	u4531
  3136  0006C8  EF68  F003         	goto	u4530
  3137  0006CC                     u4531:
  3138  0006CC  EF31  F003         	goto	l4059
  3139  0006D0                     u4530:
  3140  0006D0                     l4065:
  3141                           
  3142                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3143  0006D0  C034  F007         	movff	efgtoa@c,tolower@c
  3144  0006D4  6A08               	clrf	(tolower@c+1)^0,c
  3145  0006D6  EC52  F01D         	call	_tolower	;wreg free
  3146  0006DA  5007               	movf	?_tolower^0,w,c
  3147  0006DC  0100               	movlb	0	; () banked
  3148  0006DE  6F7B               	movwf	efgtoa@mode& (0+255),b
  3149  0006E0                     
  3150                           ; BSR set to: 0
  3151                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3152  0006E0  C07B  F07A         	movff	efgtoa@mode,efgtoa@nmode
  3153  0006E4                     
  3154                           ; BSR set to: 0
  3155                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3156  0006E4  0E67               	movlw	103
  3157  0006E6  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3158  0006E8  A4D8               	btfss	status,2,c
  3159  0006EA  EF79  F003         	goto	u4541
  3160  0006EE  EF7B  F003         	goto	u4540
  3161  0006F2                     u4541:
  3162  0006F2  EFA1  F003         	goto	l4079
  3163  0006F6                     u4540:
  3164  0006F6                     
  3165                           ; BSR set to: 0
  3166                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3167  0006F6  5058               	movf	_prec^0,w,c
  3168  0006F8  1059               	iorwf	(_prec+1)^0,w,c
  3169  0006FA  A4D8               	btfss	status,2,c
  3170  0006FC  EF82  F003         	goto	u4551
  3171  000700  EF84  F003         	goto	u4550
  3172  000704                     u4551:
  3173  000704  EF88  F003         	goto	l4075
  3174  000708                     u4550:
  3175  000708                     
  3176                           ; BSR set to: 0
  3177                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3178  000708  0E00               	movlw	0
  3179  00070A  6E59               	movwf	(_prec+1)^0,c
  3180  00070C  0E01               	movlw	1
  3181  00070E  6E58               	movwf	_prec^0,c
  3182  000710                     l4075:
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3186  000710  BE59               	btfsc	(_prec+1)^0,7,c
  3187  000712  EF95  F003         	goto	u4560
  3188  000716  5059               	movf	(_prec+1)^0,w,c
  3189  000718  E106               	bnz	u4561
  3190  00071A  0458               	decf	_prec^0,w,c
  3191  00071C  B0D8               	btfsc	status,0,c
  3192  00071E  EF93  F003         	goto	u4561
  3193  000722  EF95  F003         	goto	u4560
  3194  000726                     u4561:
  3195  000726  EF9B  F003         	goto	l986
  3196  00072A                     u4560:
  3197  00072A                     l4077:
  3198                           
  3199                           ; BSR set to: 0
  3200  00072A  0E00               	movlw	0
  3201  00072C  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  3202  00072E  0E06               	movlw	6
  3203  000730  6F76               	movwf	efgtoa@p& (0+255),b
  3204  000732  EFAA  F003         	goto	l4085
  3205  000736                     l986:
  3206                           
  3207                           ; BSR set to: 0
  3208  000736  C058  F076         	movff	_prec,efgtoa@p
  3209  00073A  C059  F077         	movff	_prec+1,efgtoa@p+1
  3210  00073E  EFAA  F003         	goto	l4085
  3211  000742                     l4079:
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3215  000742  BE59               	btfsc	(_prec+1)^0,7,c
  3216  000744  EFA6  F003         	goto	u4571
  3217  000748  EFA8  F003         	goto	u4570
  3218  00074C                     u4571:
  3219  00074C  EF95  F003         	goto	l4077
  3220  000750                     u4570:
  3221  000750  EF9B  F003         	goto	l986
  3222  000754                     l4085:
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3226  000754  0E67               	movlw	103
  3227  000756  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3228  000758  A4D8               	btfss	status,2,c
  3229  00075A  EFB1  F003         	goto	u4581
  3230  00075E  EFB3  F003         	goto	u4580
  3231  000762                     u4581:
  3232  000762  EFE2  F003         	goto	l4095
  3233  000766                     u4580:
  3234  000766                     
  3235                           ; BSR set to: 0
  3236                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3237  000766  AF8B               	btfss	(efgtoa@e+1)& (0+255),7,b
  3238  000768  EFC1  F003         	goto	u4590
  3239  00076C  0EFC               	movlw	252
  3240  00076E  5D8A               	subwf	efgtoa@e& (0+255),w,b
  3241  000770  0EFF               	movlw	255
  3242  000772  598B               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3243  000774  A0D8               	btfss	status,0,c
  3244  000776  EFBF  F003         	goto	u4591
  3245  00077A  EFC1  F003         	goto	u4590
  3246  00077E                     u4591:
  3247  00077E  EFE0  F003         	goto	l4093
  3248  000782                     u4590:
  3249  000782                     
  3250                           ; BSR set to: 0
  3251  000782  0EFF               	movlw	255
  3252  000784  6E35               	movwf	??_efgtoa^0,c
  3253  000786  0EFF               	movlw	255
  3254  000788  6E36               	movwf	(??_efgtoa+1)^0,c
  3255  00078A  C076  F037         	movff	efgtoa@p,??_efgtoa+2
  3256  00078E  C077  F038         	movff	efgtoa@p+1,??_efgtoa+3
  3257  000792  5035               	movf	??_efgtoa^0,w,c
  3258  000794  2637               	addwf	(??_efgtoa+2)^0,f,c
  3259  000796  5036               	movf	(??_efgtoa+1)^0,w,c
  3260  000798  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3261  00079A  518A               	movf	efgtoa@e& (0+255),w,b
  3262  00079C  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3263  00079E  5038               	movf	(??_efgtoa+3)^0,w,c
  3264  0007A0  0A80               	xorlw	128
  3265  0007A2  6E39               	movwf	(??_efgtoa+4)^0,c
  3266  0007A4  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  3267  0007A6  0A80               	xorlw	128
  3268  0007A8  5839               	subwfb	(??_efgtoa+4)^0,w,c
  3269  0007AA  A0D8               	btfss	status,0,c
  3270  0007AC  EFDA  F003         	goto	u4601
  3271  0007B0  EFDC  F003         	goto	u4600
  3272  0007B4                     u4601:
  3273  0007B4  EFE0  F003         	goto	l4093
  3274  0007B8                     u4600:
  3275  0007B8                     
  3276                           ; BSR set to: 0
  3277                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3278  0007B8  0E66               	movlw	102
  3279  0007BA  6F7A               	movwf	efgtoa@nmode& (0+255),b
  3280                           
  3281                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3282  0007BC  EFE2  F003         	goto	l4095
  3283  0007C0                     l4093:
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3287  0007C0  0E65               	movlw	101
  3288  0007C2  6F7A               	movwf	efgtoa@nmode& (0+255),b
  3289  0007C4                     l4095:
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3293  0007C4  C076  F06C         	movff	efgtoa@p,efgtoa@m
  3294  0007C8  C077  F06D         	movff	efgtoa@p+1,efgtoa@m+1
  3295  0007CC                     
  3296                           ; BSR set to: 0
  3297                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3298  0007CC  0E67               	movlw	103
  3299  0007CE  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3300  0007D0  A4D8               	btfss	status,2,c
  3301  0007D2  EFED  F003         	goto	u4611
  3302  0007D6  EFEF  F003         	goto	u4610
  3303  0007DA                     u4611:
  3304  0007DA  EFFF  F003         	goto	l4103
  3305  0007DE                     u4610:
  3306  0007DE                     
  3307                           ; BSR set to: 0
  3308  0007DE  0E66               	movlw	102
  3309  0007E0  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3310  0007E2  A4D8               	btfss	status,2,c
  3311  0007E4  EFF6  F003         	goto	u4621
  3312  0007E8  EFF8  F003         	goto	u4620
  3313  0007EC                     u4621:
  3314  0007EC  EF01  F004         	goto	l4105
  3315  0007F0                     u4620:
  3316  0007F0                     
  3317                           ; BSR set to: 0
  3318  0007F0  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3319  0007F2  EFFF  F003         	goto	u4630
  3320  0007F6  EFFD  F003         	goto	u4631
  3321  0007FA                     u4631:
  3322  0007FA  EF01  F004         	goto	l4105
  3323  0007FE                     u4630:
  3324  0007FE                     l4103:
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3328  0007FE  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  3329  000800  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  3330  000802                     l4105:
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3334  000802  0E66               	movlw	102
  3335  000804  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3336  000806  A4D8               	btfss	status,2,c
  3337  000808  EF08  F004         	goto	u4641
  3338  00080C  EF0A  F004         	goto	u4640
  3339  000810                     u4641:
  3340  000810  EF2A  F004         	goto	l4115
  3341  000814                     u4640:
  3342  000814                     
  3343                           ; BSR set to: 0
  3344                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3345  000814  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3346  000816  EF11  F004         	goto	u4650
  3347  00081A  EF0F  F004         	goto	u4651
  3348  00081E                     u4651:
  3349  00081E  EF1D  F004         	goto	l4111
  3350  000822                     u4650:
  3351  000822                     
  3352                           ; BSR set to: 0
  3353                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3354  000822  0E00               	movlw	0
  3355  000824  6F8E               	movwf	efgtoa@u& (0+255),b
  3356  000826  0E00               	movlw	0
  3357  000828  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  3358  00082A  0E80               	movlw	128
  3359  00082C  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  3360  00082E  0E3F               	movlw	63
  3361  000830  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  3362                           
  3363                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3364  000832  0E00               	movlw	0
  3365  000834  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  3366  000836  0E00               	movlw	0
  3367  000838  6F8A               	movwf	efgtoa@e& (0+255),b
  3368  00083A                     l4111:
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3372  00083A  0E67               	movlw	103
  3373  00083C  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3374  00083E  B4D8               	btfsc	status,2,c
  3375  000840  EF24  F004         	goto	u4661
  3376  000844  EF26  F004         	goto	u4660
  3377  000848                     u4661:
  3378  000848  EF2A  F004         	goto	l4115
  3379  00084C                     u4660:
  3380  00084C                     
  3381                           ; BSR set to: 0
  3382                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3383  00084C  518A               	movf	efgtoa@e& (0+255),w,b
  3384  00084E  276C               	addwf	efgtoa@m& (0+255),f,b
  3385  000850  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  3386  000852  236D               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3387  000854                     l4115:
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3391  000854  0E00               	movlw	0
  3392  000856  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  3393  000858  0E00               	movlw	0
  3394  00085A  6F84               	movwf	efgtoa@i& (0+255),b
  3395  00085C                     
  3396                           ; BSR set to: 0
  3397                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3398  00085C  C086  F07C         	movff	efgtoa@g,efgtoa@h
  3399  000860  C087  F07D         	movff	efgtoa@g+1,efgtoa@h+1
  3400  000864  C088  F07E         	movff	efgtoa@g+2,efgtoa@h+2
  3401  000868  C089  F07F         	movff	efgtoa@g+3,efgtoa@h+3
  3402  00086C                     
  3403                           ; BSR set to: 0
  3404                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3405  00086C  C08E  F06E         	movff	efgtoa@u,efgtoa@ou
  3406  000870  C08F  F06F         	movff	efgtoa@u+1,efgtoa@ou+1
  3407  000874  C090  F070         	movff	efgtoa@u+2,efgtoa@ou+2
  3408  000878  C091  F071         	movff	efgtoa@u+3,efgtoa@ou+3
  3409                           
  3410                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3411  00087C  EFBB  F004         	goto	l4129
  3412  000880                     l4121:
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3416  000880  C07C  F001         	movff	efgtoa@h,___fldiv@b
  3417  000884  C07D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3418  000888  C07E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3419  00088C  C07F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3420  000890  C08E  F005         	movff	efgtoa@u,___fldiv@a
  3421  000894  C08F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3422  000898  C090  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3423  00089C  C091  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3424  0008A0  EC34  F00E         	call	___fldiv	;wreg free
  3425  0008A4  C001  F01A         	movff	?___fldiv,floorf@x
  3426  0008A8  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3427  0008AC  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3428  0008B0  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3429  0008B4  EC70  F011         	call	_floorf	;wreg free
  3430  0008B8  C01A  F080         	movff	?_floorf,efgtoa@l
  3431  0008BC  C01B  F081         	movff	?_floorf+1,efgtoa@l+1
  3432  0008C0  C01C  F082         	movff	?_floorf+2,efgtoa@l+2
  3433  0008C4  C01D  F083         	movff	?_floorf+3,efgtoa@l+3
  3434                           
  3435                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3436  0008C8  C080  F001         	movff	efgtoa@l,___fltol@f1
  3437  0008CC  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3438  0008D0  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3439  0008D4  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3440  0008D8  EC66  F017         	call	___fltol	;wreg free
  3441  0008DC  C001  F072         	movff	?___fltol,efgtoa@d
  3442  0008E0  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  3443  0008E4                     
  3444                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3445  0008E4  C07C  F01A         	movff	efgtoa@h,___flsub@b
  3446  0008E8  C07D  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3447  0008EC  C07E  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3448  0008F0  C07F  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3449  0008F4  C08E  F005         	movff	efgtoa@u,___flmul@a
  3450  0008F8  C08F  F006         	movff	efgtoa@u+1,___flmul@a+1
  3451  0008FC  C090  F007         	movff	efgtoa@u+2,___flmul@a+2
  3452  000900  C091  F008         	movff	efgtoa@u+3,___flmul@a+3
  3453  000904  C080  F001         	movff	efgtoa@l,___flmul@b
  3454  000908  C081  F002         	movff	efgtoa@l+1,___flmul@b+1
  3455  00090C  C082  F003         	movff	efgtoa@l+2,___flmul@b+2
  3456  000910  C083  F004         	movff	efgtoa@l+3,___flmul@b+3
  3457  000914  EC25  F00A         	call	___flmul	;wreg free
  3458  000918  C001  F01E         	movff	?___flmul,___flsub@a
  3459  00091C  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3460  000920  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3461  000924  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3462  000928  EC75  F01D         	call	___flsub	;wreg free
  3463  00092C  C01A  F07C         	movff	?___flsub,efgtoa@h
  3464  000930  C01B  F07D         	movff	?___flsub+1,efgtoa@h+1
  3465  000934  C01C  F07E         	movff	?___flsub+2,efgtoa@h+2
  3466  000938  C01D  F07F         	movff	?___flsub+3,efgtoa@h+3
  3467  00093C                     
  3468                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3469  00093C  C08E  F001         	movff	efgtoa@u,___fldiv@b
  3470  000940  C08F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3471  000944  C090  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3472  000948  C091  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3473  00094C  0E00               	movlw	0
  3474  00094E  6E05               	movwf	___fldiv@a^0,c
  3475  000950  0E00               	movlw	0
  3476  000952  6E06               	movwf	(___fldiv@a+1)^0,c
  3477  000954  0E20               	movlw	32
  3478  000956  6E07               	movwf	(___fldiv@a+2)^0,c
  3479  000958  0E41               	movlw	65
  3480  00095A  6E08               	movwf	(___fldiv@a+3)^0,c
  3481  00095C  EC34  F00E         	call	___fldiv	;wreg free
  3482  000960  C001  F08E         	movff	?___fldiv,efgtoa@u
  3483  000964  C002  F08F         	movff	?___fldiv+1,efgtoa@u+1
  3484  000968  C003  F090         	movff	?___fldiv+2,efgtoa@u+2
  3485  00096C  C004  F091         	movff	?___fldiv+3,efgtoa@u+3
  3486  000970                     
  3487                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3488  000970  0100               	movlb	0	; () banked
  3489  000972  4B84               	infsnz	efgtoa@i& (0+255),f,b
  3490  000974  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  3491  000976                     l4129:
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3495  000976  516C               	movf	efgtoa@m& (0+255),w,b
  3496  000978  5D84               	subwf	efgtoa@i& (0+255),w,b
  3497  00097A  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  3498  00097C  0A80               	xorlw	128
  3499  00097E  6E35               	movwf	??_efgtoa^0,c
  3500  000980  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  3501  000982  0A80               	xorlw	128
  3502  000984  5835               	subwfb	??_efgtoa^0,w,c
  3503  000986  A0D8               	btfss	status,0,c
  3504  000988  EFC8  F004         	goto	u4671
  3505  00098C  EFCA  F004         	goto	u4670
  3506  000990                     u4671:
  3507  000990  EF40  F004         	goto	l4121
  3508  000994                     u4670:
  3509  000994                     
  3510                           ; BSR set to: 0
  3511                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3512  000994  C08E  F001         	movff	efgtoa@u,___flmul@b
  3513  000998  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  3514  00099C  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  3515  0009A0  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  3516  0009A4  0E00               	movlw	0
  3517  0009A6  6E05               	movwf	___flmul@a^0,c
  3518  0009A8  0E00               	movlw	0
  3519  0009AA  6E06               	movwf	(___flmul@a+1)^0,c
  3520  0009AC  0EA0               	movlw	160
  3521  0009AE  6E07               	movwf	(___flmul@a+2)^0,c
  3522  0009B0  0E40               	movlw	64
  3523  0009B2  6E08               	movwf	(___flmul@a+3)^0,c
  3524  0009B4  EC25  F00A         	call	___flmul	;wreg free
  3525  0009B8  C001  F080         	movff	?___flmul,efgtoa@l
  3526  0009BC  C002  F081         	movff	?___flmul+1,efgtoa@l+1
  3527  0009C0  C003  F082         	movff	?___flmul+2,efgtoa@l+2
  3528  0009C4  C004  F083         	movff	?___flmul+3,efgtoa@l+3
  3529  0009C8                     
  3530                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3531  0009C8  C07C  F01A         	movff	efgtoa@h,___flge@ff1
  3532  0009CC  C07D  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3533  0009D0  C07E  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3534  0009D4  C07F  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3535  0009D8  C080  F01E         	movff	efgtoa@l,___flge@ff2
  3536  0009DC  C081  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3537  0009E0  C082  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3538  0009E4  C083  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3539  0009E8  ECE9  F017         	call	___flge	;wreg free
  3540  0009EC  B0D8               	btfsc	status,0,c
  3541  0009EE  EFFB  F004         	goto	u4681
  3542  0009F2  EFFD  F004         	goto	u4680
  3543  0009F6                     u4681:
  3544  0009F6  EF08  F005         	goto	l4137
  3545  0009FA                     u4680:
  3546  0009FA                     
  3547                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3548  0009FA  0E00               	movlw	0
  3549  0009FC  0100               	movlb	0	; () banked
  3550  0009FE  6F80               	movwf	efgtoa@l& (0+255),b
  3551  000A00  0E00               	movlw	0
  3552  000A02  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  3553  000A04  0E00               	movlw	0
  3554  000A06  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  3555  000A08  0E00               	movlw	0
  3556  000A0A  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  3557                           
  3558                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  3559  000A0C  EF31  F005         	goto	l4143
  3560  000A10                     l4137:
  3561                           
  3562                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3563  000A10  C07C  F001         	movff	efgtoa@h,___fleq@ff1
  3564  000A14  C07D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3565  000A18  C07E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3566  000A1C  C07F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3567  000A20  C080  F005         	movff	efgtoa@l,___fleq@ff2
  3568  000A24  C081  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3569  000A28  C082  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3570  000A2C  C083  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3571  000A30  ECD5  F01A         	call	___fleq	;wreg free
  3572  000A34  A0D8               	btfss	status,0,c
  3573  000A36  EF1F  F005         	goto	u4691
  3574  000A3A  EF21  F005         	goto	u4690
  3575  000A3E                     u4691:
  3576  000A3E  EF31  F005         	goto	l4143
  3577  000A42                     u4690:
  3578  000A42  0100               	movlb	0	; () banked
  3579  000A44  B172               	btfsc	efgtoa@d& (0+255),0,b
  3580  000A46  EF27  F005         	goto	u4701
  3581  000A4A  EF29  F005         	goto	u4700
  3582  000A4E                     u4701:
  3583  000A4E  EF31  F005         	goto	l4143
  3584  000A52                     u4700:
  3585  000A52                     
  3586                           ; BSR set to: 0
  3587                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3588  000A52  0E00               	movlw	0
  3589  000A54  6F80               	movwf	efgtoa@l& (0+255),b
  3590  000A56  0E00               	movlw	0
  3591  000A58  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  3592  000A5A  0E00               	movlw	0
  3593  000A5C  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  3594  000A5E  0E00               	movlw	0
  3595  000A60  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  3596  000A62                     l4143:
  3597                           
  3598                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3599  000A62  C086  F001         	movff	efgtoa@g,___fladd@b
  3600  000A66  C087  F002         	movff	efgtoa@g+1,___fladd@b+1
  3601  000A6A  C088  F003         	movff	efgtoa@g+2,___fladd@b+2
  3602  000A6E  C089  F004         	movff	efgtoa@g+3,___fladd@b+3
  3603  000A72  C080  F005         	movff	efgtoa@l,___fladd@a
  3604  000A76  C081  F006         	movff	efgtoa@l+1,___fladd@a+1
  3605  000A7A  C082  F007         	movff	efgtoa@l+2,___fladd@a+2
  3606  000A7E  C083  F008         	movff	efgtoa@l+3,___fladd@a+3
  3607  000A82  ECC5  F007         	call	___fladd	;wreg free
  3608  000A86  C001  F07C         	movff	?___fladd,efgtoa@h
  3609  000A8A  C002  F07D         	movff	?___fladd+1,efgtoa@h+1
  3610  000A8E  C003  F07E         	movff	?___fladd+2,efgtoa@h+2
  3611  000A92  C004  F07F         	movff	?___fladd+3,efgtoa@h+3
  3612  000A96                     
  3613                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3614  000A96  C07C  F01A         	movff	efgtoa@h,___flge@ff1
  3615  000A9A  C07D  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3616  000A9E  C07E  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3617  000AA2  C07F  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3618  000AA6  0E00               	movlw	0
  3619  000AA8  6E05               	movwf	___flmul@a^0,c
  3620  000AAA  0E00               	movlw	0
  3621  000AAC  6E06               	movwf	(___flmul@a+1)^0,c
  3622  000AAE  0E20               	movlw	32
  3623  000AB0  6E07               	movwf	(___flmul@a+2)^0,c
  3624  000AB2  0E41               	movlw	65
  3625  000AB4  6E08               	movwf	(___flmul@a+3)^0,c
  3626  000AB6  C06E  F001         	movff	efgtoa@ou,___flmul@b
  3627  000ABA  C06F  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3628  000ABE  C070  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3629  000AC2  C071  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3630  000AC6  EC25  F00A         	call	___flmul	;wreg free
  3631  000ACA  C001  F01E         	movff	?___flmul,___flge@ff2
  3632  000ACE  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3633  000AD2  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3634  000AD6  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3635  000ADA  ECE9  F017         	call	___flge	;wreg free
  3636  000ADE  A0D8               	btfss	status,0,c
  3637  000AE0  EF74  F005         	goto	u4711
  3638  000AE4  EF76  F005         	goto	u4710
  3639  000AE8                     u4711:
  3640  000AE8  EF9F  F005         	goto	l4155
  3641  000AEC                     u4710:
  3642  000AEC                     
  3643                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  3644  000AEC  0100               	movlb	0	; () banked
  3645  000AEE  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  3646  000AF0  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  3647  000AF2                     
  3648                           ; BSR set to: 0
  3649                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3650  000AF2  C06E  F001         	movff	efgtoa@ou,___flmul@b
  3651  000AF6  C06F  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3652  000AFA  C070  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3653  000AFE  C071  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3654  000B02  0E00               	movlw	0
  3655  000B04  6E05               	movwf	___flmul@a^0,c
  3656  000B06  0E00               	movlw	0
  3657  000B08  6E06               	movwf	(___flmul@a+1)^0,c
  3658  000B0A  0E20               	movlw	32
  3659  000B0C  6E07               	movwf	(___flmul@a+2)^0,c
  3660  000B0E  0E41               	movlw	65
  3661  000B10  6E08               	movwf	(___flmul@a+3)^0,c
  3662  000B12  EC25  F00A         	call	___flmul	;wreg free
  3663  000B16  C001  F06E         	movff	?___flmul,efgtoa@ou
  3664  000B1A  C002  F06F         	movff	?___flmul+1,efgtoa@ou+1
  3665  000B1E  C003  F070         	movff	?___flmul+2,efgtoa@ou+2
  3666  000B22  C004  F071         	movff	?___flmul+3,efgtoa@ou+3
  3667  000B26                     
  3668                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3669  000B26  0E66               	movlw	102
  3670  000B28  0100               	movlb	0	; () banked
  3671  000B2A  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3672  000B2C  A4D8               	btfss	status,2,c
  3673  000B2E  EF9B  F005         	goto	u4721
  3674  000B32  EF9D  F005         	goto	u4720
  3675  000B36                     u4721:
  3676  000B36  EF9F  F005         	goto	l4155
  3677  000B3A                     u4720:
  3678  000B3A                     
  3679                           ; BSR set to: 0
  3680                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  3681  000B3A  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  3682  000B3C  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  3683  000B3E                     l4155:
  3684                           
  3685                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3686  000B3E  C06E  F08E         	movff	efgtoa@ou,efgtoa@u
  3687  000B42  C06F  F08F         	movff	efgtoa@ou+1,efgtoa@u+1
  3688  000B46  C070  F090         	movff	efgtoa@ou+2,efgtoa@u+2
  3689  000B4A  C071  F091         	movff	efgtoa@ou+3,efgtoa@u+3
  3690  000B4E                     
  3691                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3692  000B4E  0E65               	movlw	101
  3693  000B50  0100               	movlb	0	; () banked
  3694  000B52  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3695  000B54  B4D8               	btfsc	status,2,c
  3696  000B56  EFAF  F005         	goto	u4731
  3697  000B5A  EFB1  F005         	goto	u4730
  3698  000B5E                     u4731:
  3699  000B5E  EFB7  F005         	goto	l4161
  3700  000B62                     u4730:
  3701  000B62                     
  3702                           ; BSR set to: 0
  3703  000B62  C08A  F06A         	movff	efgtoa@e,efgtoa@ne
  3704  000B66  C08B  F06B         	movff	efgtoa@e+1,efgtoa@ne+1
  3705  000B6A  EFBB  F005         	goto	l1014
  3706  000B6E                     l4161:
  3707                           
  3708                           ; BSR set to: 0
  3709  000B6E  0E00               	movlw	0
  3710  000B70  6F6B               	movwf	(efgtoa@ne+1)& (0+255),b
  3711  000B72  0E00               	movlw	0
  3712  000B74  6F6A               	movwf	efgtoa@ne& (0+255),b
  3713  000B76                     l1014:
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3717  000B76  0E00               	movlw	0
  3718  000B78  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  3719  000B7A  0E00               	movlw	0
  3720  000B7C  6F68               	movwf	efgtoa@pp& (0+255),b
  3721                           
  3722                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3723  000B7E  0E00               	movlw	0
  3724  000B80  6F67               	movwf	(efgtoa@t+1)& (0+255),b
  3725  000B82  0E00               	movlw	0
  3726  000B84  6F66               	movwf	efgtoa@t& (0+255),b
  3727                           
  3728                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3729  000B86  0E00               	movlw	0
  3730  000B88  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  3731  000B8A  0E00               	movlw	0
  3732  000B8C  6F84               	movwf	efgtoa@i& (0+255),b
  3733                           
  3734                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3735  000B8E  EFB7  F006         	goto	l4211
  3736  000B92                     l4163:
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3740  000B92  C07C  F001         	movff	efgtoa@h,___fldiv@b
  3741  000B96  C07D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3742  000B9A  C07E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3743  000B9E  C07F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3744  000BA2  C08E  F005         	movff	efgtoa@u,___fldiv@a
  3745  000BA6  C08F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3746  000BAA  C090  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3747  000BAE  C091  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3748  000BB2  EC34  F00E         	call	___fldiv	;wreg free
  3749  000BB6  C001  F01A         	movff	?___fldiv,floorf@x
  3750  000BBA  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3751  000BBE  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3752  000BC2  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3753  000BC6  EC70  F011         	call	_floorf	;wreg free
  3754  000BCA  C01A  F080         	movff	?_floorf,efgtoa@l
  3755  000BCE  C01B  F081         	movff	?_floorf+1,efgtoa@l+1
  3756  000BD2  C01C  F082         	movff	?_floorf+2,efgtoa@l+2
  3757  000BD6  C01D  F083         	movff	?_floorf+3,efgtoa@l+3
  3758                           
  3759                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3760  000BDA  C080  F001         	movff	efgtoa@l,___fltol@f1
  3761  000BDE  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3762  000BE2  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3763  000BE6  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3764  000BEA  EC66  F017         	call	___fltol	;wreg free
  3765  000BEE  C001  F072         	movff	?___fltol,efgtoa@d
  3766  000BF2  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  3767  000BF6                     
  3768                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3769  000BF6  B85A               	btfsc	_flags^0,4,c
  3770  000BF8  EF00  F006         	goto	u4741
  3771  000BFC  EF02  F006         	goto	u4740
  3772  000C00                     u4741:
  3773  000C00  EF20  F006         	goto	l4175
  3774  000C04                     u4740:
  3775  000C04  0100               	movlb	0	; () banked
  3776  000C06  5172               	movf	efgtoa@d& (0+255),w,b
  3777  000C08  1173               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3778  000C0A  A4D8               	btfss	status,2,c
  3779  000C0C  EF0A  F006         	goto	u4751
  3780  000C10  EF0C  F006         	goto	u4750
  3781  000C14                     u4751:
  3782  000C14  EF20  F006         	goto	l4175
  3783  000C18                     u4750:
  3784  000C18                     
  3785                           ; BSR set to: 0
  3786  000C18  0E67               	movlw	103
  3787  000C1A  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3788  000C1C  A4D8               	btfss	status,2,c
  3789  000C1E  EF13  F006         	goto	u4761
  3790  000C22  EF15  F006         	goto	u4760
  3791  000C26                     u4761:
  3792  000C26  EF20  F006         	goto	l4175
  3793  000C2A                     u4760:
  3794  000C2A                     
  3795                           ; BSR set to: 0
  3796  000C2A  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3797  000C2C  EF1C  F006         	goto	u4770
  3798  000C30  EF1A  F006         	goto	u4771
  3799  000C34                     u4771:
  3800  000C34  EF20  F006         	goto	l4175
  3801  000C38                     u4770:
  3802  000C38                     
  3803                           ; BSR set to: 0
  3804                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3805  000C38  4B66               	infsnz	efgtoa@t& (0+255),f,b
  3806  000C3A  2B67               	incf	(efgtoa@t+1)& (0+255),f,b
  3807                           
  3808                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3809  000C3C  EF6B  F006         	goto	l4203
  3810  000C40                     l4175:
  3811                           
  3812                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3813  000C40  0100               	movlb	0	; () banked
  3814  000C42  5168               	movf	efgtoa@pp& (0+255),w,b
  3815  000C44  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3816  000C46  A4D8               	btfss	status,2,c
  3817  000C48  EF28  F006         	goto	u4781
  3818  000C4C  EF2A  F006         	goto	u4780
  3819  000C50                     u4781:
  3820  000C50  EF54  F006         	goto	l4195
  3821  000C54                     u4780:
  3822  000C54                     
  3823                           ; BSR set to: 0
  3824  000C54  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3825  000C56  EF31  F006         	goto	u4790
  3826  000C5A  EF2F  F006         	goto	u4791
  3827  000C5E                     u4791:
  3828  000C5E  EF54  F006         	goto	l4195
  3829  000C62                     u4790:
  3830  000C62                     
  3831                           ; BSR set to: 0
  3832                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3833  000C62  0E62               	movlw	low _dbuf
  3834  000C64  258C               	addwf	efgtoa@n& (0+255),w,b
  3835  000C66  6ED9               	movwf	fsr2l,c
  3836  000C68  0E01               	movlw	high _dbuf
  3837  000C6A  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3838  000C6C  6EDA               	movwf	fsr2h,c
  3839  000C6E  0E2E               	movlw	46
  3840  000C70  6EDF               	movwf	indf2,c
  3841  000C72                     
  3842                           ; BSR set to: 0
  3843  000C72  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3844  000C74  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3845  000C76                     
  3846                           ; BSR set to: 0
  3847                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3848  000C76  0778               	decf	efgtoa@w& (0+255),f,b
  3849  000C78  A0D8               	btfss	status,0,c
  3850  000C7A  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3851  000C7C                     
  3852                           ; BSR set to: 0
  3853                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3854  000C7C  0E00               	movlw	0
  3855  000C7E  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  3856  000C80  0E01               	movlw	1
  3857  000C82  6F68               	movwf	efgtoa@pp& (0+255),b
  3858  000C84  EF54  F006         	goto	l4195
  3859  000C88                     l4187:
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3863  000C88  0E62               	movlw	low _dbuf
  3864  000C8A  258C               	addwf	efgtoa@n& (0+255),w,b
  3865  000C8C  6ED9               	movwf	fsr2l,c
  3866  000C8E  0E01               	movlw	high _dbuf
  3867  000C90  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3868  000C92  6EDA               	movwf	fsr2h,c
  3869  000C94  0E30               	movlw	48
  3870  000C96  6EDF               	movwf	indf2,c
  3871  000C98                     
  3872                           ; BSR set to: 0
  3873  000C98  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3874  000C9A  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3875  000C9C                     
  3876                           ; BSR set to: 0
  3877                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3878  000C9C  0778               	decf	efgtoa@w& (0+255),f,b
  3879  000C9E  A0D8               	btfss	status,0,c
  3880  000CA0  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3881  000CA2                     
  3882                           ; BSR set to: 0
  3883                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3884  000CA2  0766               	decf	efgtoa@t& (0+255),f,b
  3885  000CA4  A0D8               	btfss	status,0,c
  3886  000CA6  0767               	decf	(efgtoa@t+1)& (0+255),f,b
  3887  000CA8                     l4195:
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3891  000CA8  5166               	movf	efgtoa@t& (0+255),w,b
  3892  000CAA  1167               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3893  000CAC  A4D8               	btfss	status,2,c
  3894  000CAE  EF5B  F006         	goto	u4801
  3895  000CB2  EF5D  F006         	goto	u4800
  3896  000CB6                     u4801:
  3897  000CB6  EF44  F006         	goto	l4187
  3898  000CBA                     u4800:
  3899  000CBA                     
  3900                           ; BSR set to: 0
  3901                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3902  000CBA  0E62               	movlw	low _dbuf
  3903  000CBC  258C               	addwf	efgtoa@n& (0+255),w,b
  3904  000CBE  6ED9               	movwf	fsr2l,c
  3905  000CC0  0E01               	movlw	high _dbuf
  3906  000CC2  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3907  000CC4  6EDA               	movwf	fsr2h,c
  3908  000CC6  5172               	movf	efgtoa@d& (0+255),w,b
  3909  000CC8  0F30               	addlw	48
  3910  000CCA  6EDF               	movwf	indf2,c
  3911  000CCC                     
  3912                           ; BSR set to: 0
  3913  000CCC  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3914  000CCE  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3915  000CD0                     
  3916                           ; BSR set to: 0
  3917                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3918  000CD0  0778               	decf	efgtoa@w& (0+255),f,b
  3919  000CD2  A0D8               	btfss	status,0,c
  3920  000CD4  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3921  000CD6                     l4203:
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3925  000CD6  C07C  F01A         	movff	efgtoa@h,___flsub@b
  3926  000CDA  C07D  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3927  000CDE  C07E  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3928  000CE2  C07F  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3929  000CE6  C08E  F005         	movff	efgtoa@u,___flmul@a
  3930  000CEA  C08F  F006         	movff	efgtoa@u+1,___flmul@a+1
  3931  000CEE  C090  F007         	movff	efgtoa@u+2,___flmul@a+2
  3932  000CF2  C091  F008         	movff	efgtoa@u+3,___flmul@a+3
  3933  000CF6  C080  F001         	movff	efgtoa@l,___flmul@b
  3934  000CFA  C081  F002         	movff	efgtoa@l+1,___flmul@b+1
  3935  000CFE  C082  F003         	movff	efgtoa@l+2,___flmul@b+2
  3936  000D02  C083  F004         	movff	efgtoa@l+3,___flmul@b+3
  3937  000D06  EC25  F00A         	call	___flmul	;wreg free
  3938  000D0A  C001  F01E         	movff	?___flmul,___flsub@a
  3939  000D0E  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3940  000D12  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3941  000D16  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3942  000D1A  EC75  F01D         	call	___flsub	;wreg free
  3943  000D1E  C01A  F07C         	movff	?___flsub,efgtoa@h
  3944  000D22  C01B  F07D         	movff	?___flsub+1,efgtoa@h+1
  3945  000D26  C01C  F07E         	movff	?___flsub+2,efgtoa@h+2
  3946  000D2A  C01D  F07F         	movff	?___flsub+3,efgtoa@h+3
  3947  000D2E                     
  3948                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3949  000D2E  C08E  F001         	movff	efgtoa@u,___fldiv@b
  3950  000D32  C08F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3951  000D36  C090  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3952  000D3A  C091  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3953  000D3E  0E00               	movlw	0
  3954  000D40  6E05               	movwf	___fldiv@a^0,c
  3955  000D42  0E00               	movlw	0
  3956  000D44  6E06               	movwf	(___fldiv@a+1)^0,c
  3957  000D46  0E20               	movlw	32
  3958  000D48  6E07               	movwf	(___fldiv@a+2)^0,c
  3959  000D4A  0E41               	movlw	65
  3960  000D4C  6E08               	movwf	(___fldiv@a+3)^0,c
  3961  000D4E  EC34  F00E         	call	___fldiv	;wreg free
  3962  000D52  C001  F08E         	movff	?___fldiv,efgtoa@u
  3963  000D56  C002  F08F         	movff	?___fldiv+1,efgtoa@u+1
  3964  000D5A  C003  F090         	movff	?___fldiv+2,efgtoa@u+2
  3965  000D5E  C004  F091         	movff	?___fldiv+3,efgtoa@u+3
  3966  000D62                     
  3967                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3968  000D62  0100               	movlb	0	; () banked
  3969  000D64  076A               	decf	efgtoa@ne& (0+255),f,b
  3970  000D66  A0D8               	btfss	status,0,c
  3971  000D68  076B               	decf	(efgtoa@ne+1)& (0+255),f,b
  3972  000D6A                     
  3973                           ; BSR set to: 0
  3974                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3975  000D6A  4B84               	infsnz	efgtoa@i& (0+255),f,b
  3976  000D6C  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  3977  000D6E                     l4211:
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3981  000D6E  516C               	movf	efgtoa@m& (0+255),w,b
  3982  000D70  5D84               	subwf	efgtoa@i& (0+255),w,b
  3983  000D72  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  3984  000D74  0A80               	xorlw	128
  3985  000D76  6E35               	movwf	??_efgtoa^0,c
  3986  000D78  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  3987  000D7A  0A80               	xorlw	128
  3988  000D7C  5835               	subwfb	??_efgtoa^0,w,c
  3989  000D7E  B0D8               	btfsc	status,0,c
  3990  000D80  EFC4  F006         	goto	u4811
  3991  000D84  EFC6  F006         	goto	u4810
  3992  000D88                     u4811:
  3993  000D88  EFD4  F006         	goto	l4215
  3994  000D8C                     u4810:
  3995  000D8C                     
  3996                           ; BSR set to: 0
  3997  000D8C  BF8D               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3998  000D8E  EFD2  F006         	goto	u4821
  3999  000D92  518D               	movf	(efgtoa@n+1)& (0+255),w,b
  4000  000D94  E109               	bnz	u4820
  4001  000D96  0E4B               	movlw	75
  4002  000D98  5D8C               	subwf	efgtoa@n& (0+255),w,b
  4003  000D9A  A0D8               	btfss	status,0,c
  4004  000D9C  EFD2  F006         	goto	u4821
  4005  000DA0  EFD4  F006         	goto	u4820
  4006  000DA4                     u4821:
  4007  000DA4  EFC9  F005         	goto	l4163
  4008  000DA8                     u4820:
  4009  000DA8                     l4215:
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4013  000DA8  5168               	movf	efgtoa@pp& (0+255),w,b
  4014  000DAA  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4015  000DAC  A4D8               	btfss	status,2,c
  4016  000DAE  EFDB  F006         	goto	u4831
  4017  000DB2  EFDD  F006         	goto	u4830
  4018  000DB6                     u4831:
  4019  000DB6  EFEE  F006         	goto	l4223
  4020  000DBA                     u4830:
  4021  000DBA                     
  4022                           ; BSR set to: 0
  4023  000DBA  A85A               	btfss	_flags^0,4,c
  4024  000DBC  EFE2  F006         	goto	u4841
  4025  000DC0  EFE4  F006         	goto	u4840
  4026  000DC4                     u4841:
  4027  000DC4  EFEE  F006         	goto	l4223
  4028  000DC8                     u4840:
  4029  000DC8                     
  4030                           ; BSR set to: 0
  4031                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4032  000DC8  0E62               	movlw	low _dbuf
  4033  000DCA  258C               	addwf	efgtoa@n& (0+255),w,b
  4034  000DCC  6ED9               	movwf	fsr2l,c
  4035  000DCE  0E01               	movlw	high _dbuf
  4036  000DD0  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4037  000DD2  6EDA               	movwf	fsr2h,c
  4038  000DD4  0E2E               	movlw	46
  4039  000DD6  6EDF               	movwf	indf2,c
  4040  000DD8                     
  4041                           ; BSR set to: 0
  4042  000DD8  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  4043  000DDA  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  4044  000DDC                     l4223:
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4048  000DDC  0E62               	movlw	low _dbuf
  4049  000DDE  258C               	addwf	efgtoa@n& (0+255),w,b
  4050  000DE0  6ED9               	movwf	fsr2l,c
  4051  000DE2  0E01               	movlw	high _dbuf
  4052  000DE4  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4053  000DE6  6EDA               	movwf	fsr2h,c
  4054  000DE8  0E00               	movlw	0
  4055  000DEA  6EDF               	movwf	indf2,c
  4056  000DEC                     
  4057                           ; BSR set to: 0
  4058                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4059  000DEC  0E65               	movlw	101
  4060  000DEE  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  4061  000DF0  A4D8               	btfss	status,2,c
  4062  000DF2  EFFD  F006         	goto	u4851
  4063  000DF6  EFFF  F006         	goto	u4850
  4064  000DFA                     u4851:
  4065  000DFA  EF64  F002         	goto	l4025
  4066  000DFE                     u4850:
  4067  000DFE                     
  4068                           ; BSR set to: 0
  4069                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4070  000DFE  0E00               	movlw	0
  4071  000E00  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  4072  000E02  0E4F               	movlw	79
  4073  000E04  6F84               	movwf	efgtoa@i& (0+255),b
  4074  000E06                     
  4075                           ; BSR set to: 0
  4076                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4077  000E06  0E62               	movlw	low _dbuf
  4078  000E08  2584               	addwf	efgtoa@i& (0+255),w,b
  4079  000E0A  6ED9               	movwf	fsr2l,c
  4080  000E0C  0E01               	movlw	high _dbuf
  4081  000E0E  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4082  000E10  6EDA               	movwf	fsr2h,c
  4083  000E12  0E00               	movlw	0
  4084  000E14  6EDF               	movwf	indf2,c
  4085  000E16                     
  4086                           ; BSR set to: 0
  4087                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4088  000E16  0E00               	movlw	0
  4089  000E18  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  4090  000E1A  0E00               	movlw	0
  4091  000E1C  6F74               	movwf	efgtoa@sign& (0+255),b
  4092  000E1E                     
  4093                           ; BSR set to: 0
  4094                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4095  000E1E  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4096  000E20  EF16  F007         	goto	u4860
  4097  000E24  EF14  F007         	goto	u4861
  4098  000E28                     u4861:
  4099  000E28  EF1E  F007         	goto	l4239
  4100  000E2C                     u4860:
  4101  000E2C                     
  4102                           ; BSR set to: 0
  4103                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4104  000E2C  0E00               	movlw	0
  4105  000E2E  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  4106  000E30  0E01               	movlw	1
  4107  000E32  6F74               	movwf	efgtoa@sign& (0+255),b
  4108  000E34                     
  4109                           ; BSR set to: 0
  4110                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4111  000E34  6D8A               	negf	efgtoa@e& (0+255),b
  4112  000E36  1F8B               	comf	(efgtoa@e+1)& (0+255),f,b
  4113  000E38  B0D8               	btfsc	status,0,c
  4114  000E3A  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  4115  000E3C                     l4239:
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4119  000E3C  0E00               	movlw	0
  4120  000E3E  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  4121  000E40  0E02               	movlw	2
  4122  000E42  6F76               	movwf	efgtoa@p& (0+255),b
  4123                           
  4124                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4125  000E44  EF4F  F007         	goto	l4251
  4126  000E48                     l4241:
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4130  000E48  0784               	decf	efgtoa@i& (0+255),f,b
  4131  000E4A  A0D8               	btfss	status,0,c
  4132  000E4C  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  4133  000E4E                     
  4134                           ; BSR set to: 0
  4135                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4136  000E4E  0E62               	movlw	low _dbuf
  4137  000E50  2584               	addwf	efgtoa@i& (0+255),w,b
  4138  000E52  6ED9               	movwf	fsr2l,c
  4139  000E54  0E01               	movlw	high _dbuf
  4140  000E56  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4141  000E58  6EDA               	movwf	fsr2h,c
  4142  000E5A  C08A  F001         	movff	efgtoa@e,___awmod@dividend
  4143  000E5E  C08B  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4144  000E62  0E00               	movlw	0
  4145  000E64  6E04               	movwf	(___awmod@divisor+1)^0,c
  4146  000E66  0E0A               	movlw	10
  4147  000E68  6E03               	movwf	___awmod@divisor^0,c
  4148  000E6A  EC7D  F01A         	call	___awmod	;wreg free
  4149  000E6E  5001               	movf	?___awmod^0,w,c
  4150  000E70  0F30               	addlw	48
  4151  000E72  6EDF               	movwf	indf2,c
  4152  000E74                     
  4153                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4154  000E74  C08A  F001         	movff	efgtoa@e,___awdiv@dividend
  4155  000E78  C08B  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4156  000E7C  0E00               	movlw	0
  4157  000E7E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4158  000E80  0E0A               	movlw	10
  4159  000E82  6E03               	movwf	___awdiv@divisor^0,c
  4160  000E84  ECBA  F019         	call	___awdiv	;wreg free
  4161  000E88  C001  F08A         	movff	?___awdiv,efgtoa@e
  4162  000E8C  C002  F08B         	movff	?___awdiv+1,efgtoa@e+1
  4163  000E90                     
  4164                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4165  000E90  0100               	movlb	0	; () banked
  4166  000E92  0776               	decf	efgtoa@p& (0+255),f,b
  4167  000E94  A0D8               	btfss	status,0,c
  4168  000E96  0777               	decf	(efgtoa@p+1)& (0+255),f,b
  4169  000E98                     
  4170                           ; BSR set to: 0
  4171                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4172  000E98  0778               	decf	efgtoa@w& (0+255),f,b
  4173  000E9A  A0D8               	btfss	status,0,c
  4174  000E9C  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  4175  000E9E                     l4251:
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4179  000E9E  518A               	movf	efgtoa@e& (0+255),w,b
  4180  000EA0  118B               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4181  000EA2  A4D8               	btfss	status,2,c
  4182  000EA4  EF56  F007         	goto	u4871
  4183  000EA8  EF58  F007         	goto	u4870
  4184  000EAC                     u4871:
  4185  000EAC  EF24  F007         	goto	l4241
  4186  000EB0                     u4870:
  4187  000EB0                     
  4188                           ; BSR set to: 0
  4189  000EB0  BF77               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4190  000EB2  EF65  F007         	goto	u4880
  4191  000EB6  5177               	movf	(efgtoa@p+1)& (0+255),w,b
  4192  000EB8  E106               	bnz	u4881
  4193  000EBA  0576               	decf	efgtoa@p& (0+255),w,b
  4194  000EBC  B0D8               	btfsc	status,0,c
  4195  000EBE  EF63  F007         	goto	u4881
  4196  000EC2  EF65  F007         	goto	u4880
  4197  000EC6                     u4881:
  4198  000EC6  EF24  F007         	goto	l4241
  4199  000ECA                     u4880:
  4200  000ECA                     
  4201                           ; BSR set to: 0
  4202                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  4203  000ECA  0784               	decf	efgtoa@i& (0+255),f,b
  4204  000ECC  A0D8               	btfss	status,0,c
  4205  000ECE  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  4206  000ED0                     
  4207                           ; BSR set to: 0
  4208                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4209  000ED0  5174               	movf	efgtoa@sign& (0+255),w,b
  4210  000ED2  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4211  000ED4  A4D8               	btfss	status,2,c
  4212  000ED6  EF6F  F007         	goto	u4891
  4213  000EDA  EF71  F007         	goto	u4890
  4214  000EDE                     u4891:
  4215  000EDE  EF77  F007         	goto	l4261
  4216  000EE2                     u4890:
  4217  000EE2                     
  4218                           ; BSR set to: 0
  4219  000EE2  0E00               	movlw	0
  4220  000EE4  6F63               	movwf	(_efgtoa$754+1)& (0+255),b
  4221  000EE6  0E2B               	movlw	43
  4222  000EE8  6F62               	movwf	_efgtoa$754& (0+255),b
  4223  000EEA  EF7B  F007         	goto	l4263
  4224  000EEE                     l4261:
  4225                           
  4226                           ; BSR set to: 0
  4227  000EEE  0E00               	movlw	0
  4228  000EF0  6F63               	movwf	(_efgtoa$754+1)& (0+255),b
  4229  000EF2  0E2D               	movlw	45
  4230  000EF4  6F62               	movwf	_efgtoa$754& (0+255),b
  4231  000EF6                     l4263:
  4232                           
  4233                           ; BSR set to: 0
  4234  000EF6  0E62               	movlw	low _dbuf
  4235  000EF8  2584               	addwf	efgtoa@i& (0+255),w,b
  4236  000EFA  6ED9               	movwf	fsr2l,c
  4237  000EFC  0E01               	movlw	high _dbuf
  4238  000EFE  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4239  000F00  6EDA               	movwf	fsr2h,c
  4240  000F02  C062  FFDF         	movff	_efgtoa$754,indf2
  4241  000F06                     
  4242                           ; BSR set to: 0
  4243                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  4244  000F06  0778               	decf	efgtoa@w& (0+255),f,b
  4245  000F08  A0D8               	btfss	status,0,c
  4246  000F0A  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  4247  000F0C                     
  4248                           ; BSR set to: 0
  4249                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  4250  000F0C  0784               	decf	efgtoa@i& (0+255),f,b
  4251  000F0E  A0D8               	btfss	status,0,c
  4252  000F10  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  4253  000F12                     
  4254                           ; BSR set to: 0
  4255  000F12  0EBF               	movlw	191
  4256  000F14  6E35               	movwf	??_efgtoa^0,c
  4257  000F16  0EFF               	movlw	255
  4258  000F18  6E36               	movwf	(??_efgtoa+1)^0,c
  4259  000F1A  5034               	movf	efgtoa@c^0,w,c
  4260  000F1C  6E37               	movwf	(??_efgtoa+2)^0,c
  4261  000F1E  6A38               	clrf	(??_efgtoa+3)^0,c
  4262  000F20  5035               	movf	??_efgtoa^0,w,c
  4263  000F22  2637               	addwf	(??_efgtoa+2)^0,f,c
  4264  000F24  5036               	movf	(??_efgtoa+1)^0,w,c
  4265  000F26  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4266  000F28  5038               	movf	(??_efgtoa+3)^0,w,c
  4267  000F2A  E109               	bnz	u4900
  4268  000F2C  0E1A               	movlw	26
  4269  000F2E  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4270  000F30  A0D8               	btfss	status,0,c
  4271  000F32  EF9D  F007         	goto	u4901
  4272  000F36  EF9F  F007         	goto	u4900
  4273  000F3A                     u4901:
  4274  000F3A  EFA5  F007         	goto	l4275
  4275  000F3E                     u4900:
  4276  000F3E                     
  4277                           ; BSR set to: 0
  4278  000F3E  0E00               	movlw	0
  4279  000F40  6F65               	movwf	(_efgtoa$755+1)& (0+255),b
  4280  000F42  0E65               	movlw	101
  4281  000F44  6F64               	movwf	_efgtoa$755& (0+255),b
  4282  000F46  EFA9  F007         	goto	l4277
  4283  000F4A                     l4275:
  4284                           
  4285                           ; BSR set to: 0
  4286  000F4A  0E00               	movlw	0
  4287  000F4C  6F65               	movwf	(_efgtoa$755+1)& (0+255),b
  4288  000F4E  0E45               	movlw	69
  4289  000F50  6F64               	movwf	_efgtoa$755& (0+255),b
  4290  000F52                     l4277:
  4291                           
  4292                           ; BSR set to: 0
  4293  000F52  0E62               	movlw	low _dbuf
  4294  000F54  2584               	addwf	efgtoa@i& (0+255),w,b
  4295  000F56  6ED9               	movwf	fsr2l,c
  4296  000F58  0E01               	movlw	high _dbuf
  4297  000F5A  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4298  000F5C  6EDA               	movwf	fsr2h,c
  4299  000F5E  C064  FFDF         	movff	_efgtoa$755,indf2
  4300  000F62                     
  4301                           ; BSR set to: 0
  4302                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  4303  000F62  0778               	decf	efgtoa@w& (0+255),f,b
  4304  000F64  A0D8               	btfss	status,0,c
  4305  000F66  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  4306  000F68                     
  4307                           ; BSR set to: 0
  4308                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4309  000F68  0E62               	movlw	low _dbuf
  4310  000F6A  258C               	addwf	efgtoa@n& (0+255),w,b
  4311  000F6C  6E01               	movwf	strcpy@dest^0,c
  4312  000F6E  0E01               	movlw	high _dbuf
  4313  000F70  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4314  000F72  6E02               	movwf	(strcpy@dest+1)^0,c
  4315  000F74  0E62               	movlw	low _dbuf
  4316  000F76  2584               	addwf	efgtoa@i& (0+255),w,b
  4317  000F78  6E03               	movwf	strcpy@src^0,c
  4318  000F7A  0E01               	movlw	high _dbuf
  4319  000F7C  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4320  000F7E  6E04               	movwf	(strcpy@src+1)^0,c
  4321  000F80  ECD6  F01C         	call	_strcpy	;wreg free
  4322  000F84  EF64  F002         	goto	l4025
  4323  000F88                     l970:
  4324  000F88  0012               	return		;funcret
  4325  000F8A                     __end_of_efgtoa:
  4326                           	callstack 0
  4327                           
  4328 ;; *************** function _tolower *****************
  4329 ;; Defined at:
  4330 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;  c               2    6[COMRAM] int 
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;		None
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  2    6[COMRAM] int 
  4337 ;; Registers used:
  4338 ;;		wreg, status,2, status,0
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4344 ;;      Params:         2       0       0       0
  4345 ;;      Locals:         0       0       0       0
  4346 ;;      Temps:          4       0       0       0
  4347 ;;      Totals:         6       0       0       0
  4348 ;;Total ram usage:        6 bytes
  4349 ;; Hardware stack levels used: 1
  4350 ;; Hardware stack levels required when called: 2
  4351 ;; This function calls:
  4352 ;;		_isupper
  4353 ;; This function is called by:
  4354 ;;		_efgtoa
  4355 ;;		_vfpfcnvrt
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text10
  4360  003AA4                     __ptext10:
  4361                           	callstack 0
  4362  003AA4                     _tolower:
  4363                           	callstack 24
  4364  003AA4  0EBF               	movlw	191
  4365  003AA6  6E09               	movwf	??_tolower^0,c
  4366  003AA8  0EFF               	movlw	255
  4367  003AAA  6E0A               	movwf	(??_tolower+1)^0,c
  4368  003AAC  C007  F00B         	movff	tolower@c,??_tolower+2
  4369  003AB0  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4370  003AB4  5009               	movf	??_tolower^0,w,c
  4371  003AB6  260B               	addwf	(??_tolower+2)^0,f,c
  4372  003AB8  500A               	movf	(??_tolower+1)^0,w,c
  4373  003ABA  220C               	addwfc	(??_tolower+3)^0,f,c
  4374  003ABC  500C               	movf	(??_tolower+3)^0,w,c
  4375  003ABE  E107               	bnz	u4171
  4376  003AC0  0E1A               	movlw	26
  4377  003AC2  5C0B               	subwf	(??_tolower+2)^0,w,c
  4378  003AC4  B0D8               	btfsc	status,0,c
  4379  003AC6  EF67  F01D         	goto	u4171
  4380  003ACA  EF69  F01D         	goto	u4170
  4381  003ACE                     u4171:
  4382  003ACE  EF70  F01D         	goto	l1149
  4383  003AD2                     u4170:
  4384  003AD2  0E20               	movlw	32
  4385  003AD4  1007               	iorwf	tolower@c^0,w,c
  4386  003AD6  6E07               	movwf	?_tolower^0,c
  4387  003AD8  5008               	movf	(tolower@c+1)^0,w,c
  4388  003ADA  6E08               	movwf	(?_tolower+1)^0,c
  4389  003ADC  EF74  F01D         	goto	l1152
  4390  003AE0                     l1149:
  4391  003AE0  C007  F007         	movff	tolower@c,?_tolower
  4392  003AE4  C008  F008         	movff	tolower@c+1,?_tolower+1
  4393  003AE8                     l1152:
  4394  003AE8  0012               	return		;funcret
  4395  003AEA                     __end_of_tolower:
  4396                           	callstack 0
  4397                           
  4398 ;; *************** function _isupper *****************
  4399 ;; Defined at:
  4400 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  c               2    0[COMRAM] int 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;		None
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  2    0[COMRAM] int 
  4407 ;; Registers used:
  4408 ;;		wreg, status,2, status,0
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4414 ;;      Params:         2       0       0       0
  4415 ;;      Locals:         0       0       0       0
  4416 ;;      Temps:          4       0       0       0
  4417 ;;      Totals:         6       0       0       0
  4418 ;;Total ram usage:        6 bytes
  4419 ;; Hardware stack levels used: 1
  4420 ;; Hardware stack levels required when called: 1
  4421 ;; This function calls:
  4422 ;;		Nothing
  4423 ;; This function is called by:
  4424 ;;		_efgtoa
  4425 ;;		_vfpfcnvrt
  4426 ;;		_tolower
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           	psect	text11
  4431  003BF8                     __ptext11:
  4432                           	callstack 0
  4433  003BF8                     _isupper:
  4434                           	callstack 24
  4435  003BF8  0EBF               	movlw	191
  4436  003BFA  6E03               	movwf	??_isupper^0,c
  4437  003BFC  0EFF               	movlw	255
  4438  003BFE  6E04               	movwf	(??_isupper+1)^0,c
  4439  003C00  C001  F005         	movff	isupper@c,??_isupper+2
  4440  003C04  C002  F006         	movff	isupper@c+1,??_isupper+3
  4441  003C08  5003               	movf	??_isupper^0,w,c
  4442  003C0A  2605               	addwf	(??_isupper+2)^0,f,c
  4443  003C0C  5004               	movf	(??_isupper+1)^0,w,c
  4444  003C0E  2206               	addwfc	(??_isupper+3)^0,f,c
  4445  003C10  5006               	movf	(??_isupper+3)^0,w,c
  4446  003C12  E10A               	bnz	u3180
  4447  003C14  0E1A               	movlw	26
  4448  003C16  5C05               	subwf	(??_isupper+2)^0,w,c
  4449  003C18  A0D8               	btfss	status,0,c
  4450  003C1A  EF11  F01E         	goto	u3181
  4451  003C1E  EF14  F01E         	goto	u3180
  4452  003C22                     u3181:
  4453  003C22  0E01               	movlw	1
  4454  003C24  EF15  F01E         	goto	u3190
  4455  003C28                     u3180:
  4456  003C28  0E00               	movlw	0
  4457  003C2A                     u3190:
  4458  003C2A  6E01               	movwf	?_isupper^0,c
  4459  003C2C  6A02               	clrf	(?_isupper+1)^0,c
  4460  003C2E  0012               	return		;funcret
  4461  003C30                     __end_of_isupper:
  4462                           	callstack 0
  4463                           
  4464 ;; *************** function _strcpy *****************
  4465 ;; Defined at:
  4466 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4469 ;;		 -> dbuf(80), 
  4470 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4471 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  4472 ;;		 -> dbuf(80), 
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;  d               2    8[COMRAM] PTR unsigned char 
  4475 ;;		 -> dbuf(80), 
  4476 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4477 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  4478 ;;		 -> dbuf(80), 
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  2    0[COMRAM] PTR unsigned char 
  4481 ;; Registers used:
  4482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4488 ;;      Params:         4       0       0       0
  4489 ;;      Locals:         4       0       0       0
  4490 ;;      Temps:          2       0       0       0
  4491 ;;      Totals:        10       0       0       0
  4492 ;;Total ram usage:       10 bytes
  4493 ;; Hardware stack levels used: 1
  4494 ;; Hardware stack levels required when called: 1
  4495 ;; This function calls:
  4496 ;;		Nothing
  4497 ;; This function is called by:
  4498 ;;		_efgtoa
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text12
  4503  0039AC                     __ptext12:
  4504                           	callstack 0
  4505  0039AC                     _strcpy:
  4506                           	callstack 24
  4507  0039AC  C003  F007         	movff	strcpy@src,strcpy@s
  4508  0039B0  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4509  0039B4  C001  F009         	movff	strcpy@dest,strcpy@d
  4510  0039B8  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4511  0039BC                     l3879:
  4512  0039BC  5007               	movf	strcpy@s^0,w,c
  4513  0039BE  6E05               	movwf	??_strcpy^0,c
  4514  0039C0  5008               	movf	(strcpy@s+1)^0,w,c
  4515  0039C2  6E06               	movwf	(??_strcpy+1)^0,c
  4516  0039C4  4A07               	infsnz	strcpy@s^0,f,c
  4517  0039C6  2A08               	incf	(strcpy@s+1)^0,f,c
  4518  0039C8  C005  FFF6         	movff	??_strcpy,tblptrl
  4519  0039CC  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4520  0039D0  6AF8               	clrf	tblptru,c
  4521  0039D2  C009  FFD9         	movff	strcpy@d,fsr2l
  4522  0039D6  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4523  0039DA  4A09               	infsnz	strcpy@d^0,f,c
  4524  0039DC  2A0A               	incf	(strcpy@d+1)^0,f,c
  4525  0039DE  0E02               	movlw	(high __ramtop+-1)
  4526  0039E0  64F7               	cpfsgt	tblptrh,c
  4527  0039E2  D003               	bra	u4157
  4528  0039E4  0008               	tblrd		*
  4529  0039E6  50F5               	movf	tablat,w,c
  4530  0039E8  D005               	bra	u4150
  4531  0039EA                     u4157:
  4532  0039EA  CFF6 FFE1          	movff	tblptrl,fsr1l
  4533  0039EE  CFF7 FFE2          	movff	tblptrh,fsr1h
  4534  0039F2  50E7               	movf	indf1,w,c
  4535  0039F4                     u4150:
  4536  0039F4  6EDF               	movwf	indf2,c
  4537  0039F6  50DF               	movf	indf2,w,c
  4538  0039F8  A4D8               	btfss	status,2,c
  4539  0039FA  EF01  F01D         	goto	u4161
  4540  0039FE  EF03  F01D         	goto	u4160
  4541  003A02                     u4161:
  4542  003A02  EFDE  F01C         	goto	l3879
  4543  003A06                     u4160:
  4544  003A06  0012               	return		;funcret
  4545  003A08                     __end_of_strcpy:
  4546                           	callstack 0
  4547                           
  4548 ;; *************** function _floorf *****************
  4549 ;; Defined at:
  4550 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  4551 ;; Parameters:    Size  Location     Type
  4552 ;;  x               4   25[COMRAM] float 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  u               4   41[COMRAM] struct .
  4555 ;;  m               4   35[COMRAM] unsigned long 
  4556 ;;  e               2   39[COMRAM] int 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  4   25[COMRAM] float 
  4559 ;; Registers used:
  4560 ;;		wreg, status,2, status,0
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4566 ;;      Params:         4       0       0       0
  4567 ;;      Locals:        10       0       0       0
  4568 ;;      Temps:          6       0       0       0
  4569 ;;      Totals:        20       0       0       0
  4570 ;;Total ram usage:       20 bytes
  4571 ;; Hardware stack levels used: 1
  4572 ;; Hardware stack levels required when called: 1
  4573 ;; This function calls:
  4574 ;;		Nothing
  4575 ;; This function is called by:
  4576 ;;		_efgtoa
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text13
  4581  0022E0                     __ptext13:
  4582                           	callstack 0
  4583  0022E0                     _floorf:
  4584                           	callstack 24
  4585  0022E0  C15A  F02A         	movff	floorf@F526,floorf@u
  4586  0022E4  C15B  F02B         	movff	floorf@F526+1,floorf@u+1
  4587  0022E8  C15C  F02C         	movff	floorf@F526+2,floorf@u+2
  4588  0022EC  C15D  F02D         	movff	floorf@F526+3,floorf@u+3
  4589  0022F0  C01A  F02A         	movff	floorf@x,floorf@u
  4590  0022F4  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4591  0022F8  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4592  0022FC  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4593  002300  0E81               	movlw	129
  4594  002302  6E1E               	movwf	??_floorf^0,c
  4595  002304  0EFF               	movlw	255
  4596  002306  6E1F               	movwf	(??_floorf+1)^0,c
  4597  002308  C02A  F020         	movff	floorf@u,??_floorf+2
  4598  00230C  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4599  002310  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4600  002314  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4601  002318  0E18               	movlw	24
  4602  00231A  EF94  F011         	goto	u4180
  4603  00231E                     u4185:
  4604  00231E  90D8               	bcf	status,0,c
  4605  002320  3223               	rrcf	(??_floorf+5)^0,f,c
  4606  002322  3222               	rrcf	(??_floorf+4)^0,f,c
  4607  002324  3221               	rrcf	(??_floorf+3)^0,f,c
  4608  002326  3220               	rrcf	(??_floorf+2)^0,f,c
  4609  002328                     u4180:
  4610  002328  2EE8               	decfsz	wreg,f,c
  4611  00232A  EF8F  F011         	goto	u4185
  4612  00232E  5020               	movf	(??_floorf+2)^0,w,c
  4613  002330  241E               	addwf	??_floorf^0,w,c
  4614  002332  6E28               	movwf	floorf@e^0,c
  4615  002334  0E00               	movlw	0
  4616  002336  201F               	addwfc	(??_floorf+1)^0,w,c
  4617  002338  6E29               	movwf	(floorf@e+1)^0,c
  4618  00233A  BE29               	btfsc	(floorf@e+1)^0,7,c
  4619  00233C  EFA9  F011         	goto	u4191
  4620  002340  5029               	movf	(floorf@e+1)^0,w,c
  4621  002342  E109               	bnz	u4190
  4622  002344  0E17               	movlw	23
  4623  002346  5C28               	subwf	floorf@e^0,w,c
  4624  002348  A0D8               	btfss	status,0,c
  4625  00234A  EFA9  F011         	goto	u4191
  4626  00234E  EFAB  F011         	goto	u4190
  4627  002352                     u4191:
  4628  002352  EFB5  F011         	goto	l3897
  4629  002356                     u4190:
  4630  002356                     l3895:
  4631  002356  C01A  F01A         	movff	floorf@x,?_floorf
  4632  00235A  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4633  00235E  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4634  002362  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4635  002366  EF78  F012         	goto	l1087
  4636  00236A                     l3897:
  4637  00236A  BE29               	btfsc	(floorf@e+1)^0,7,c
  4638  00236C  EFBA  F011         	goto	u4201
  4639  002370  EFBC  F011         	goto	u4200
  4640  002374                     u4201:
  4641  002374  EF2C  F012         	goto	l3907
  4642  002378                     u4200:
  4643  002378  C028  F01E         	movff	floorf@e,??_floorf
  4644  00237C  0EFF               	movlw	255
  4645  00237E  6E1F               	movwf	(??_floorf+1)^0,c
  4646  002380  0EFF               	movlw	255
  4647  002382  6E20               	movwf	(??_floorf+2)^0,c
  4648  002384  0E7F               	movlw	127
  4649  002386  6E21               	movwf	(??_floorf+3)^0,c
  4650  002388  0E00               	movlw	0
  4651  00238A  6E22               	movwf	(??_floorf+4)^0,c
  4652  00238C                     u4215:
  4653  00238C  661E               	tstfsz	??_floorf^0,c
  4654  00238E  EFCB  F011         	goto	u4216
  4655  002392  EFD3  F011         	goto	u4217
  4656  002396                     u4216:
  4657  002396  3422               	rlcf	(??_floorf+4)^0,w,c
  4658  002398  3222               	rrcf	(??_floorf+4)^0,f,c
  4659  00239A  3221               	rrcf	(??_floorf+3)^0,f,c
  4660  00239C  3220               	rrcf	(??_floorf+2)^0,f,c
  4661  00239E  321F               	rrcf	(??_floorf+1)^0,f,c
  4662  0023A0  2E1E               	decfsz	??_floorf^0,f,c
  4663  0023A2  EFC6  F011         	goto	u4215
  4664  0023A6                     u4217:
  4665  0023A6  C01F  F024         	movff	??_floorf+1,floorf@m
  4666  0023AA  C020  F025         	movff	??_floorf+2,floorf@m+1
  4667  0023AE  C021  F026         	movff	??_floorf+3,floorf@m+2
  4668  0023B2  C022  F027         	movff	??_floorf+4,floorf@m+3
  4669  0023B6  5024               	movf	floorf@m^0,w,c
  4670  0023B8  142A               	andwf	floorf@u^0,w,c
  4671  0023BA  6E1E               	movwf	??_floorf^0,c
  4672  0023BC  5025               	movf	(floorf@m+1)^0,w,c
  4673  0023BE  142B               	andwf	(floorf@u+1)^0,w,c
  4674  0023C0  6E1F               	movwf	(??_floorf+1)^0,c
  4675  0023C2  5026               	movf	(floorf@m+2)^0,w,c
  4676  0023C4  142C               	andwf	(floorf@u+2)^0,w,c
  4677  0023C6  6E20               	movwf	(??_floorf+2)^0,c
  4678  0023C8  5027               	movf	(floorf@m+3)^0,w,c
  4679  0023CA  142D               	andwf	(floorf@u+3)^0,w,c
  4680  0023CC  6E21               	movwf	(??_floorf+3)^0,c
  4681  0023CE  501E               	movf	??_floorf^0,w,c
  4682  0023D0  101F               	iorwf	(??_floorf+1)^0,w,c
  4683  0023D2  1020               	iorwf	(??_floorf+2)^0,w,c
  4684  0023D4  1021               	iorwf	(??_floorf+3)^0,w,c
  4685  0023D6  A4D8               	btfss	status,2,c
  4686  0023D8  EFF0  F011         	goto	u4221
  4687  0023DC  EFF2  F011         	goto	u4220
  4688  0023E0                     u4221:
  4689  0023E0  EFF4  F011         	goto	l3903
  4690  0023E4                     u4220:
  4691  0023E4  EFAB  F011         	goto	l3895
  4692  0023E8                     l3903:
  4693  0023E8  C02A  F01E         	movff	floorf@u,??_floorf
  4694  0023EC  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4695  0023F0  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4696  0023F4  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4697  0023F8  0E20               	movlw	32
  4698  0023FA  EF04  F012         	goto	u4230
  4699  0023FE                     u4235:
  4700  0023FE  90D8               	bcf	status,0,c
  4701  002400  3221               	rrcf	(??_floorf+3)^0,f,c
  4702  002402  3220               	rrcf	(??_floorf+2)^0,f,c
  4703  002404  321F               	rrcf	(??_floorf+1)^0,f,c
  4704  002406  321E               	rrcf	??_floorf^0,f,c
  4705  002408                     u4230:
  4706  002408  2EE8               	decfsz	wreg,f,c
  4707  00240A  EFFF  F011         	goto	u4235
  4708  00240E  501E               	movf	??_floorf^0,w,c
  4709  002410  101F               	iorwf	(??_floorf+1)^0,w,c
  4710  002412  1020               	iorwf	(??_floorf+2)^0,w,c
  4711  002414  1021               	iorwf	(??_floorf+3)^0,w,c
  4712  002416  B4D8               	btfsc	status,2,c
  4713  002418  EF10  F012         	goto	u4241
  4714  00241C  EF12  F012         	goto	u4240
  4715  002420                     u4241:
  4716  002420  EF1A  F012         	goto	l1090
  4717  002424                     u4240:
  4718  002424  5024               	movf	floorf@m^0,w,c
  4719  002426  262A               	addwf	floorf@u^0,f,c
  4720  002428  5025               	movf	(floorf@m+1)^0,w,c
  4721  00242A  222B               	addwfc	(floorf@u+1)^0,f,c
  4722  00242C  5026               	movf	(floorf@m+2)^0,w,c
  4723  00242E  222C               	addwfc	(floorf@u+2)^0,f,c
  4724  002430  5027               	movf	(floorf@m+3)^0,w,c
  4725  002432  222D               	addwfc	(floorf@u+3)^0,f,c
  4726  002434                     l1090:
  4727  002434  1C24               	comf	floorf@m^0,w,c
  4728  002436  6E1E               	movwf	??_floorf^0,c
  4729  002438  1C25               	comf	(floorf@m+1)^0,w,c
  4730  00243A  6E1F               	movwf	(??_floorf+1)^0,c
  4731  00243C  1C26               	comf	(floorf@m+2)^0,w,c
  4732  00243E  6E20               	movwf	(??_floorf+2)^0,c
  4733  002440  1C27               	comf	(floorf@m+3)^0,w,c
  4734  002442  6E21               	movwf	(??_floorf+3)^0,c
  4735  002444  501E               	movf	??_floorf^0,w,c
  4736  002446  162A               	andwf	floorf@u^0,f,c
  4737  002448  501F               	movf	(??_floorf+1)^0,w,c
  4738  00244A  162B               	andwf	(floorf@u+1)^0,f,c
  4739  00244C  5020               	movf	(??_floorf+2)^0,w,c
  4740  00244E  162C               	andwf	(floorf@u+2)^0,f,c
  4741  002450  5021               	movf	(??_floorf+3)^0,w,c
  4742  002452  162D               	andwf	(floorf@u+3)^0,f,c
  4743  002454  EF70  F012         	goto	l3915
  4744  002458                     l3907:
  4745  002458  C02A  F01E         	movff	floorf@u,??_floorf
  4746  00245C  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4747  002460  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4748  002464  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4749  002468  0E20               	movlw	32
  4750  00246A  EF3C  F012         	goto	u4250
  4751  00246E                     u4255:
  4752  00246E  90D8               	bcf	status,0,c
  4753  002470  3221               	rrcf	(??_floorf+3)^0,f,c
  4754  002472  3220               	rrcf	(??_floorf+2)^0,f,c
  4755  002474  321F               	rrcf	(??_floorf+1)^0,f,c
  4756  002476  321E               	rrcf	??_floorf^0,f,c
  4757  002478                     u4250:
  4758  002478  2EE8               	decfsz	wreg,f,c
  4759  00247A  EF37  F012         	goto	u4255
  4760  00247E  501E               	movf	??_floorf^0,w,c
  4761  002480  101F               	iorwf	(??_floorf+1)^0,w,c
  4762  002482  1020               	iorwf	(??_floorf+2)^0,w,c
  4763  002484  1021               	iorwf	(??_floorf+3)^0,w,c
  4764  002486  A4D8               	btfss	status,2,c
  4765  002488  EF48  F012         	goto	u4261
  4766  00248C  EF4A  F012         	goto	u4260
  4767  002490                     u4261:
  4768  002490  EF54  F012         	goto	l3911
  4769  002494                     u4260:
  4770  002494  0E00               	movlw	0
  4771  002496  6E2A               	movwf	floorf@u^0,c
  4772  002498  0E00               	movlw	0
  4773  00249A  6E2B               	movwf	(floorf@u+1)^0,c
  4774  00249C  0E00               	movlw	0
  4775  00249E  6E2C               	movwf	(floorf@u+2)^0,c
  4776  0024A0  0E00               	movlw	0
  4777  0024A2  6E2D               	movwf	(floorf@u+3)^0,c
  4778  0024A4  EF70  F012         	goto	l3915
  4779  0024A8                     l3911:
  4780  0024A8  90D8               	bcf	status,0,c
  4781  0024AA  342A               	rlcf	floorf@u^0,w,c
  4782  0024AC  6E1E               	movwf	??_floorf^0,c
  4783  0024AE  342B               	rlcf	(floorf@u+1)^0,w,c
  4784  0024B0  6E1F               	movwf	(??_floorf+1)^0,c
  4785  0024B2  342C               	rlcf	(floorf@u+2)^0,w,c
  4786  0024B4  6E20               	movwf	(??_floorf+2)^0,c
  4787  0024B6  342D               	rlcf	(floorf@u+3)^0,w,c
  4788  0024B8  6E21               	movwf	(??_floorf+3)^0,c
  4789  0024BA  501E               	movf	??_floorf^0,w,c
  4790  0024BC  101F               	iorwf	(??_floorf+1)^0,w,c
  4791  0024BE  1020               	iorwf	(??_floorf+2)^0,w,c
  4792  0024C0  1021               	iorwf	(??_floorf+3)^0,w,c
  4793  0024C2  B4D8               	btfsc	status,2,c
  4794  0024C4  EF66  F012         	goto	u4271
  4795  0024C8  EF68  F012         	goto	u4270
  4796  0024CC                     u4271:
  4797  0024CC  EF70  F012         	goto	l3915
  4798  0024D0                     u4270:
  4799  0024D0  0E00               	movlw	0
  4800  0024D2  6E2A               	movwf	floorf@u^0,c
  4801  0024D4  0E00               	movlw	0
  4802  0024D6  6E2B               	movwf	(floorf@u+1)^0,c
  4803  0024D8  0E80               	movlw	128
  4804  0024DA  6E2C               	movwf	(floorf@u+2)^0,c
  4805  0024DC  0EBF               	movlw	191
  4806  0024DE  6E2D               	movwf	(floorf@u+3)^0,c
  4807  0024E0                     l3915:
  4808  0024E0  C02A  F01A         	movff	floorf@u,?_floorf
  4809  0024E4  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4810  0024E8  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4811  0024EC  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4812  0024F0                     l1087:
  4813  0024F0  0012               	return		;funcret
  4814  0024F2                     __end_of_floorf:
  4815                           	callstack 0
  4816                           
  4817 ;; *************** function ___fpclassifyf *****************
  4818 ;; Defined at:
  4819 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;  x               4    0[COMRAM] float 
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;  u               4   10[COMRAM] struct .
  4824 ;;  e               2    8[COMRAM] int 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  2    0[COMRAM] int 
  4827 ;; Registers used:
  4828 ;;		wreg, status,2, status,0
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4834 ;;      Params:         4       0       0       0
  4835 ;;      Locals:         6       0       0       0
  4836 ;;      Temps:          4       0       0       0
  4837 ;;      Totals:        14       0       0       0
  4838 ;;Total ram usage:       14 bytes
  4839 ;; Hardware stack levels used: 1
  4840 ;; Hardware stack levels required when called: 1
  4841 ;; This function calls:
  4842 ;;		Nothing
  4843 ;; This function is called by:
  4844 ;;		_efgtoa
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           	psect	text14
  4849  0030D6                     __ptext14:
  4850                           	callstack 0
  4851  0030D6                     ___fpclassifyf:
  4852                           	callstack 24
  4853  0030D6  C15E  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4854  0030DA  C15F  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4855  0030DE  C160  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4856  0030E2  C161  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4857  0030E6  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4858  0030EA  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4859  0030EE  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4860  0030F2  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4861  0030F6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4862  0030FA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4863  0030FE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4864  003102  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4865  003106  0E18               	movlw	24
  4866  003108  EF8B  F018         	goto	u4080
  4867  00310C                     u4085:
  4868  00310C  90D8               	bcf	status,0,c
  4869  00310E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4870  003110  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4871  003112  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4872  003114  3205               	rrcf	??___fpclassifyf^0,f,c
  4873  003116                     u4080:
  4874  003116  2EE8               	decfsz	wreg,f,c
  4875  003118  EF86  F018         	goto	u4085
  4876  00311C  5005               	movf	??___fpclassifyf^0,w,c
  4877  00311E  6E09               	movwf	___fpclassifyf@e^0,c
  4878  003120  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4879  003122  5009               	movf	___fpclassifyf@e^0,w,c
  4880  003124  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4881  003126  A4D8               	btfss	status,2,c
  4882  003128  EF98  F018         	goto	u4091
  4883  00312C  EF9A  F018         	goto	u4090
  4884  003130                     u4091:
  4885  003130  EFBA  F018         	goto	l3867
  4886  003134                     u4090:
  4887  003134  90D8               	bcf	status,0,c
  4888  003136  340B               	rlcf	___fpclassifyf@u^0,w,c
  4889  003138  6E05               	movwf	??___fpclassifyf^0,c
  4890  00313A  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4891  00313C  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4892  00313E  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4893  003140  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4894  003142  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4895  003144  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4896  003146  5005               	movf	??___fpclassifyf^0,w,c
  4897  003148  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4898  00314A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4899  00314C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4900  00314E  A4D8               	btfss	status,2,c
  4901  003150  EFAC  F018         	goto	u4101
  4902  003154  EFAE  F018         	goto	u4100
  4903  003158                     u4101:
  4904  003158  EFB4  F018         	goto	l3863
  4905  00315C                     u4100:
  4906  00315C  0E00               	movlw	0
  4907  00315E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4908  003160  0E02               	movlw	2
  4909  003162  6E01               	movwf	?___fpclassifyf^0,c
  4910  003164  EFE9  F018         	goto	l1073
  4911  003168                     l3863:
  4912  003168  0E00               	movlw	0
  4913  00316A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4914  00316C  0E03               	movlw	3
  4915  00316E  6E01               	movwf	?___fpclassifyf^0,c
  4916  003170  EFE9  F018         	goto	l1073
  4917  003174                     l3867:
  4918  003174  2809               	incf	___fpclassifyf@e^0,w,c
  4919  003176  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4920  003178  A4D8               	btfss	status,2,c
  4921  00317A  EFC1  F018         	goto	u4111
  4922  00317E  EFC3  F018         	goto	u4110
  4923  003182                     u4111:
  4924  003182  EFE5  F018         	goto	l3873
  4925  003186                     u4110:
  4926  003186  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4927  00318A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4928  00318E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4929  003192  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4930  003196  0E09               	movlw	9
  4931  003198                     u4125:
  4932  003198  90D8               	bcf	status,0,c
  4933  00319A  3605               	rlcf	??___fpclassifyf^0,f,c
  4934  00319C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4935  00319E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4936  0031A0  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4937  0031A2  2EE8               	decfsz	wreg,f,c
  4938  0031A4  EFCC  F018         	goto	u4125
  4939  0031A8  5005               	movf	??___fpclassifyf^0,w,c
  4940  0031AA  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4941  0031AC  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4942  0031AE  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4943  0031B0  B4D8               	btfsc	status,2,c
  4944  0031B2  EFDD  F018         	goto	u4131
  4945  0031B6  EFE0  F018         	goto	u4130
  4946  0031BA                     u4131:
  4947  0031BA  0E01               	movlw	1
  4948  0031BC  EFE1  F018         	goto	u4140
  4949  0031C0                     u4130:
  4950  0031C0  0E00               	movlw	0
  4951  0031C2                     u4140:
  4952  0031C2  6E01               	movwf	?___fpclassifyf^0,c
  4953  0031C4  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4954  0031C6  EFE9  F018         	goto	l1073
  4955  0031CA                     l3873:
  4956  0031CA  0E00               	movlw	0
  4957  0031CC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4958  0031CE  0E04               	movlw	4
  4959  0031D0  6E01               	movwf	?___fpclassifyf^0,c
  4960  0031D2                     l1073:
  4961  0031D2  0012               	return		;funcret
  4962  0031D4                     __end_of___fpclassifyf:
  4963                           	callstack 0
  4964                           
  4965 ;; *************** function ___fltol *****************
  4966 ;; Defined at:
  4967 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  f1              4    0[COMRAM] int 
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;  exp1            1    9[COMRAM] unsigned char 
  4972 ;;  sign1           1    8[COMRAM] unsigned char 
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  4    0[COMRAM] long 
  4975 ;; Registers used:
  4976 ;;		wreg, status,2, status,0
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4982 ;;      Params:         4       0       0       0
  4983 ;;      Locals:         2       0       0       0
  4984 ;;      Temps:          4       0       0       0
  4985 ;;      Totals:        10       0       0       0
  4986 ;;Total ram usage:       10 bytes
  4987 ;; Hardware stack levels used: 1
  4988 ;; Hardware stack levels required when called: 1
  4989 ;; This function calls:
  4990 ;;		Nothing
  4991 ;; This function is called by:
  4992 ;;		_efgtoa
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text15
  4997  002ECC                     __ptext15:
  4998                           	callstack 0
  4999  002ECC                     ___fltol:
  5000                           	callstack 24
  5001  002ECC  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5002  002ECE  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5003  002ED0  6E0A               	movwf	___fltol@exp1^0,c
  5004  002ED2  500A               	movf	___fltol@exp1^0,w,c
  5005  002ED4  A4D8               	btfss	status,2,c
  5006  002ED6  EF6F  F017         	goto	u3961
  5007  002EDA  EF71  F017         	goto	u3960
  5008  002EDE                     u3961:
  5009  002EDE  EF7B  F017         	goto	l3791
  5010  002EE2                     u3960:
  5011  002EE2                     l3787:
  5012  002EE2  0E00               	movlw	0
  5013  002EE4  6E01               	movwf	?___fltol^0,c
  5014  002EE6  0E00               	movlw	0
  5015  002EE8  6E02               	movwf	(?___fltol+1)^0,c
  5016  002EEA  0E00               	movlw	0
  5017  002EEC  6E03               	movwf	(?___fltol+2)^0,c
  5018  002EEE  0E00               	movlw	0
  5019  002EF0  6E04               	movwf	(?___fltol+3)^0,c
  5020  002EF2  EFE8  F017         	goto	l503
  5021  002EF6                     l3791:
  5022  002EF6  C001  F005         	movff	___fltol@f1,??___fltol
  5023  002EFA  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5024  002EFE  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5025  002F02  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5026  002F06  0E20               	movlw	32
  5027  002F08  EF8B  F017         	goto	u3970
  5028  002F0C                     u3975:
  5029  002F0C  90D8               	bcf	status,0,c
  5030  002F0E  3208               	rrcf	(??___fltol+3)^0,f,c
  5031  002F10  3207               	rrcf	(??___fltol+2)^0,f,c
  5032  002F12  3206               	rrcf	(??___fltol+1)^0,f,c
  5033  002F14  3205               	rrcf	??___fltol^0,f,c
  5034  002F16                     u3970:
  5035  002F16  2EE8               	decfsz	wreg,f,c
  5036  002F18  EF86  F017         	goto	u3975
  5037  002F1C  5005               	movf	??___fltol^0,w,c
  5038  002F1E  6E09               	movwf	___fltol@sign1^0,c
  5039  002F20  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5040  002F22  0EFF               	movlw	255
  5041  002F24  1601               	andwf	___fltol@f1^0,f,c
  5042  002F26  0EFF               	movlw	255
  5043  002F28  1602               	andwf	(___fltol@f1+1)^0,f,c
  5044  002F2A  0EFF               	movlw	255
  5045  002F2C  1603               	andwf	(___fltol@f1+2)^0,f,c
  5046  002F2E  0E00               	movlw	0
  5047  002F30  1604               	andwf	(___fltol@f1+3)^0,f,c
  5048  002F32  0E96               	movlw	150
  5049  002F34  5E0A               	subwf	___fltol@exp1^0,f,c
  5050  002F36  BE0A               	btfsc	___fltol@exp1^0,7,c
  5051  002F38  EFA2  F017         	goto	u3980
  5052  002F3C  EFA0  F017         	goto	u3981
  5053  002F40                     u3981:
  5054  002F40  EFB8  F017         	goto	l3811
  5055  002F44                     u3980:
  5056  002F44  500A               	movf	___fltol@exp1^0,w,c
  5057  002F46  0A80               	xorlw	128
  5058  002F48  0F97               	addlw	151
  5059  002F4A  B0D8               	btfsc	status,0,c
  5060  002F4C  EFAA  F017         	goto	u3991
  5061  002F50  EFAC  F017         	goto	u3990
  5062  002F54                     u3991:
  5063  002F54  EFAE  F017         	goto	l3807
  5064  002F58                     u3990:
  5065  002F58  EF71  F017         	goto	l3787
  5066  002F5C                     l3807:
  5067  002F5C  90D8               	bcf	status,0,c
  5068  002F5E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5069  002F60  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5070  002F62  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5071  002F64  3201               	rrcf	___fltol@f1^0,f,c
  5072  002F66  3E0A               	incfsz	___fltol@exp1^0,f,c
  5073  002F68  EFAE  F017         	goto	l3807
  5074  002F6C  EFD0  F017         	goto	l3821
  5075  002F70                     l3811:
  5076  002F70  0E1F               	movlw	31
  5077  002F72  640A               	cpfsgt	___fltol@exp1^0,c
  5078  002F74  EFBE  F017         	goto	u4001
  5079  002F78  EFC0  F017         	goto	u4000
  5080  002F7C                     u4001:
  5081  002F7C  EFC8  F017         	goto	l3819
  5082  002F80                     u4000:
  5083  002F80  EF71  F017         	goto	l3787
  5084  002F84                     l3817:
  5085  002F84  90D8               	bcf	status,0,c
  5086  002F86  3601               	rlcf	___fltol@f1^0,f,c
  5087  002F88  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5088  002F8A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5089  002F8C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5090  002F8E  060A               	decf	___fltol@exp1^0,f,c
  5091  002F90                     l3819:
  5092  002F90  500A               	movf	___fltol@exp1^0,w,c
  5093  002F92  A4D8               	btfss	status,2,c
  5094  002F94  EFCE  F017         	goto	u4011
  5095  002F98  EFD0  F017         	goto	u4010
  5096  002F9C                     u4011:
  5097  002F9C  EFC2  F017         	goto	l3817
  5098  002FA0                     u4010:
  5099  002FA0                     l3821:
  5100  002FA0  5009               	movf	___fltol@sign1^0,w,c
  5101  002FA2  B4D8               	btfsc	status,2,c
  5102  002FA4  EFD6  F017         	goto	u4021
  5103  002FA8  EFD8  F017         	goto	u4020
  5104  002FAC                     u4021:
  5105  002FAC  EFE0  F017         	goto	l3825
  5106  002FB0                     u4020:
  5107  002FB0  1E04               	comf	(___fltol@f1+3)^0,f,c
  5108  002FB2  1E03               	comf	(___fltol@f1+2)^0,f,c
  5109  002FB4  1E02               	comf	(___fltol@f1+1)^0,f,c
  5110  002FB6  6C01               	negf	___fltol@f1^0,c
  5111  002FB8  0E00               	movlw	0
  5112  002FBA  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5113  002FBC  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5114  002FBE  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5115  002FC0                     l3825:
  5116  002FC0  C001  F001         	movff	___fltol@f1,?___fltol
  5117  002FC4  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5118  002FC8  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5119  002FCC  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5120  002FD0                     l503:
  5121  002FD0  0012               	return		;funcret
  5122  002FD2                     __end_of___fltol:
  5123                           	callstack 0
  5124                           
  5125 ;; *************** function ___flsub *****************
  5126 ;; Defined at:
  5127 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;  b               4   25[COMRAM] long 
  5130 ;;  a               4   29[COMRAM] long 
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;		None
  5133 ;; Return value:  Size  Location     Type
  5134 ;;                  4   25[COMRAM] long 
  5135 ;; Registers used:
  5136 ;;		wreg, status,2, status,0, cstack
  5137 ;; Tracked objects:
  5138 ;;		On entry : 0/0
  5139 ;;		On exit  : 0/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5142 ;;      Params:         8       0       0       0
  5143 ;;      Locals:         0       0       0       0
  5144 ;;      Temps:          0       0       0       0
  5145 ;;      Totals:         8       0       0       0
  5146 ;;Total ram usage:        8 bytes
  5147 ;; Hardware stack levels used: 1
  5148 ;; Hardware stack levels required when called: 2
  5149 ;; This function calls:
  5150 ;;		___fladd
  5151 ;; This function is called by:
  5152 ;;		_efgtoa
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           	psect	text16
  5157  003AEA                     __ptext16:
  5158                           	callstack 0
  5159  003AEA                     ___flsub:
  5160                           	callstack 23
  5161  003AEA  0E00               	movlw	0
  5162  003AEC  1A1E               	xorwf	___flsub@a^0,f,c
  5163  003AEE  0E00               	movlw	0
  5164  003AF0  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5165  003AF2  0E00               	movlw	0
  5166  003AF4  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5167  003AF6  0E80               	movlw	128
  5168  003AF8  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5169  003AFA  C01A  F001         	movff	___flsub@b,___fladd@b
  5170  003AFE  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5171  003B02  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5172  003B06  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5173  003B0A  C01E  F005         	movff	___flsub@a,___fladd@a
  5174  003B0E  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5175  003B12  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5176  003B16  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5177  003B1A  ECC5  F007         	call	___fladd	;wreg free
  5178  003B1E  C001  F01A         	movff	?___fladd,?___flsub
  5179  003B22  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5180  003B26  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5181  003B2A  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5182  003B2E  0012               	return		;funcret
  5183  003B30                     __end_of___flsub:
  5184                           	callstack 0
  5185                           
  5186 ;; *************** function ___fladd *****************
  5187 ;; Defined at:
  5188 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  b               4    0[COMRAM] long 
  5191 ;;  a               4    4[COMRAM] long 
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;  grs             1   15[COMRAM] unsigned char 
  5194 ;;  bexp            1   14[COMRAM] unsigned char 
  5195 ;;  aexp            1   13[COMRAM] unsigned char 
  5196 ;;  signs           1   12[COMRAM] unsigned char 
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  4    0[COMRAM] unsigned char 
  5199 ;; Registers used:
  5200 ;;		wreg, status,2, status,0
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5206 ;;      Params:         8       0       0       0
  5207 ;;      Locals:         4       0       0       0
  5208 ;;      Temps:          4       0       0       0
  5209 ;;      Totals:        16       0       0       0
  5210 ;;Total ram usage:       16 bytes
  5211 ;; Hardware stack levels used: 1
  5212 ;; Hardware stack levels required when called: 1
  5213 ;; This function calls:
  5214 ;;		Nothing
  5215 ;; This function is called by:
  5216 ;;		___flsub
  5217 ;;		_efgtoa
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text17
  5222  000F8A                     __ptext17:
  5223                           	callstack 0
  5224  000F8A                     ___fladd:
  5225                           	callstack 23
  5226  000F8A  5004               	movf	(___fladd@b+3)^0,w,c
  5227  000F8C  0B80               	andlw	128
  5228  000F8E  6E0D               	movwf	___fladd@signs^0,c
  5229  000F90  5004               	movf	(___fladd@b+3)^0,w,c
  5230  000F92  2404               	addwf	(___fladd@b+3)^0,w,c
  5231  000F94  6E0F               	movwf	___fladd@bexp^0,c
  5232  000F96  AE03               	btfss	(___fladd@b+2)^0,7,c
  5233  000F98  EFD0  F007         	goto	u2771
  5234  000F9C  EFD2  F007         	goto	u2770
  5235  000FA0                     u2771:
  5236  000FA0  EFD3  F007         	goto	l3087
  5237  000FA4                     u2770:
  5238  000FA4  800F               	bsf	___fladd@bexp^0,0,c
  5239  000FA6                     l3087:
  5240  000FA6  500F               	movf	___fladd@bexp^0,w,c
  5241  000FA8  B4D8               	btfsc	status,2,c
  5242  000FAA  EFD9  F007         	goto	u2781
  5243  000FAE  EFDB  F007         	goto	u2780
  5244  000FB2                     u2781:
  5245  000FB2  EFF0  F007         	goto	l3097
  5246  000FB6                     u2780:
  5247  000FB6  280F               	incf	___fladd@bexp^0,w,c
  5248  000FB8  A4D8               	btfss	status,2,c
  5249  000FBA  EFE1  F007         	goto	u2791
  5250  000FBE  EFE3  F007         	goto	u2790
  5251  000FC2                     u2791:
  5252  000FC2  EFEB  F007         	goto	l3093
  5253  000FC6                     u2790:
  5254  000FC6  0E00               	movlw	0
  5255  000FC8  6E01               	movwf	___fladd@b^0,c
  5256  000FCA  0E00               	movlw	0
  5257  000FCC  6E02               	movwf	(___fladd@b+1)^0,c
  5258  000FCE  0E00               	movlw	0
  5259  000FD0  6E03               	movwf	(___fladd@b+2)^0,c
  5260  000FD2  0E00               	movlw	0
  5261  000FD4  6E04               	movwf	(___fladd@b+3)^0,c
  5262  000FD6                     l3093:
  5263  000FD6  8E03               	bsf	(___fladd@b+2)^0,7,c
  5264  000FD8  0E00               	movlw	0
  5265  000FDA  6E04               	movwf	(___fladd@b+3)^0,c
  5266  000FDC  EFF8  F007         	goto	l3099
  5267  000FE0                     l3097:
  5268  000FE0  0E00               	movlw	0
  5269  000FE2  6E01               	movwf	___fladd@b^0,c
  5270  000FE4  0E00               	movlw	0
  5271  000FE6  6E02               	movwf	(___fladd@b+1)^0,c
  5272  000FE8  0E00               	movlw	0
  5273  000FEA  6E03               	movwf	(___fladd@b+2)^0,c
  5274  000FEC  0E00               	movlw	0
  5275  000FEE  6E04               	movwf	(___fladd@b+3)^0,c
  5276  000FF0                     l3099:
  5277  000FF0  5008               	movf	(___fladd@a+3)^0,w,c
  5278  000FF2  0B80               	andlw	128
  5279  000FF4  6E0E               	movwf	___fladd@aexp^0,c
  5280  000FF6  500D               	movf	___fladd@signs^0,w,c
  5281  000FF8  180E               	xorwf	___fladd@aexp^0,w,c
  5282  000FFA  B4D8               	btfsc	status,2,c
  5283  000FFC  EF02  F008         	goto	u2801
  5284  001000  EF04  F008         	goto	u2800
  5285  001004                     u2801:
  5286  001004  EF05  F008         	goto	l3105
  5287  001008                     u2800:
  5288  001008  8C0D               	bsf	___fladd@signs^0,6,c
  5289  00100A                     l3105:
  5290  00100A  5008               	movf	(___fladd@a+3)^0,w,c
  5291  00100C  2408               	addwf	(___fladd@a+3)^0,w,c
  5292  00100E  6E0E               	movwf	___fladd@aexp^0,c
  5293  001010  AE07               	btfss	(___fladd@a+2)^0,7,c
  5294  001012  EF0D  F008         	goto	u2811
  5295  001016  EF0F  F008         	goto	u2810
  5296  00101A                     u2811:
  5297  00101A  EF10  F008         	goto	l3111
  5298  00101E                     u2810:
  5299  00101E  800E               	bsf	___fladd@aexp^0,0,c
  5300  001020                     l3111:
  5301  001020  500E               	movf	___fladd@aexp^0,w,c
  5302  001022  B4D8               	btfsc	status,2,c
  5303  001024  EF16  F008         	goto	u2821
  5304  001028  EF18  F008         	goto	u2820
  5305  00102C                     u2821:
  5306  00102C  EF2D  F008         	goto	l3121
  5307  001030                     u2820:
  5308  001030  280E               	incf	___fladd@aexp^0,w,c
  5309  001032  A4D8               	btfss	status,2,c
  5310  001034  EF1E  F008         	goto	u2831
  5311  001038  EF20  F008         	goto	u2830
  5312  00103C                     u2831:
  5313  00103C  EF28  F008         	goto	l3117
  5314  001040                     u2830:
  5315  001040  0E00               	movlw	0
  5316  001042  6E05               	movwf	___fladd@a^0,c
  5317  001044  0E00               	movlw	0
  5318  001046  6E06               	movwf	(___fladd@a+1)^0,c
  5319  001048  0E00               	movlw	0
  5320  00104A  6E07               	movwf	(___fladd@a+2)^0,c
  5321  00104C  0E00               	movlw	0
  5322  00104E  6E08               	movwf	(___fladd@a+3)^0,c
  5323  001050                     l3117:
  5324  001050  8E07               	bsf	(___fladd@a+2)^0,7,c
  5325  001052  0E00               	movlw	0
  5326  001054  6E08               	movwf	(___fladd@a+3)^0,c
  5327  001056  EF35  F008         	goto	l3123
  5328  00105A                     l3121:
  5329  00105A  0E00               	movlw	0
  5330  00105C  6E05               	movwf	___fladd@a^0,c
  5331  00105E  0E00               	movlw	0
  5332  001060  6E06               	movwf	(___fladd@a+1)^0,c
  5333  001062  0E00               	movlw	0
  5334  001064  6E07               	movwf	(___fladd@a+2)^0,c
  5335  001066  0E00               	movlw	0
  5336  001068  6E08               	movwf	(___fladd@a+3)^0,c
  5337  00106A                     l3123:
  5338  00106A  500F               	movf	___fladd@bexp^0,w,c
  5339  00106C  5C0E               	subwf	___fladd@aexp^0,w,c
  5340  00106E  B0D8               	btfsc	status,0,c
  5341  001070  EF3C  F008         	goto	u2841
  5342  001074  EF3E  F008         	goto	u2840
  5343  001078                     u2841:
  5344  001078  EF65  F008         	goto	l3159
  5345  00107C                     u2840:
  5346  00107C  AC0D               	btfss	___fladd@signs^0,6,c
  5347  00107E  EF43  F008         	goto	u2851
  5348  001082  EF45  F008         	goto	u2850
  5349  001086                     u2851:
  5350  001086  EF47  F008         	goto	l3129
  5351  00108A                     u2850:
  5352  00108A  0E80               	movlw	128
  5353  00108C  1A0D               	xorwf	___fladd@signs^0,f,c
  5354  00108E                     l3129:
  5355  00108E  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5356  001092  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5357  001096  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5358  00109A  C001  F010         	movff	___fladd@b,___fladd@grs
  5359  00109E  C005  F001         	movff	___fladd@a,___fladd@b
  5360  0010A2  C010  F005         	movff	___fladd@grs,___fladd@a
  5361  0010A6  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5362  0010AA  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5363  0010AE  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5364  0010B2  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5365  0010B6  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5366  0010BA  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5367  0010BE  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5368  0010C2  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5369  0010C6  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5370  0010CA                     l3159:
  5371  0010CA  0E00               	movlw	0
  5372  0010CC  6E10               	movwf	___fladd@grs^0,c
  5373  0010CE  500F               	movf	___fladd@bexp^0,w,c
  5374  0010D0  C00E  F009         	movff	___fladd@aexp,??___fladd
  5375  0010D4  6A0A               	clrf	(??___fladd+1)^0,c
  5376  0010D6  5E09               	subwf	??___fladd^0,f,c
  5377  0010D8  0E00               	movlw	0
  5378  0010DA  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5379  0010DC  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5380  0010DE  EF7A  F008         	goto	u2861
  5381  0010E2  500A               	movf	(??___fladd+1)^0,w,c
  5382  0010E4  E109               	bnz	u2860
  5383  0010E6  0E1A               	movlw	26
  5384  0010E8  5C09               	subwf	??___fladd^0,w,c
  5385  0010EA  A0D8               	btfss	status,0,c
  5386  0010EC  EF7A  F008         	goto	u2861
  5387  0010F0  EF7C  F008         	goto	u2860
  5388  0010F4                     u2861:
  5389  0010F4  EFB3  F008         	goto	l735
  5390  0010F8                     u2860:
  5391  0010F8  5001               	movf	___fladd@b^0,w,c
  5392  0010FA  1002               	iorwf	(___fladd@b+1)^0,w,c
  5393  0010FC  1003               	iorwf	(___fladd@b+2)^0,w,c
  5394  0010FE  1004               	iorwf	(___fladd@b+3)^0,w,c
  5395  001100  A4D8               	btfss	status,2,c
  5396  001102  EF85  F008         	goto	u2871
  5397  001106  EF88  F008         	goto	u2870
  5398  00110A                     u2871:
  5399  00110A  0E01               	movlw	1
  5400  00110C  EF89  F008         	goto	u2880
  5401  001110                     u2870:
  5402  001110  0E00               	movlw	0
  5403  001112                     u2880:
  5404  001112  6E10               	movwf	___fladd@grs^0,c
  5405  001114  0E00               	movlw	0
  5406  001116  6E01               	movwf	___fladd@b^0,c
  5407  001118  0E00               	movlw	0
  5408  00111A  6E02               	movwf	(___fladd@b+1)^0,c
  5409  00111C  0E00               	movlw	0
  5410  00111E  6E03               	movwf	(___fladd@b+2)^0,c
  5411  001120  0E00               	movlw	0
  5412  001122  6E04               	movwf	(___fladd@b+3)^0,c
  5413  001124  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5414  001128  EFBC  F008         	goto	l734
  5415  00112C                     l736:
  5416  00112C  A010               	btfss	___fladd@grs^0,0,c
  5417  00112E  EF9B  F008         	goto	u2891
  5418  001132  EF9D  F008         	goto	u2890
  5419  001136                     u2891:
  5420  001136  EFA3  F008         	goto	l3171
  5421  00113A                     u2890:
  5422  00113A  90D8               	bcf	status,0,c
  5423  00113C  3010               	rrcf	___fladd@grs^0,w,c
  5424  00113E  0901               	iorlw	1
  5425  001140  6E10               	movwf	___fladd@grs^0,c
  5426  001142  EFA5  F008         	goto	l3173
  5427  001146                     l3171:
  5428  001146  90D8               	bcf	status,0,c
  5429  001148  3210               	rrcf	___fladd@grs^0,f,c
  5430  00114A                     l3173:
  5431  00114A  A001               	btfss	___fladd@b^0,0,c
  5432  00114C  EFAA  F008         	goto	u2901
  5433  001150  EFAC  F008         	goto	u2900
  5434  001154                     u2901:
  5435  001154  EFAD  F008         	goto	l3177
  5436  001158                     u2900:
  5437  001158  8E10               	bsf	___fladd@grs^0,7,c
  5438  00115A                     l3177:
  5439  00115A  3404               	rlcf	(___fladd@b+3)^0,w,c
  5440  00115C  3204               	rrcf	(___fladd@b+3)^0,f,c
  5441  00115E  3203               	rrcf	(___fladd@b+2)^0,f,c
  5442  001160  3202               	rrcf	(___fladd@b+1)^0,f,c
  5443  001162  3201               	rrcf	___fladd@b^0,f,c
  5444  001164  2A0F               	incf	___fladd@bexp^0,f,c
  5445  001166                     l735:
  5446  001166  500E               	movf	___fladd@aexp^0,w,c
  5447  001168  5C0F               	subwf	___fladd@bexp^0,w,c
  5448  00116A  A0D8               	btfss	status,0,c
  5449  00116C  EFBA  F008         	goto	u2911
  5450  001170  EFBC  F008         	goto	u2910
  5451  001174                     u2911:
  5452  001174  EF96  F008         	goto	l736
  5453  001178                     u2910:
  5454  001178                     l734:
  5455  001178  BC0D               	btfsc	___fladd@signs^0,6,c
  5456  00117A  EFC1  F008         	goto	u2921
  5457  00117E  EFC3  F008         	goto	u2920
  5458  001182                     u2921:
  5459  001182  EF03  F009         	goto	l3205
  5460  001186                     u2920:
  5461  001186  500F               	movf	___fladd@bexp^0,w,c
  5462  001188  A4D8               	btfss	status,2,c
  5463  00118A  EFC9  F008         	goto	u2931
  5464  00118E  EFCB  F008         	goto	u2930
  5465  001192                     u2931:
  5466  001192  EFD5  F008         	goto	l3187
  5467  001196                     u2930:
  5468  001196  0E00               	movlw	0
  5469  001198  6E01               	movwf	?___fladd^0,c
  5470  00119A  0E00               	movlw	0
  5471  00119C  6E02               	movwf	(?___fladd+1)^0,c
  5472  00119E  0E00               	movlw	0
  5473  0011A0  6E03               	movwf	(?___fladd+2)^0,c
  5474  0011A2  0E00               	movlw	0
  5475  0011A4  6E04               	movwf	(?___fladd+3)^0,c
  5476  0011A6  EF24  F00A         	goto	l743
  5477  0011AA                     l3187:
  5478  0011AA  5005               	movf	___fladd@a^0,w,c
  5479  0011AC  2601               	addwf	___fladd@b^0,f,c
  5480  0011AE  5006               	movf	(___fladd@a+1)^0,w,c
  5481  0011B0  2202               	addwfc	(___fladd@b+1)^0,f,c
  5482  0011B2  5007               	movf	(___fladd@a+2)^0,w,c
  5483  0011B4  2203               	addwfc	(___fladd@b+2)^0,f,c
  5484  0011B6  5008               	movf	(___fladd@a+3)^0,w,c
  5485  0011B8  2204               	addwfc	(___fladd@b+3)^0,f,c
  5486  0011BA  A004               	btfss	(___fladd@b+3)^0,0,c
  5487  0011BC  EFE2  F008         	goto	u2941
  5488  0011C0  EFE4  F008         	goto	u2940
  5489  0011C4                     u2941:
  5490  0011C4  EF90  F009         	goto	l3241
  5491  0011C8                     u2940:
  5492  0011C8  A010               	btfss	___fladd@grs^0,0,c
  5493  0011CA  EFE9  F008         	goto	u2951
  5494  0011CE  EFEB  F008         	goto	u2950
  5495  0011D2                     u2951:
  5496  0011D2  EFF1  F008         	goto	l3195
  5497  0011D6                     u2950:
  5498  0011D6  90D8               	bcf	status,0,c
  5499  0011D8  3010               	rrcf	___fladd@grs^0,w,c
  5500  0011DA  0901               	iorlw	1
  5501  0011DC  6E10               	movwf	___fladd@grs^0,c
  5502  0011DE  EFF3  F008         	goto	l3197
  5503  0011E2                     l3195:
  5504  0011E2  90D8               	bcf	status,0,c
  5505  0011E4  3210               	rrcf	___fladd@grs^0,f,c
  5506  0011E6                     l3197:
  5507  0011E6  A001               	btfss	___fladd@b^0,0,c
  5508  0011E8  EFF8  F008         	goto	u2961
  5509  0011EC  EFFA  F008         	goto	u2960
  5510  0011F0                     u2961:
  5511  0011F0  EFFB  F008         	goto	l3201
  5512  0011F4                     u2960:
  5513  0011F4  8E10               	bsf	___fladd@grs^0,7,c
  5514  0011F6                     l3201:
  5515  0011F6  3404               	rlcf	(___fladd@b+3)^0,w,c
  5516  0011F8  3204               	rrcf	(___fladd@b+3)^0,f,c
  5517  0011FA  3203               	rrcf	(___fladd@b+2)^0,f,c
  5518  0011FC  3202               	rrcf	(___fladd@b+1)^0,f,c
  5519  0011FE  3201               	rrcf	___fladd@b^0,f,c
  5520  001200  2A0F               	incf	___fladd@bexp^0,f,c
  5521  001202  EF90  F009         	goto	l3241
  5522  001206                     l3205:
  5523  001206  5005               	movf	___fladd@a^0,w,c
  5524  001208  5C01               	subwf	___fladd@b^0,w,c
  5525  00120A  5006               	movf	(___fladd@a+1)^0,w,c
  5526  00120C  5802               	subwfb	(___fladd@b+1)^0,w,c
  5527  00120E  5007               	movf	(___fladd@a+2)^0,w,c
  5528  001210  5803               	subwfb	(___fladd@b+2)^0,w,c
  5529  001212  5004               	movf	(___fladd@b+3)^0,w,c
  5530  001214  0A80               	xorlw	128
  5531  001216  6E09               	movwf	??___fladd^0,c
  5532  001218  5008               	movf	(___fladd@a+3)^0,w,c
  5533  00121A  0A80               	xorlw	128
  5534  00121C  5809               	subwfb	??___fladd^0,w,c
  5535  00121E  B0D8               	btfsc	status,0,c
  5536  001220  EF14  F009         	goto	u2971
  5537  001224  EF16  F009         	goto	u2970
  5538  001228                     u2971:
  5539  001228  EF41  F009         	goto	l3215
  5540  00122C                     u2970:
  5541  00122C  5001               	movf	___fladd@b^0,w,c
  5542  00122E  5C05               	subwf	___fladd@a^0,w,c
  5543  001230  6E09               	movwf	??___fladd^0,c
  5544  001232  5002               	movf	(___fladd@b+1)^0,w,c
  5545  001234  5806               	subwfb	(___fladd@a+1)^0,w,c
  5546  001236  6E0A               	movwf	(??___fladd+1)^0,c
  5547  001238  5003               	movf	(___fladd@b+2)^0,w,c
  5548  00123A  5807               	subwfb	(___fladd@a+2)^0,w,c
  5549  00123C  6E0B               	movwf	(??___fladd+2)^0,c
  5550  00123E  5004               	movf	(___fladd@b+3)^0,w,c
  5551  001240  5808               	subwfb	(___fladd@a+3)^0,w,c
  5552  001242  6E0C               	movwf	(??___fladd+3)^0,c
  5553  001244  0EFF               	movlw	255
  5554  001246  2409               	addwf	??___fladd^0,w,c
  5555  001248  6E01               	movwf	___fladd@b^0,c
  5556  00124A  0EFF               	movlw	255
  5557  00124C  200A               	addwfc	(??___fladd+1)^0,w,c
  5558  00124E  6E02               	movwf	(___fladd@b+1)^0,c
  5559  001250  0EFF               	movlw	255
  5560  001252  200B               	addwfc	(??___fladd+2)^0,w,c
  5561  001254  6E03               	movwf	(___fladd@b+2)^0,c
  5562  001256  0EFF               	movlw	255
  5563  001258  200C               	addwfc	(??___fladd+3)^0,w,c
  5564  00125A  6E04               	movwf	(___fladd@b+3)^0,c
  5565  00125C  0E80               	movlw	128
  5566  00125E  1A0D               	xorwf	___fladd@signs^0,f,c
  5567  001260  6C10               	negf	___fladd@grs^0,c
  5568  001262  5010               	movf	___fladd@grs^0,w,c
  5569  001264  A4D8               	btfss	status,2,c
  5570  001266  EF37  F009         	goto	u2981
  5571  00126A  EF39  F009         	goto	u2980
  5572  00126E                     u2981:
  5573  00126E  EF49  F009         	goto	l751
  5574  001272                     u2980:
  5575  001272  0E01               	movlw	1
  5576  001274  2601               	addwf	___fladd@b^0,f,c
  5577  001276  0E00               	movlw	0
  5578  001278  2202               	addwfc	(___fladd@b+1)^0,f,c
  5579  00127A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5580  00127C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5581  00127E  EF49  F009         	goto	l751
  5582  001282                     l3215:
  5583  001282  5005               	movf	___fladd@a^0,w,c
  5584  001284  5E01               	subwf	___fladd@b^0,f,c
  5585  001286  5006               	movf	(___fladd@a+1)^0,w,c
  5586  001288  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5587  00128A  5007               	movf	(___fladd@a+2)^0,w,c
  5588  00128C  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5589  00128E  5008               	movf	(___fladd@a+3)^0,w,c
  5590  001290  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5591  001292                     l751:
  5592  001292  5001               	movf	___fladd@b^0,w,c
  5593  001294  1002               	iorwf	(___fladd@b+1)^0,w,c
  5594  001296  1003               	iorwf	(___fladd@b+2)^0,w,c
  5595  001298  1004               	iorwf	(___fladd@b+3)^0,w,c
  5596  00129A  A4D8               	btfss	status,2,c
  5597  00129C  EF52  F009         	goto	u2991
  5598  0012A0  EF54  F009         	goto	u2990
  5599  0012A4                     u2991:
  5600  0012A4  EF89  F009         	goto	l3239
  5601  0012A8                     u2990:
  5602  0012A8  5010               	movf	___fladd@grs^0,w,c
  5603  0012AA  A4D8               	btfss	status,2,c
  5604  0012AC  EF5A  F009         	goto	u3001
  5605  0012B0  EF5C  F009         	goto	u3000
  5606  0012B4                     u3001:
  5607  0012B4  EF89  F009         	goto	l3239
  5608  0012B8                     u3000:
  5609  0012B8  0E00               	movlw	0
  5610  0012BA  6E01               	movwf	?___fladd^0,c
  5611  0012BC  0E00               	movlw	0
  5612  0012BE  6E02               	movwf	(?___fladd+1)^0,c
  5613  0012C0  0E00               	movlw	0
  5614  0012C2  6E03               	movwf	(?___fladd+2)^0,c
  5615  0012C4  0E00               	movlw	0
  5616  0012C6  6E04               	movwf	(?___fladd+3)^0,c
  5617  0012C8  EF24  F00A         	goto	l743
  5618  0012CC                     l3223:
  5619  0012CC  90D8               	bcf	status,0,c
  5620  0012CE  3601               	rlcf	___fladd@b^0,f,c
  5621  0012D0  3602               	rlcf	(___fladd@b+1)^0,f,c
  5622  0012D2  3603               	rlcf	(___fladd@b+2)^0,f,c
  5623  0012D4  3604               	rlcf	(___fladd@b+3)^0,f,c
  5624  0012D6  AE10               	btfss	___fladd@grs^0,7,c
  5625  0012D8  EF70  F009         	goto	u3011
  5626  0012DC  EF72  F009         	goto	u3010
  5627  0012E0                     u3011:
  5628  0012E0  EF73  F009         	goto	l3229
  5629  0012E4                     u3010:
  5630  0012E4  8001               	bsf	___fladd@b^0,0,c
  5631  0012E6                     l3229:
  5632  0012E6  A010               	btfss	___fladd@grs^0,0,c
  5633  0012E8  EF78  F009         	goto	u3021
  5634  0012EC  EF7A  F009         	goto	u3020
  5635  0012F0                     u3021:
  5636  0012F0  EF7E  F009         	goto	l3233
  5637  0012F4                     u3020:
  5638  0012F4  80D8               	bsf	status,0,c
  5639  0012F6  3610               	rlcf	___fladd@grs^0,f,c
  5640  0012F8  EF80  F009         	goto	l3235
  5641  0012FC                     l3233:
  5642  0012FC  90D8               	bcf	status,0,c
  5643  0012FE  3610               	rlcf	___fladd@grs^0,f,c
  5644  001300                     l3235:
  5645  001300  500F               	movf	___fladd@bexp^0,w,c
  5646  001302  B4D8               	btfsc	status,2,c
  5647  001304  EF86  F009         	goto	u3031
  5648  001308  EF88  F009         	goto	u3030
  5649  00130C                     u3031:
  5650  00130C  EF89  F009         	goto	l3239
  5651  001310                     u3030:
  5652  001310  060F               	decf	___fladd@bexp^0,f,c
  5653  001312                     l3239:
  5654  001312  AE03               	btfss	(___fladd@b+2)^0,7,c
  5655  001314  EF8E  F009         	goto	u3041
  5656  001318  EF90  F009         	goto	u3040
  5657  00131C                     u3041:
  5658  00131C  EF66  F009         	goto	l3223
  5659  001320                     u3040:
  5660  001320                     l3241:
  5661  001320  0E00               	movlw	0
  5662  001322  6E0E               	movwf	___fladd@aexp^0,c
  5663  001324  AE10               	btfss	___fladd@grs^0,7,c
  5664  001326  EF97  F009         	goto	u3051
  5665  00132A  EF99  F009         	goto	u3050
  5666  00132E                     u3051:
  5667  00132E  EFB1  F009         	goto	l760
  5668  001332                     u3050:
  5669  001332  C010  F009         	movff	___fladd@grs,??___fladd
  5670  001336  0E7F               	movlw	127
  5671  001338  1609               	andwf	??___fladd^0,f,c
  5672  00133A  B4D8               	btfsc	status,2,c
  5673  00133C  EFA2  F009         	goto	u3061
  5674  001340  EFA4  F009         	goto	u3060
  5675  001344                     u3061:
  5676  001344  EFA8  F009         	goto	l761
  5677  001348                     u3060:
  5678  001348                     l3247:
  5679  001348  0E01               	movlw	1
  5680  00134A  6E0E               	movwf	___fladd@aexp^0,c
  5681  00134C  EFB1  F009         	goto	l760
  5682  001350                     l761:
  5683  001350  A001               	btfss	___fladd@b^0,0,c
  5684  001352  EFAD  F009         	goto	u3071
  5685  001356  EFAF  F009         	goto	u3070
  5686  00135A                     u3071:
  5687  00135A  EFB1  F009         	goto	l760
  5688  00135E                     u3070:
  5689  00135E  EFA4  F009         	goto	l3247
  5690  001362                     l760:
  5691  001362  500E               	movf	___fladd@aexp^0,w,c
  5692  001364  B4D8               	btfsc	status,2,c
  5693  001366  EFB7  F009         	goto	u3081
  5694  00136A  EFB9  F009         	goto	u3080
  5695  00136E                     u3081:
  5696  00136E  EFE4  F009         	goto	l3259
  5697  001372                     u3080:
  5698  001372  0E01               	movlw	1
  5699  001374  2601               	addwf	___fladd@b^0,f,c
  5700  001376  0E00               	movlw	0
  5701  001378  2202               	addwfc	(___fladd@b+1)^0,f,c
  5702  00137A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5703  00137C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5704  00137E  A004               	btfss	(___fladd@b+3)^0,0,c
  5705  001380  EFC4  F009         	goto	u3091
  5706  001384  EFC6  F009         	goto	u3090
  5707  001388                     u3091:
  5708  001388  EFE4  F009         	goto	l3259
  5709  00138C                     u3090:
  5710  00138C  C001  F009         	movff	___fladd@b,??___fladd
  5711  001390  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5712  001394  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5713  001398  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5714  00139C  340C               	rlcf	(??___fladd+3)^0,w,c
  5715  00139E  320C               	rrcf	(??___fladd+3)^0,f,c
  5716  0013A0  320B               	rrcf	(??___fladd+2)^0,f,c
  5717  0013A2  320A               	rrcf	(??___fladd+1)^0,f,c
  5718  0013A4  3209               	rrcf	??___fladd^0,f,c
  5719  0013A6  C009  F001         	movff	??___fladd,___fladd@b
  5720  0013AA  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5721  0013AE  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5722  0013B2  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5723  0013B6  280F               	incf	___fladd@bexp^0,w,c
  5724  0013B8  B4D8               	btfsc	status,2,c
  5725  0013BA  EFE1  F009         	goto	u3101
  5726  0013BE  EFE3  F009         	goto	u3100
  5727  0013C2                     u3101:
  5728  0013C2  EFE4  F009         	goto	l3259
  5729  0013C6                     u3100:
  5730  0013C6  2A0F               	incf	___fladd@bexp^0,f,c
  5731  0013C8                     l3259:
  5732  0013C8  280F               	incf	___fladd@bexp^0,w,c
  5733  0013CA  B4D8               	btfsc	status,2,c
  5734  0013CC  EFEA  F009         	goto	u3111
  5735  0013D0  EFEC  F009         	goto	u3110
  5736  0013D4                     u3111:
  5737  0013D4  EFF4  F009         	goto	l3263
  5738  0013D8                     u3110:
  5739  0013D8  500F               	movf	___fladd@bexp^0,w,c
  5740  0013DA  A4D8               	btfss	status,2,c
  5741  0013DC  EFF2  F009         	goto	u3121
  5742  0013E0  EFF4  F009         	goto	u3120
  5743  0013E4                     u3121:
  5744  0013E4  EF06  F00A         	goto	l3267
  5745  0013E8                     u3120:
  5746  0013E8                     l3263:
  5747  0013E8  0E00               	movlw	0
  5748  0013EA  6E01               	movwf	___fladd@b^0,c
  5749  0013EC  0E00               	movlw	0
  5750  0013EE  6E02               	movwf	(___fladd@b+1)^0,c
  5751  0013F0  0E00               	movlw	0
  5752  0013F2  6E03               	movwf	(___fladd@b+2)^0,c
  5753  0013F4  0E00               	movlw	0
  5754  0013F6  6E04               	movwf	(___fladd@b+3)^0,c
  5755  0013F8  500F               	movf	___fladd@bexp^0,w,c
  5756  0013FA  A4D8               	btfss	status,2,c
  5757  0013FC  EF02  F00A         	goto	u3131
  5758  001400  EF04  F00A         	goto	u3130
  5759  001404                     u3131:
  5760  001404  EF06  F00A         	goto	l3267
  5761  001408                     u3130:
  5762  001408  0E00               	movlw	0
  5763  00140A  6E0D               	movwf	___fladd@signs^0,c
  5764  00140C                     l3267:
  5765  00140C  A00F               	btfss	___fladd@bexp^0,0,c
  5766  00140E  EF0B  F00A         	goto	u3141
  5767  001412  EF0D  F00A         	goto	u3140
  5768  001416                     u3141:
  5769  001416  EF10  F00A         	goto	l3271
  5770  00141A                     u3140:
  5771  00141A  8E03               	bsf	(___fladd@b+2)^0,7,c
  5772  00141C  EF11  F00A         	goto	l3273
  5773  001420                     l3271:
  5774  001420  9E03               	bcf	(___fladd@b+2)^0,7,c
  5775  001422                     l3273:
  5776  001422  90D8               	bcf	status,0,c
  5777  001424  300F               	rrcf	___fladd@bexp^0,w,c
  5778  001426  6E04               	movwf	(___fladd@b+3)^0,c
  5779  001428  AE0D               	btfss	___fladd@signs^0,7,c
  5780  00142A  EF19  F00A         	goto	u3151
  5781  00142E  EF1B  F00A         	goto	u3150
  5782  001432                     u3151:
  5783  001432  EF1C  F00A         	goto	l3279
  5784  001436                     u3150:
  5785  001436  8E04               	bsf	(___fladd@b+3)^0,7,c
  5786  001438                     l3279:
  5787  001438  C001  F001         	movff	___fladd@b,?___fladd
  5788  00143C  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5789  001440  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5790  001444  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5791  001448                     l743:
  5792  001448  0012               	return		;funcret
  5793  00144A                     __end_of___fladd:
  5794                           	callstack 0
  5795                           
  5796 ;; *************** function ___flneg *****************
  5797 ;; Defined at:
  5798 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  f1              4    0[COMRAM] unsigned char 
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;		None
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  4    0[COMRAM] unsigned char 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5812 ;;      Params:         4       0       0       0
  5813 ;;      Locals:         0       0       0       0
  5814 ;;      Temps:          0       0       0       0
  5815 ;;      Totals:         4       0       0       0
  5816 ;;Total ram usage:        4 bytes
  5817 ;; Hardware stack levels used: 1
  5818 ;; Hardware stack levels required when called: 1
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_efgtoa
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           	psect	text18
  5827  003C30                     __ptext18:
  5828                           	callstack 0
  5829  003C30                     ___flneg:
  5830                           	callstack 24
  5831  003C30  5001               	movf	___flneg@f1^0,w,c
  5832  003C32  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5833  003C34  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5834  003C36  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5835  003C38  B4D8               	btfsc	status,2,c
  5836  003C3A  EF21  F01E         	goto	u3951
  5837  003C3E  EF23  F01E         	goto	u3950
  5838  003C42                     u3951:
  5839  003C42  EF2B  F01E         	goto	l3781
  5840  003C46                     u3950:
  5841  003C46  0E00               	movlw	0
  5842  003C48  1A01               	xorwf	___flneg@f1^0,f,c
  5843  003C4A  0E00               	movlw	0
  5844  003C4C  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5845  003C4E  0E00               	movlw	0
  5846  003C50  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5847  003C52  0E80               	movlw	128
  5848  003C54  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5849  003C56                     l3781:
  5850  003C56  C001  F001         	movff	___flneg@f1,?___flneg
  5851  003C5A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5852  003C5E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5853  003C62  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5854  003C66  0012               	return		;funcret
  5855  003C68                     __end_of___flneg:
  5856                           	callstack 0
  5857                           
  5858 ;; *************** function ___flmul *****************
  5859 ;; Defined at:
  5860 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  b               4    0[COMRAM] unsigned char 
  5863 ;;  a               4    4[COMRAM] unsigned char 
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;  prod            4   19[COMRAM] struct .
  5866 ;;  grs             4   13[COMRAM] unsigned long 
  5867 ;;  temp            2   23[COMRAM] struct .
  5868 ;;  bexp            1   18[COMRAM] unsigned char 
  5869 ;;  aexp            1   17[COMRAM] unsigned char 
  5870 ;;  sign            1   12[COMRAM] unsigned char 
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  4    0[COMRAM] unsigned char 
  5873 ;; Registers used:
  5874 ;;		wreg, status,2, status,0, prodl, prodh
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5880 ;;      Params:         8       0       0       0
  5881 ;;      Locals:        13       0       0       0
  5882 ;;      Temps:          4       0       0       0
  5883 ;;      Totals:        25       0       0       0
  5884 ;;Total ram usage:       25 bytes
  5885 ;; Hardware stack levels used: 1
  5886 ;; Hardware stack levels required when called: 1
  5887 ;; This function calls:
  5888 ;;		Nothing
  5889 ;; This function is called by:
  5890 ;;		_efgtoa
  5891 ;; This function uses a non-reentrant model
  5892 ;;
  5893                           
  5894                           	psect	text19
  5895  00144A                     __ptext19:
  5896                           	callstack 0
  5897  00144A                     ___flmul:
  5898                           	callstack 24
  5899  00144A  5004               	movf	(___flmul@b+3)^0,w,c
  5900  00144C  0B80               	andlw	128
  5901  00144E  6E0D               	movwf	___flmul@sign^0,c
  5902  001450  5004               	movf	(___flmul@b+3)^0,w,c
  5903  001452  2404               	addwf	(___flmul@b+3)^0,w,c
  5904  001454  6E13               	movwf	___flmul@bexp^0,c
  5905  001456  AE03               	btfss	(___flmul@b+2)^0,7,c
  5906  001458  EF30  F00A         	goto	u3561
  5907  00145C  EF32  F00A         	goto	u3560
  5908  001460                     u3561:
  5909  001460  EF33  F00A         	goto	l3529
  5910  001464                     u3560:
  5911  001464  8013               	bsf	___flmul@bexp^0,0,c
  5912  001466                     l3529:
  5913  001466  5013               	movf	___flmul@bexp^0,w,c
  5914  001468  B4D8               	btfsc	status,2,c
  5915  00146A  EF39  F00A         	goto	u3571
  5916  00146E  EF3B  F00A         	goto	u3570
  5917  001472                     u3571:
  5918  001472  EF4E  F00A         	goto	l3537
  5919  001476                     u3570:
  5920  001476  2813               	incf	___flmul@bexp^0,w,c
  5921  001478  A4D8               	btfss	status,2,c
  5922  00147A  EF41  F00A         	goto	u3581
  5923  00147E  EF43  F00A         	goto	u3580
  5924  001482                     u3581:
  5925  001482  EF4B  F00A         	goto	l3535
  5926  001486                     u3580:
  5927  001486  0E00               	movlw	0
  5928  001488  6E01               	movwf	___flmul@b^0,c
  5929  00148A  0E00               	movlw	0
  5930  00148C  6E02               	movwf	(___flmul@b+1)^0,c
  5931  00148E  0E00               	movlw	0
  5932  001490  6E03               	movwf	(___flmul@b+2)^0,c
  5933  001492  0E00               	movlw	0
  5934  001494  6E04               	movwf	(___flmul@b+3)^0,c
  5935  001496                     l3535:
  5936  001496  8E03               	bsf	(___flmul@b+2)^0,7,c
  5937  001498  EF56  F00A         	goto	l3539
  5938  00149C                     l3537:
  5939  00149C  0E00               	movlw	0
  5940  00149E  6E01               	movwf	___flmul@b^0,c
  5941  0014A0  0E00               	movlw	0
  5942  0014A2  6E02               	movwf	(___flmul@b+1)^0,c
  5943  0014A4  0E00               	movlw	0
  5944  0014A6  6E03               	movwf	(___flmul@b+2)^0,c
  5945  0014A8  0E00               	movlw	0
  5946  0014AA  6E04               	movwf	(___flmul@b+3)^0,c
  5947  0014AC                     l3539:
  5948  0014AC  5008               	movf	(___flmul@a+3)^0,w,c
  5949  0014AE  0B80               	andlw	128
  5950  0014B0  1A0D               	xorwf	___flmul@sign^0,f,c
  5951  0014B2  5008               	movf	(___flmul@a+3)^0,w,c
  5952  0014B4  2408               	addwf	(___flmul@a+3)^0,w,c
  5953  0014B6  6E12               	movwf	___flmul@aexp^0,c
  5954  0014B8  AE07               	btfss	(___flmul@a+2)^0,7,c
  5955  0014BA  EF61  F00A         	goto	u3591
  5956  0014BE  EF63  F00A         	goto	u3590
  5957  0014C2                     u3591:
  5958  0014C2  EF64  F00A         	goto	l3547
  5959  0014C6                     u3590:
  5960  0014C6  8012               	bsf	___flmul@aexp^0,0,c
  5961  0014C8                     l3547:
  5962  0014C8  5012               	movf	___flmul@aexp^0,w,c
  5963  0014CA  B4D8               	btfsc	status,2,c
  5964  0014CC  EF6A  F00A         	goto	u3601
  5965  0014D0  EF6C  F00A         	goto	u3600
  5966  0014D4                     u3601:
  5967  0014D4  EF7F  F00A         	goto	l3555
  5968  0014D8                     u3600:
  5969  0014D8  2812               	incf	___flmul@aexp^0,w,c
  5970  0014DA  A4D8               	btfss	status,2,c
  5971  0014DC  EF72  F00A         	goto	u3611
  5972  0014E0  EF74  F00A         	goto	u3610
  5973  0014E4                     u3611:
  5974  0014E4  EF7C  F00A         	goto	l3553
  5975  0014E8                     u3610:
  5976  0014E8  0E00               	movlw	0
  5977  0014EA  6E05               	movwf	___flmul@a^0,c
  5978  0014EC  0E00               	movlw	0
  5979  0014EE  6E06               	movwf	(___flmul@a+1)^0,c
  5980  0014F0  0E00               	movlw	0
  5981  0014F2  6E07               	movwf	(___flmul@a+2)^0,c
  5982  0014F4  0E00               	movlw	0
  5983  0014F6  6E08               	movwf	(___flmul@a+3)^0,c
  5984  0014F8                     l3553:
  5985  0014F8  8E07               	bsf	(___flmul@a+2)^0,7,c
  5986  0014FA  EF87  F00A         	goto	l820
  5987  0014FE                     l3555:
  5988  0014FE  0E00               	movlw	0
  5989  001500  6E05               	movwf	___flmul@a^0,c
  5990  001502  0E00               	movlw	0
  5991  001504  6E06               	movwf	(___flmul@a+1)^0,c
  5992  001506  0E00               	movlw	0
  5993  001508  6E07               	movwf	(___flmul@a+2)^0,c
  5994  00150A  0E00               	movlw	0
  5995  00150C  6E08               	movwf	(___flmul@a+3)^0,c
  5996  00150E                     l820:
  5997  00150E  5012               	movf	___flmul@aexp^0,w,c
  5998  001510  B4D8               	btfsc	status,2,c
  5999  001512  EF8D  F00A         	goto	u3621
  6000  001516  EF8F  F00A         	goto	u3620
  6001  00151A                     u3621:
  6002  00151A  EF97  F00A         	goto	l3559
  6003  00151E                     u3620:
  6004  00151E  5013               	movf	___flmul@bexp^0,w,c
  6005  001520  A4D8               	btfss	status,2,c
  6006  001522  EF95  F00A         	goto	u3631
  6007  001526  EF97  F00A         	goto	u3630
  6008  00152A                     u3631:
  6009  00152A  EFA1  F00A         	goto	l3563
  6010  00152E                     u3630:
  6011  00152E                     l3559:
  6012  00152E  0E00               	movlw	0
  6013  001530  6E01               	movwf	?___flmul^0,c
  6014  001532  0E00               	movlw	0
  6015  001534  6E02               	movwf	(?___flmul+1)^0,c
  6016  001536  0E00               	movlw	0
  6017  001538  6E03               	movwf	(?___flmul+2)^0,c
  6018  00153A  0E00               	movlw	0
  6019  00153C  6E04               	movwf	(?___flmul+3)^0,c
  6020  00153E  EF39  F00C         	goto	l824
  6021  001542                     l3563:
  6022  001542  5007               	movf	(___flmul@a+2)^0,w,c
  6023  001544  0201               	mulwf	___flmul@b^0,c
  6024  001546  CFF3 F018          	movff	prodl,___flmul@temp
  6025  00154A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6026  00154E  5018               	movf	___flmul@temp^0,w,c
  6027  001550  6E0E               	movwf	___flmul@grs^0,c
  6028  001552  6A0F               	clrf	(___flmul@grs+1)^0,c
  6029  001554  6A10               	clrf	(___flmul@grs+2)^0,c
  6030  001556  6A11               	clrf	(___flmul@grs+3)^0,c
  6031  001558  5019               	movf	(___flmul@temp+1)^0,w,c
  6032  00155A  6E14               	movwf	___flmul@prod^0,c
  6033  00155C  6A15               	clrf	(___flmul@prod+1)^0,c
  6034  00155E  6A16               	clrf	(___flmul@prod+2)^0,c
  6035  001560  6A17               	clrf	(___flmul@prod+3)^0,c
  6036  001562  5006               	movf	(___flmul@a+1)^0,w,c
  6037  001564  0202               	mulwf	(___flmul@b+1)^0,c
  6038  001566  CFF3 F018          	movff	prodl,___flmul@temp
  6039  00156A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6040  00156E  5018               	movf	___flmul@temp^0,w,c
  6041  001570  260E               	addwf	___flmul@grs^0,f,c
  6042  001572  0E00               	movlw	0
  6043  001574  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6044  001576  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6045  001578  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6046  00157A  5019               	movf	(___flmul@temp+1)^0,w,c
  6047  00157C  2614               	addwf	___flmul@prod^0,f,c
  6048  00157E  0E00               	movlw	0
  6049  001580  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6050  001582  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6051  001584  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6052  001586  5005               	movf	___flmul@a^0,w,c
  6053  001588  0203               	mulwf	(___flmul@b+2)^0,c
  6054  00158A  CFF3 F018          	movff	prodl,___flmul@temp
  6055  00158E  CFF4 F019          	movff	prodh,___flmul@temp+1
  6056  001592  5018               	movf	___flmul@temp^0,w,c
  6057  001594  260E               	addwf	___flmul@grs^0,f,c
  6058  001596  0E00               	movlw	0
  6059  001598  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6060  00159A  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6061  00159C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6062  00159E  5019               	movf	(___flmul@temp+1)^0,w,c
  6063  0015A0  2614               	addwf	___flmul@prod^0,f,c
  6064  0015A2  0E00               	movlw	0
  6065  0015A4  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6066  0015A6  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6067  0015A8  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6068  0015AA  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6069  0015AE  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6070  0015B2  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6071  0015B6  6A0E               	clrf	___flmul@grs^0,c
  6072  0015B8  5005               	movf	___flmul@a^0,w,c
  6073  0015BA  0202               	mulwf	(___flmul@b+1)^0,c
  6074  0015BC  CFF3 F018          	movff	prodl,___flmul@temp
  6075  0015C0  CFF4 F019          	movff	prodh,___flmul@temp+1
  6076  0015C4  5018               	movf	___flmul@temp^0,w,c
  6077  0015C6  260E               	addwf	___flmul@grs^0,f,c
  6078  0015C8  5019               	movf	(___flmul@temp+1)^0,w,c
  6079  0015CA  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6080  0015CC  0E00               	movlw	0
  6081  0015CE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6082  0015D0  0E00               	movlw	0
  6083  0015D2  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6084  0015D4  5006               	movf	(___flmul@a+1)^0,w,c
  6085  0015D6  0201               	mulwf	___flmul@b^0,c
  6086  0015D8  CFF3 F018          	movff	prodl,___flmul@temp
  6087  0015DC  CFF4 F019          	movff	prodh,___flmul@temp+1
  6088  0015E0  5018               	movf	___flmul@temp^0,w,c
  6089  0015E2  260E               	addwf	___flmul@grs^0,f,c
  6090  0015E4  5019               	movf	(___flmul@temp+1)^0,w,c
  6091  0015E6  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6092  0015E8  0E00               	movlw	0
  6093  0015EA  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6094  0015EC  0E00               	movlw	0
  6095  0015EE  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6096  0015F0  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6097  0015F4  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6098  0015F8  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6099  0015FC  6A0E               	clrf	___flmul@grs^0,c
  6100  0015FE  5005               	movf	___flmul@a^0,w,c
  6101  001600  0201               	mulwf	___flmul@b^0,c
  6102  001602  CFF3 F018          	movff	prodl,___flmul@temp
  6103  001606  CFF4 F019          	movff	prodh,___flmul@temp+1
  6104  00160A  5018               	movf	___flmul@temp^0,w,c
  6105  00160C  260E               	addwf	___flmul@grs^0,f,c
  6106  00160E  5019               	movf	(___flmul@temp+1)^0,w,c
  6107  001610  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6108  001612  0E00               	movlw	0
  6109  001614  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6110  001616  0E00               	movlw	0
  6111  001618  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6112  00161A  5007               	movf	(___flmul@a+2)^0,w,c
  6113  00161C  0202               	mulwf	(___flmul@b+1)^0,c
  6114  00161E  CFF3 F018          	movff	prodl,___flmul@temp
  6115  001622  CFF4 F019          	movff	prodh,___flmul@temp+1
  6116  001626  5018               	movf	___flmul@temp^0,w,c
  6117  001628  2614               	addwf	___flmul@prod^0,f,c
  6118  00162A  5019               	movf	(___flmul@temp+1)^0,w,c
  6119  00162C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6120  00162E  0E00               	movlw	0
  6121  001630  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6122  001632  0E00               	movlw	0
  6123  001634  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6124  001636  5006               	movf	(___flmul@a+1)^0,w,c
  6125  001638  0203               	mulwf	(___flmul@b+2)^0,c
  6126  00163A  CFF3 F018          	movff	prodl,___flmul@temp
  6127  00163E  CFF4 F019          	movff	prodh,___flmul@temp+1
  6128  001642  5018               	movf	___flmul@temp^0,w,c
  6129  001644  2614               	addwf	___flmul@prod^0,f,c
  6130  001646  5019               	movf	(___flmul@temp+1)^0,w,c
  6131  001648  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6132  00164A  0E00               	movlw	0
  6133  00164C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6134  00164E  0E00               	movlw	0
  6135  001650  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6136  001652  5007               	movf	(___flmul@a+2)^0,w,c
  6137  001654  0203               	mulwf	(___flmul@b+2)^0,c
  6138  001656  CFF3 F018          	movff	prodl,___flmul@temp
  6139  00165A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6140  00165E  5018               	movf	___flmul@temp^0,w,c
  6141  001660  6E09               	movwf	??___flmul^0,c
  6142  001662  5019               	movf	(___flmul@temp+1)^0,w,c
  6143  001664  6E0A               	movwf	(??___flmul+1)^0,c
  6144  001666  6A0B               	clrf	(??___flmul+2)^0,c
  6145  001668  6A0C               	clrf	(??___flmul+3)^0,c
  6146  00166A  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6147  00166E  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6148  001672  C009  F00A         	movff	??___flmul,??___flmul+1
  6149  001676  6A09               	clrf	??___flmul^0,c
  6150  001678  5009               	movf	??___flmul^0,w,c
  6151  00167A  2614               	addwf	___flmul@prod^0,f,c
  6152  00167C  500A               	movf	(??___flmul+1)^0,w,c
  6153  00167E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6154  001680  500B               	movf	(??___flmul+2)^0,w,c
  6155  001682  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6156  001684  500C               	movf	(??___flmul+3)^0,w,c
  6157  001686  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6158  001688  C00E  F009         	movff	___flmul@grs,??___flmul
  6159  00168C  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  6160  001690  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  6161  001694  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  6162  001698  0E19               	movlw	25
  6163  00169A  EF54  F00B         	goto	u3640
  6164  00169E                     u3645:
  6165  00169E  90D8               	bcf	status,0,c
  6166  0016A0  320C               	rrcf	(??___flmul+3)^0,f,c
  6167  0016A2  320B               	rrcf	(??___flmul+2)^0,f,c
  6168  0016A4  320A               	rrcf	(??___flmul+1)^0,f,c
  6169  0016A6  3209               	rrcf	??___flmul^0,f,c
  6170  0016A8                     u3640:
  6171  0016A8  2EE8               	decfsz	wreg,f,c
  6172  0016AA  EF4F  F00B         	goto	u3645
  6173  0016AE  5009               	movf	??___flmul^0,w,c
  6174  0016B0  2614               	addwf	___flmul@prod^0,f,c
  6175  0016B2  500A               	movf	(??___flmul+1)^0,w,c
  6176  0016B4  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6177  0016B6  500B               	movf	(??___flmul+2)^0,w,c
  6178  0016B8  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6179  0016BA  500C               	movf	(??___flmul+3)^0,w,c
  6180  0016BC  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6181  0016BE  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6182  0016C2  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6183  0016C6  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6184  0016CA  6A0E               	clrf	___flmul@grs^0,c
  6185  0016CC  5012               	movf	___flmul@aexp^0,w,c
  6186  0016CE  C013  F009         	movff	___flmul@bexp,??___flmul
  6187  0016D2  6A0A               	clrf	(??___flmul+1)^0,c
  6188  0016D4  2609               	addwf	??___flmul^0,f,c
  6189  0016D6  0E00               	movlw	0
  6190  0016D8  220A               	addwfc	(??___flmul+1)^0,f,c
  6191  0016DA  0E82               	movlw	130
  6192  0016DC  2409               	addwf	??___flmul^0,w,c
  6193  0016DE  6E18               	movwf	___flmul@temp^0,c
  6194  0016E0  0EFF               	movlw	255
  6195  0016E2  200A               	addwfc	(??___flmul+1)^0,w,c
  6196  0016E4  6E19               	movwf	(___flmul@temp+1)^0,c
  6197  0016E6  EF8A  F00B         	goto	l3611
  6198  0016EA                     l3605:
  6199  0016EA  90D8               	bcf	status,0,c
  6200  0016EC  3614               	rlcf	___flmul@prod^0,f,c
  6201  0016EE  3615               	rlcf	(___flmul@prod+1)^0,f,c
  6202  0016F0  3616               	rlcf	(___flmul@prod+2)^0,f,c
  6203  0016F2  3617               	rlcf	(___flmul@prod+3)^0,f,c
  6204  0016F4  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6205  0016F6  EF7F  F00B         	goto	u3651
  6206  0016FA  EF81  F00B         	goto	u3650
  6207  0016FE                     u3651:
  6208  0016FE  EF82  F00B         	goto	l827
  6209  001702                     u3650:
  6210  001702  8014               	bsf	___flmul@prod^0,0,c
  6211  001704                     l827:
  6212  001704  90D8               	bcf	status,0,c
  6213  001706  360E               	rlcf	___flmul@grs^0,f,c
  6214  001708  360F               	rlcf	(___flmul@grs+1)^0,f,c
  6215  00170A  3610               	rlcf	(___flmul@grs+2)^0,f,c
  6216  00170C  3611               	rlcf	(___flmul@grs+3)^0,f,c
  6217  00170E  0618               	decf	___flmul@temp^0,f,c
  6218  001710  A0D8               	btfss	status,0,c
  6219  001712  0619               	decf	(___flmul@temp+1)^0,f,c
  6220  001714                     l3611:
  6221  001714  AE16               	btfss	(___flmul@prod+2)^0,7,c
  6222  001716  EF8F  F00B         	goto	u3661
  6223  00171A  EF91  F00B         	goto	u3660
  6224  00171E                     u3661:
  6225  00171E  EF75  F00B         	goto	l3605
  6226  001722                     u3660:
  6227  001722  0E00               	movlw	0
  6228  001724  6E12               	movwf	___flmul@aexp^0,c
  6229  001726  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6230  001728  EF98  F00B         	goto	u3671
  6231  00172C  EF9A  F00B         	goto	u3670
  6232  001730                     u3671:
  6233  001730  EFBE  F00B         	goto	l829
  6234  001734                     u3670:
  6235  001734  0EFF               	movlw	255
  6236  001736  140E               	andwf	___flmul@grs^0,w,c
  6237  001738  6E09               	movwf	??___flmul^0,c
  6238  00173A  0EFF               	movlw	255
  6239  00173C  140F               	andwf	(___flmul@grs+1)^0,w,c
  6240  00173E  6E0A               	movwf	(??___flmul+1)^0,c
  6241  001740  0EFF               	movlw	255
  6242  001742  1410               	andwf	(___flmul@grs+2)^0,w,c
  6243  001744  6E0B               	movwf	(??___flmul+2)^0,c
  6244  001746  0E7F               	movlw	127
  6245  001748  1411               	andwf	(___flmul@grs+3)^0,w,c
  6246  00174A  6E0C               	movwf	(??___flmul+3)^0,c
  6247  00174C  5009               	movf	??___flmul^0,w,c
  6248  00174E  100A               	iorwf	(??___flmul+1)^0,w,c
  6249  001750  100B               	iorwf	(??___flmul+2)^0,w,c
  6250  001752  100C               	iorwf	(??___flmul+3)^0,w,c
  6251  001754  B4D8               	btfsc	status,2,c
  6252  001756  EFAF  F00B         	goto	u3681
  6253  00175A  EFB1  F00B         	goto	u3680
  6254  00175E                     u3681:
  6255  00175E  EFB5  F00B         	goto	l830
  6256  001762                     u3680:
  6257  001762                     l3619:
  6258  001762  0E01               	movlw	1
  6259  001764  6E12               	movwf	___flmul@aexp^0,c
  6260  001766  EFBE  F00B         	goto	l829
  6261  00176A                     l830:
  6262  00176A  A014               	btfss	___flmul@prod^0,0,c
  6263  00176C  EFBA  F00B         	goto	u3691
  6264  001770  EFBC  F00B         	goto	u3690
  6265  001774                     u3691:
  6266  001774  EFBE  F00B         	goto	l829
  6267  001778                     u3690:
  6268  001778  EFB1  F00B         	goto	l3619
  6269  00177C                     l829:
  6270  00177C  5012               	movf	___flmul@aexp^0,w,c
  6271  00177E  B4D8               	btfsc	status,2,c
  6272  001780  EFC4  F00B         	goto	u3701
  6273  001784  EFC6  F00B         	goto	u3700
  6274  001788                     u3701:
  6275  001788  EFEA  F00B         	goto	l3631
  6276  00178C                     u3700:
  6277  00178C  0E01               	movlw	1
  6278  00178E  2614               	addwf	___flmul@prod^0,f,c
  6279  001790  0E00               	movlw	0
  6280  001792  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6281  001794  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6282  001796  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6283  001798  A017               	btfss	(___flmul@prod+3)^0,0,c
  6284  00179A  EFD1  F00B         	goto	u3711
  6285  00179E  EFD3  F00B         	goto	u3710
  6286  0017A2                     u3711:
  6287  0017A2  EFEA  F00B         	goto	l3631
  6288  0017A6                     u3710:
  6289  0017A6  C014  F009         	movff	___flmul@prod,??___flmul
  6290  0017AA  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6291  0017AE  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6292  0017B2  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6293  0017B6  340C               	rlcf	(??___flmul+3)^0,w,c
  6294  0017B8  320C               	rrcf	(??___flmul+3)^0,f,c
  6295  0017BA  320B               	rrcf	(??___flmul+2)^0,f,c
  6296  0017BC  320A               	rrcf	(??___flmul+1)^0,f,c
  6297  0017BE  3209               	rrcf	??___flmul^0,f,c
  6298  0017C0  C009  F014         	movff	??___flmul,___flmul@prod
  6299  0017C4  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6300  0017C8  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6301  0017CC  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6302  0017D0  4A18               	infsnz	___flmul@temp^0,f,c
  6303  0017D2  2A19               	incf	(___flmul@temp+1)^0,f,c
  6304  0017D4                     l3631:
  6305  0017D4  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6306  0017D6  EFF5  F00B         	goto	u3721
  6307  0017DA  5019               	movf	(___flmul@temp+1)^0,w,c
  6308  0017DC  E108               	bnz	u3720
  6309  0017DE  2818               	incf	___flmul@temp^0,w,c
  6310  0017E0  A0D8               	btfss	status,0,c
  6311  0017E2  EFF5  F00B         	goto	u3721
  6312  0017E6  EFF7  F00B         	goto	u3720
  6313  0017EA                     u3721:
  6314  0017EA  EF01  F00C         	goto	l3635
  6315  0017EE                     u3720:
  6316  0017EE  0E00               	movlw	0
  6317  0017F0  6E14               	movwf	___flmul@prod^0,c
  6318  0017F2  0E00               	movlw	0
  6319  0017F4  6E15               	movwf	(___flmul@prod+1)^0,c
  6320  0017F6  0E80               	movlw	128
  6321  0017F8  6E16               	movwf	(___flmul@prod+2)^0,c
  6322  0017FA  0E7F               	movlw	127
  6323  0017FC  6E17               	movwf	(___flmul@prod+3)^0,c
  6324  0017FE  EF2F  F00C         	goto	l3647
  6325  001802                     l3635:
  6326  001802  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6327  001804  EF0E  F00C         	goto	u3730
  6328  001808  5019               	movf	(___flmul@temp+1)^0,w,c
  6329  00180A  E106               	bnz	u3731
  6330  00180C  0418               	decf	___flmul@temp^0,w,c
  6331  00180E  B0D8               	btfsc	status,0,c
  6332  001810  EF0C  F00C         	goto	u3731
  6333  001814  EF0E  F00C         	goto	u3730
  6334  001818                     u3731:
  6335  001818  EF1A  F00C         	goto	l837
  6336  00181C                     u3730:
  6337  00181C  0E00               	movlw	0
  6338  00181E  6E14               	movwf	___flmul@prod^0,c
  6339  001820  0E00               	movlw	0
  6340  001822  6E15               	movwf	(___flmul@prod+1)^0,c
  6341  001824  0E00               	movlw	0
  6342  001826  6E16               	movwf	(___flmul@prod+2)^0,c
  6343  001828  0E00               	movlw	0
  6344  00182A  6E17               	movwf	(___flmul@prod+3)^0,c
  6345  00182C  0E00               	movlw	0
  6346  00182E  6E0D               	movwf	___flmul@sign^0,c
  6347  001830  EF2F  F00C         	goto	l3647
  6348  001834                     l837:
  6349  001834  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6350  001838  0EFF               	movlw	255
  6351  00183A  1614               	andwf	___flmul@prod^0,f,c
  6352  00183C  0EFF               	movlw	255
  6353  00183E  1615               	andwf	(___flmul@prod+1)^0,f,c
  6354  001840  0E7F               	movlw	127
  6355  001842  1616               	andwf	(___flmul@prod+2)^0,f,c
  6356  001844  0E00               	movlw	0
  6357  001846  1617               	andwf	(___flmul@prod+3)^0,f,c
  6358  001848  A013               	btfss	___flmul@bexp^0,0,c
  6359  00184A  EF29  F00C         	goto	u3741
  6360  00184E  EF2B  F00C         	goto	u3740
  6361  001852                     u3741:
  6362  001852  EF2C  F00C         	goto	l3645
  6363  001856                     u3740:
  6364  001856  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6365  001858                     l3645:
  6366  001858  90D8               	bcf	status,0,c
  6367  00185A  3013               	rrcf	___flmul@bexp^0,w,c
  6368  00185C  6E17               	movwf	(___flmul@prod+3)^0,c
  6369  00185E                     l3647:
  6370  00185E  500D               	movf	___flmul@sign^0,w,c
  6371  001860  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6372  001862  C014  F001         	movff	___flmul@prod,?___flmul
  6373  001866  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6374  00186A  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6375  00186E  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6376  001872                     l824:
  6377  001872  0012               	return		;funcret
  6378  001874                     __end_of___flmul:
  6379                           	callstack 0
  6380                           
  6381 ;; *************** function ___flge *****************
  6382 ;; Defined at:
  6383 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;  ff1             4   25[COMRAM] unsigned char 
  6386 ;;  ff2             4   29[COMRAM] unsigned char 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;		None
  6389 ;; Return value:  Size  Location     Type
  6390 ;;		None               void
  6391 ;; Registers used:
  6392 ;;		wreg, status,2, status,0
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6398 ;;      Params:         8       0       0       0
  6399 ;;      Locals:         0       0       0       0
  6400 ;;      Temps:          4       0       0       0
  6401 ;;      Totals:        12       0       0       0
  6402 ;;Total ram usage:       12 bytes
  6403 ;; Hardware stack levels used: 1
  6404 ;; Hardware stack levels required when called: 1
  6405 ;; This function calls:
  6406 ;;		Nothing
  6407 ;; This function is called by:
  6408 ;;		_efgtoa
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           
  6412                           	psect	text20
  6413  002FD2                     __ptext20:
  6414                           	callstack 0
  6415  002FD2                     ___flge:
  6416                           	callstack 24
  6417  002FD2  0E00               	movlw	0
  6418  002FD4  141A               	andwf	___flge@ff1^0,w,c
  6419  002FD6  6E22               	movwf	??___flge^0,c
  6420  002FD8  0E00               	movlw	0
  6421  002FDA  141B               	andwf	(___flge@ff1+1)^0,w,c
  6422  002FDC  6E23               	movwf	(??___flge+1)^0,c
  6423  002FDE  0E80               	movlw	128
  6424  002FE0  141C               	andwf	(___flge@ff1+2)^0,w,c
  6425  002FE2  6E24               	movwf	(??___flge+2)^0,c
  6426  002FE4  0E7F               	movlw	127
  6427  002FE6  141D               	andwf	(___flge@ff1+3)^0,w,c
  6428  002FE8  6E25               	movwf	(??___flge+3)^0,c
  6429  002FEA  5022               	movf	??___flge^0,w,c
  6430  002FEC  1023               	iorwf	(??___flge+1)^0,w,c
  6431  002FEE  1024               	iorwf	(??___flge+2)^0,w,c
  6432  002FF0  1025               	iorwf	(??___flge+3)^0,w,c
  6433  002FF2  A4D8               	btfss	status,2,c
  6434  002FF4  EFFE  F017         	goto	u3901
  6435  002FF8  EF00  F018         	goto	u3900
  6436  002FFC                     u3901:
  6437  002FFC  EF08  F018         	goto	l3759
  6438  003000                     u3900:
  6439  003000  0E00               	movlw	0
  6440  003002  6E1A               	movwf	___flge@ff1^0,c
  6441  003004  0E00               	movlw	0
  6442  003006  6E1B               	movwf	(___flge@ff1+1)^0,c
  6443  003008  0E00               	movlw	0
  6444  00300A  6E1C               	movwf	(___flge@ff1+2)^0,c
  6445  00300C  0E00               	movlw	0
  6446  00300E  6E1D               	movwf	(___flge@ff1+3)^0,c
  6447  003010                     l3759:
  6448  003010  0E00               	movlw	0
  6449  003012  141E               	andwf	___flge@ff2^0,w,c
  6450  003014  6E22               	movwf	??___flge^0,c
  6451  003016  0E00               	movlw	0
  6452  003018  141F               	andwf	(___flge@ff2+1)^0,w,c
  6453  00301A  6E23               	movwf	(??___flge+1)^0,c
  6454  00301C  0E80               	movlw	128
  6455  00301E  1420               	andwf	(___flge@ff2+2)^0,w,c
  6456  003020  6E24               	movwf	(??___flge+2)^0,c
  6457  003022  0E7F               	movlw	127
  6458  003024  1421               	andwf	(___flge@ff2+3)^0,w,c
  6459  003026  6E25               	movwf	(??___flge+3)^0,c
  6460  003028  5022               	movf	??___flge^0,w,c
  6461  00302A  1023               	iorwf	(??___flge+1)^0,w,c
  6462  00302C  1024               	iorwf	(??___flge+2)^0,w,c
  6463  00302E  1025               	iorwf	(??___flge+3)^0,w,c
  6464  003030  A4D8               	btfss	status,2,c
  6465  003032  EF1D  F018         	goto	u3911
  6466  003036  EF1F  F018         	goto	u3910
  6467  00303A                     u3911:
  6468  00303A  EF27  F018         	goto	l3763
  6469  00303E                     u3910:
  6470  00303E  0E00               	movlw	0
  6471  003040  6E1E               	movwf	___flge@ff2^0,c
  6472  003042  0E00               	movlw	0
  6473  003044  6E1F               	movwf	(___flge@ff2+1)^0,c
  6474  003046  0E00               	movlw	0
  6475  003048  6E20               	movwf	(___flge@ff2+2)^0,c
  6476  00304A  0E00               	movlw	0
  6477  00304C  6E21               	movwf	(___flge@ff2+3)^0,c
  6478  00304E                     l3763:
  6479  00304E  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6480  003050  EF2C  F018         	goto	u3921
  6481  003054  EF2E  F018         	goto	u3920
  6482  003058                     u3921:
  6483  003058  EF37  F018         	goto	l3767
  6484  00305C                     u3920:
  6485  00305C  6C1A               	negf	___flge@ff1^0,c
  6486  00305E  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6487  003060  B0D8               	btfsc	status,0,c
  6488  003062  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6489  003064  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6490  003066  B0D8               	btfsc	status,0,c
  6491  003068  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6492  00306A  0E80               	movlw	128
  6493  00306C  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6494  00306E                     l3767:
  6495  00306E  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6496  003070  EF3C  F018         	goto	u3931
  6497  003074  EF3E  F018         	goto	u3930
  6498  003078                     u3931:
  6499  003078  EF47  F018         	goto	l471
  6500  00307C                     u3930:
  6501  00307C  6C1E               	negf	___flge@ff2^0,c
  6502  00307E  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6503  003080  B0D8               	btfsc	status,0,c
  6504  003082  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6505  003084  1E20               	comf	(___flge@ff2+2)^0,f,c
  6506  003086  B0D8               	btfsc	status,0,c
  6507  003088  2A20               	incf	(___flge@ff2+2)^0,f,c
  6508  00308A  0E80               	movlw	128
  6509  00308C  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6510  00308E                     l471:
  6511  00308E  0E00               	movlw	0
  6512  003090  1A1A               	xorwf	___flge@ff1^0,f,c
  6513  003092  0E00               	movlw	0
  6514  003094  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6515  003096  0E00               	movlw	0
  6516  003098  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6517  00309A  0E80               	movlw	128
  6518  00309C  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6519  00309E  0E00               	movlw	0
  6520  0030A0  1A1E               	xorwf	___flge@ff2^0,f,c
  6521  0030A2  0E00               	movlw	0
  6522  0030A4  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6523  0030A6  0E00               	movlw	0
  6524  0030A8  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6525  0030AA  0E80               	movlw	128
  6526  0030AC  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6527  0030AE  501E               	movf	___flge@ff2^0,w,c
  6528  0030B0  5C1A               	subwf	___flge@ff1^0,w,c
  6529  0030B2  501F               	movf	(___flge@ff2+1)^0,w,c
  6530  0030B4  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6531  0030B6  5020               	movf	(___flge@ff2+2)^0,w,c
  6532  0030B8  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6533  0030BA  5021               	movf	(___flge@ff2+3)^0,w,c
  6534  0030BC  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6535  0030BE  B0D8               	btfsc	status,0,c
  6536  0030C0  EF64  F018         	goto	u3941
  6537  0030C4  EF66  F018         	goto	u3940
  6538  0030C8                     u3941:
  6539  0030C8  EF69  F018         	goto	l3773
  6540  0030CC                     u3940:
  6541  0030CC  90D8               	bcf	status,0,c
  6542  0030CE  EF6A  F018         	goto	l476
  6543  0030D2                     l3773:
  6544  0030D2  80D8               	bsf	status,0,c
  6545  0030D4                     l476:
  6546  0030D4  0012               	return		;funcret
  6547  0030D6                     __end_of___flge:
  6548                           	callstack 0
  6549                           
  6550 ;; *************** function ___fleq *****************
  6551 ;; Defined at:
  6552 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;  ff1             4    0[COMRAM] unsigned char 
  6555 ;;  ff2             4    4[COMRAM] unsigned char 
  6556 ;; Auto vars:     Size  Location     Type
  6557 ;;		None
  6558 ;; Return value:  Size  Location     Type
  6559 ;;		None               void
  6560 ;; Registers used:
  6561 ;;		wreg, status,2, status,0
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6567 ;;      Params:         8       0       0       0
  6568 ;;      Locals:         0       0       0       0
  6569 ;;      Temps:          4       0       0       0
  6570 ;;      Totals:        12       0       0       0
  6571 ;;Total ram usage:       12 bytes
  6572 ;; Hardware stack levels used: 1
  6573 ;; Hardware stack levels required when called: 1
  6574 ;; This function calls:
  6575 ;;		Nothing
  6576 ;; This function is called by:
  6577 ;;		_efgtoa
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581                           	psect	text21
  6582  0035AA                     __ptext21:
  6583                           	callstack 0
  6584  0035AA                     ___fleq:
  6585                           	callstack 24
  6586  0035AA  0E00               	movlw	0
  6587  0035AC  1401               	andwf	___fleq@ff1^0,w,c
  6588  0035AE  6E09               	movwf	??___fleq^0,c
  6589  0035B0  0E00               	movlw	0
  6590  0035B2  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6591  0035B4  6E0A               	movwf	(??___fleq+1)^0,c
  6592  0035B6  0E80               	movlw	128
  6593  0035B8  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6594  0035BA  6E0B               	movwf	(??___fleq+2)^0,c
  6595  0035BC  0E7F               	movlw	127
  6596  0035BE  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6597  0035C0  6E0C               	movwf	(??___fleq+3)^0,c
  6598  0035C2  5009               	movf	??___fleq^0,w,c
  6599  0035C4  100A               	iorwf	(??___fleq+1)^0,w,c
  6600  0035C6  100B               	iorwf	(??___fleq+2)^0,w,c
  6601  0035C8  100C               	iorwf	(??___fleq+3)^0,w,c
  6602  0035CA  A4D8               	btfss	status,2,c
  6603  0035CC  EFEA  F01A         	goto	u3871
  6604  0035D0  EFEC  F01A         	goto	u3870
  6605  0035D4                     u3871:
  6606  0035D4  EFF4  F01A         	goto	l3743
  6607  0035D8                     u3870:
  6608  0035D8  0E00               	movlw	0
  6609  0035DA  6E01               	movwf	___fleq@ff1^0,c
  6610  0035DC  0E00               	movlw	0
  6611  0035DE  6E02               	movwf	(___fleq@ff1+1)^0,c
  6612  0035E0  0E00               	movlw	0
  6613  0035E2  6E03               	movwf	(___fleq@ff1+2)^0,c
  6614  0035E4  0E00               	movlw	0
  6615  0035E6  6E04               	movwf	(___fleq@ff1+3)^0,c
  6616  0035E8                     l3743:
  6617  0035E8  0E00               	movlw	0
  6618  0035EA  1405               	andwf	___fleq@ff2^0,w,c
  6619  0035EC  6E09               	movwf	??___fleq^0,c
  6620  0035EE  0E00               	movlw	0
  6621  0035F0  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6622  0035F2  6E0A               	movwf	(??___fleq+1)^0,c
  6623  0035F4  0E80               	movlw	128
  6624  0035F6  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6625  0035F8  6E0B               	movwf	(??___fleq+2)^0,c
  6626  0035FA  0E7F               	movlw	127
  6627  0035FC  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6628  0035FE  6E0C               	movwf	(??___fleq+3)^0,c
  6629  003600  5009               	movf	??___fleq^0,w,c
  6630  003602  100A               	iorwf	(??___fleq+1)^0,w,c
  6631  003604  100B               	iorwf	(??___fleq+2)^0,w,c
  6632  003606  100C               	iorwf	(??___fleq+3)^0,w,c
  6633  003608  A4D8               	btfss	status,2,c
  6634  00360A  EF09  F01B         	goto	u3881
  6635  00360E  EF0B  F01B         	goto	u3880
  6636  003612                     u3881:
  6637  003612  EF13  F01B         	goto	l3747
  6638  003616                     u3880:
  6639  003616  0E00               	movlw	0
  6640  003618  6E05               	movwf	___fleq@ff2^0,c
  6641  00361A  0E00               	movlw	0
  6642  00361C  6E06               	movwf	(___fleq@ff2+1)^0,c
  6643  00361E  0E00               	movlw	0
  6644  003620  6E07               	movwf	(___fleq@ff2+2)^0,c
  6645  003622  0E00               	movlw	0
  6646  003624  6E08               	movwf	(___fleq@ff2+3)^0,c
  6647  003626                     l3747:
  6648  003626  5005               	movf	___fleq@ff2^0,w,c
  6649  003628  1801               	xorwf	___fleq@ff1^0,w,c
  6650  00362A  E10F               	bnz	u3890
  6651  00362C  5006               	movf	(___fleq@ff2+1)^0,w,c
  6652  00362E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6653  003630  E10C               	bnz	u3890
  6654  003632  5007               	movf	(___fleq@ff2+2)^0,w,c
  6655  003634  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6656  003636  E109               	bnz	u3890
  6657  003638  5008               	movf	(___fleq@ff2+3)^0,w,c
  6658  00363A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6659  00363C  B4D8               	btfsc	status,2,c
  6660  00363E  EF23  F01B         	goto	u3891
  6661  003642  EF25  F01B         	goto	u3890
  6662  003646                     u3891:
  6663  003646  EF28  F01B         	goto	l3751
  6664  00364A                     u3890:
  6665  00364A  90D8               	bcf	status,0,c
  6666  00364C  EF29  F01B         	goto	l465
  6667  003650                     l3751:
  6668  003650  80D8               	bsf	status,0,c
  6669  003652                     l465:
  6670  003652  0012               	return		;funcret
  6671  003654                     __end_of___fleq:
  6672                           	callstack 0
  6673                           
  6674 ;; *************** function ___awmod *****************
  6675 ;; Defined at:
  6676 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;  dividend        2    0[COMRAM] int 
  6679 ;;  divisor         2    2[COMRAM] int 
  6680 ;; Auto vars:     Size  Location     Type
  6681 ;;  sign            1    5[COMRAM] unsigned char 
  6682 ;;  counter         1    4[COMRAM] unsigned char 
  6683 ;; Return value:  Size  Location     Type
  6684 ;;                  2    0[COMRAM] int 
  6685 ;; Registers used:
  6686 ;;		wreg, status,2, status,0
  6687 ;; Tracked objects:
  6688 ;;		On entry : 0/0
  6689 ;;		On exit  : 0/0
  6690 ;;		Unchanged: 0/0
  6691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6692 ;;      Params:         4       0       0       0
  6693 ;;      Locals:         2       0       0       0
  6694 ;;      Temps:          0       0       0       0
  6695 ;;      Totals:         6       0       0       0
  6696 ;;Total ram usage:        6 bytes
  6697 ;; Hardware stack levels used: 1
  6698 ;; Hardware stack levels required when called: 1
  6699 ;; This function calls:
  6700 ;;		Nothing
  6701 ;; This function is called by:
  6702 ;;		_efgtoa
  6703 ;; This function uses a non-reentrant model
  6704 ;;
  6705                           
  6706                           	psect	text22
  6707  0034FA                     __ptext22:
  6708                           	callstack 0
  6709  0034FA                     ___awmod:
  6710                           	callstack 24
  6711  0034FA  0E00               	movlw	0
  6712  0034FC  6E06               	movwf	___awmod@sign^0,c
  6713  0034FE  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6714  003500  EF86  F01A         	goto	u3810
  6715  003504  EF84  F01A         	goto	u3811
  6716  003508                     u3811:
  6717  003508  EF8C  F01A         	goto	l3711
  6718  00350C                     u3810:
  6719  00350C  6C01               	negf	___awmod@dividend^0,c
  6720  00350E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6721  003510  B0D8               	btfsc	status,0,c
  6722  003512  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6723  003514  0E01               	movlw	1
  6724  003516  6E06               	movwf	___awmod@sign^0,c
  6725  003518                     l3711:
  6726  003518  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6727  00351A  EF93  F01A         	goto	u3820
  6728  00351E  EF91  F01A         	goto	u3821
  6729  003522                     u3821:
  6730  003522  EF97  F01A         	goto	l3715
  6731  003526                     u3820:
  6732  003526  6C03               	negf	___awmod@divisor^0,c
  6733  003528  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6734  00352A  B0D8               	btfsc	status,0,c
  6735  00352C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6736  00352E                     l3715:
  6737  00352E  5003               	movf	___awmod@divisor^0,w,c
  6738  003530  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6739  003532  B4D8               	btfsc	status,2,c
  6740  003534  EF9E  F01A         	goto	u3831
  6741  003538  EFA0  F01A         	goto	u3830
  6742  00353C                     u3831:
  6743  00353C  EFC4  F01A         	goto	l3731
  6744  003540                     u3830:
  6745  003540  0E01               	movlw	1
  6746  003542  6E05               	movwf	___awmod@counter^0,c
  6747  003544  EFA8  F01A         	goto	l3721
  6748  003548                     l3719:
  6749  003548  90D8               	bcf	status,0,c
  6750  00354A  3603               	rlcf	___awmod@divisor^0,f,c
  6751  00354C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6752  00354E  2A05               	incf	___awmod@counter^0,f,c
  6753  003550                     l3721:
  6754  003550  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6755  003552  EFAD  F01A         	goto	u3841
  6756  003556  EFAF  F01A         	goto	u3840
  6757  00355A                     u3841:
  6758  00355A  EFA4  F01A         	goto	l3719
  6759  00355E                     u3840:
  6760  00355E                     l3723:
  6761  00355E  5003               	movf	___awmod@divisor^0,w,c
  6762  003560  5C01               	subwf	___awmod@dividend^0,w,c
  6763  003562  5004               	movf	(___awmod@divisor+1)^0,w,c
  6764  003564  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6765  003566  A0D8               	btfss	status,0,c
  6766  003568  EFB8  F01A         	goto	u3851
  6767  00356C  EFBA  F01A         	goto	u3850
  6768  003570                     u3851:
  6769  003570  EFBE  F01A         	goto	l3727
  6770  003574                     u3850:
  6771  003574  5003               	movf	___awmod@divisor^0,w,c
  6772  003576  5E01               	subwf	___awmod@dividend^0,f,c
  6773  003578  5004               	movf	(___awmod@divisor+1)^0,w,c
  6774  00357A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6775  00357C                     l3727:
  6776  00357C  90D8               	bcf	status,0,c
  6777  00357E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6778  003580  3203               	rrcf	___awmod@divisor^0,f,c
  6779  003582  2E05               	decfsz	___awmod@counter^0,f,c
  6780  003584  EFAF  F01A         	goto	l3723
  6781  003588                     l3731:
  6782  003588  5006               	movf	___awmod@sign^0,w,c
  6783  00358A  B4D8               	btfsc	status,2,c
  6784  00358C  EFCA  F01A         	goto	u3861
  6785  003590  EFCC  F01A         	goto	u3860
  6786  003594                     u3861:
  6787  003594  EFD0  F01A         	goto	l3735
  6788  003598                     u3860:
  6789  003598  6C01               	negf	___awmod@dividend^0,c
  6790  00359A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6791  00359C  B0D8               	btfsc	status,0,c
  6792  00359E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6793  0035A0                     l3735:
  6794  0035A0  C001  F001         	movff	___awmod@dividend,?___awmod
  6795  0035A4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6796  0035A8  0012               	return		;funcret
  6797  0035AA                     __end_of___awmod:
  6798                           	callstack 0
  6799                           
  6800 ;; *************** function _dtoa *****************
  6801 ;; Defined at:
  6802 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  6803 ;; Parameters:    Size  Location     Type
  6804 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6805 ;;		 -> sprintf@f(11), 
  6806 ;;  d               8   29[COMRAM] long long 
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;  n               8   53[COMRAM] long long 
  6809 ;;  i               2   61[COMRAM] int 
  6810 ;;  s               2   51[COMRAM] int 
  6811 ;;  w               2   49[COMRAM] int 
  6812 ;;  p               2   47[COMRAM] int 
  6813 ;; Return value:  Size  Location     Type
  6814 ;;                  2   27[COMRAM] int 
  6815 ;; Registers used:
  6816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6817 ;; Tracked objects:
  6818 ;;		On entry : 0/0
  6819 ;;		On exit  : 0/0
  6820 ;;		Unchanged: 0/0
  6821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6822 ;;      Params:        10       0       0       0
  6823 ;;      Locals:        18       0       0       0
  6824 ;;      Temps:          8       0       0       0
  6825 ;;      Totals:        36       0       0       0
  6826 ;;Total ram usage:       36 bytes
  6827 ;; Hardware stack levels used: 1
  6828 ;; Hardware stack levels required when called: 5
  6829 ;; This function calls:
  6830 ;;		___aodiv
  6831 ;;		___aomod
  6832 ;;		_abs
  6833 ;;		_pad
  6834 ;; This function is called by:
  6835 ;;		_vfpfcnvrt
  6836 ;; This function uses a non-reentrant model
  6837 ;;
  6838                           
  6839                           	psect	text23
  6840  002002                     __ptext23:
  6841                           	callstack 0
  6842  002002                     _dtoa:
  6843                           	callstack 21
  6844  002002                     
  6845                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6846  002002  C01E  F036         	movff	dtoa@d,dtoa@n
  6847  002006  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  6848  00200A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  6849  00200E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  6850  002012  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  6851  002016  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  6852  00201A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  6853  00201E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  6854  002022                     
  6855                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6856  002022  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  6857  002024  EF16  F010         	goto	u4281
  6858  002028  EF19  F010         	goto	u4280
  6859  00202C                     u4281:
  6860  00202C  0E01               	movlw	1
  6861  00202E  EF1A  F010         	goto	u4290
  6862  002032                     u4280:
  6863  002032  0E00               	movlw	0
  6864  002034                     u4290:
  6865  002034  6E34               	movwf	dtoa@s^0,c
  6866  002036  6A35               	clrf	(dtoa@s+1)^0,c
  6867                           
  6868                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6869  002038  5034               	movf	dtoa@s^0,w,c
  6870  00203A  1035               	iorwf	(dtoa@s+1)^0,w,c
  6871  00203C  B4D8               	btfsc	status,2,c
  6872  00203E  EF23  F010         	goto	u4301
  6873  002042  EF25  F010         	goto	u4300
  6874  002046                     u4301:
  6875  002046  EF35  F010         	goto	l3925
  6876  00204A                     u4300:
  6877  00204A                     
  6878                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6879  00204A  1E3D               	comf	(dtoa@n+7)^0,f,c
  6880  00204C  1E3C               	comf	(dtoa@n+6)^0,f,c
  6881  00204E  1E3B               	comf	(dtoa@n+5)^0,f,c
  6882  002050  1E3A               	comf	(dtoa@n+4)^0,f,c
  6883  002052  1E39               	comf	(dtoa@n+3)^0,f,c
  6884  002054  1E38               	comf	(dtoa@n+2)^0,f,c
  6885  002056  1E37               	comf	(dtoa@n+1)^0,f,c
  6886  002058  6C36               	negf	dtoa@n^0,c
  6887  00205A  0E00               	movlw	0
  6888  00205C  2237               	addwfc	(dtoa@n+1)^0,f,c
  6889  00205E  2238               	addwfc	(dtoa@n+2)^0,f,c
  6890  002060  2239               	addwfc	(dtoa@n+3)^0,f,c
  6891  002062  223A               	addwfc	(dtoa@n+4)^0,f,c
  6892  002064  223B               	addwfc	(dtoa@n+5)^0,f,c
  6893  002066  223C               	addwfc	(dtoa@n+6)^0,f,c
  6894  002068  223D               	addwfc	(dtoa@n+7)^0,f,c
  6895  00206A                     l3925:
  6896                           
  6897                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6898  00206A  BE59               	btfsc	(_prec+1)^0,7,c
  6899  00206C  EF3A  F010         	goto	u4311
  6900  002070  EF3C  F010         	goto	u4310
  6901  002074                     u4311:
  6902  002074  EF3D  F010         	goto	l3929
  6903  002078                     u4310:
  6904  002078                     
  6905                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6906  002078  925A               	bcf	_flags^0,1,c
  6907  00207A                     l3929:
  6908                           
  6909                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6910  00207A  BE59               	btfsc	(_prec+1)^0,7,c
  6911  00207C  EF4A  F010         	goto	u4320
  6912  002080  5059               	movf	(_prec+1)^0,w,c
  6913  002082  E106               	bnz	u4321
  6914  002084  0458               	decf	_prec^0,w,c
  6915  002086  B0D8               	btfsc	status,0,c
  6916  002088  EF48  F010         	goto	u4321
  6917  00208C  EF4A  F010         	goto	u4320
  6918  002090                     u4321:
  6919  002090  EF50  F010         	goto	l934
  6920  002094                     u4320:
  6921  002094  0E00               	movlw	0
  6922  002096  6E31               	movwf	(dtoa@p+1)^0,c
  6923  002098  0E01               	movlw	1
  6924  00209A  6E30               	movwf	dtoa@p^0,c
  6925  00209C  EF54  F010         	goto	l936
  6926  0020A0                     l934:
  6927  0020A0  C058  F030         	movff	_prec,dtoa@p
  6928  0020A4  C059  F031         	movff	_prec+1,dtoa@p+1
  6929  0020A8                     l936:
  6930                           
  6931                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6932  0020A8  C0F1  F032         	movff	_width,dtoa@w
  6933  0020AC  C0F2  F033         	movff	_width+1,dtoa@w+1
  6934  0020B0                     
  6935                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6936  0020B0  5034               	movf	dtoa@s^0,w,c
  6937  0020B2  1035               	iorwf	(dtoa@s+1)^0,w,c
  6938  0020B4  A4D8               	btfss	status,2,c
  6939  0020B6  EF5F  F010         	goto	u4331
  6940  0020BA  EF61  F010         	goto	u4330
  6941  0020BE                     u4331:
  6942  0020BE  EF68  F010         	goto	l3937
  6943  0020C2                     u4330:
  6944  0020C2  A45A               	btfss	_flags^0,2,c
  6945  0020C4  EF66  F010         	goto	u4341
  6946  0020C8  EF68  F010         	goto	u4340
  6947  0020CC                     u4341:
  6948  0020CC  EF6B  F010         	goto	l3939
  6949  0020D0                     u4340:
  6950  0020D0                     l3937:
  6951                           
  6952                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  6953  0020D0  0632               	decf	dtoa@w^0,f,c
  6954  0020D2  A0D8               	btfss	status,0,c
  6955  0020D4  0633               	decf	(dtoa@w+1)^0,f,c
  6956  0020D6                     l3939:
  6957                           
  6958                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6959  0020D6  0E00               	movlw	0
  6960  0020D8  6E3F               	movwf	(dtoa@i+1)^0,c
  6961  0020DA  0E4F               	movlw	79
  6962  0020DC  6E3E               	movwf	dtoa@i^0,c
  6963  0020DE                     
  6964                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6965  0020DE  0E00               	movlw	0
  6966  0020E0  0101               	movlb	1	; () banked
  6967  0020E2  6FB1               	movwf	(_dbuf+79)& (0+255),b
  6968                           
  6969                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6970  0020E4  EFF0  F010         	goto	l3953
  6971  0020E8                     l3943:
  6972                           
  6973                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  6974  0020E8  063E               	decf	dtoa@i^0,f,c
  6975  0020EA  A0D8               	btfss	status,0,c
  6976  0020EC  063F               	decf	(dtoa@i+1)^0,f,c
  6977  0020EE                     
  6978                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6979  0020EE  0E62               	movlw	low _dbuf
  6980  0020F0  243E               	addwf	dtoa@i^0,w,c
  6981  0020F2  6ED9               	movwf	fsr2l,c
  6982  0020F4  0E01               	movlw	high _dbuf
  6983  0020F6  203F               	addwfc	(dtoa@i+1)^0,w,c
  6984  0020F8  6EDA               	movwf	fsr2h,c
  6985  0020FA  C036  F001         	movff	dtoa@n,___aomod@dividend
  6986  0020FE  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6987  002102  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6988  002106  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6989  00210A  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6990  00210E  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6991  002112  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6992  002116  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6993  00211A  0E0A               	movlw	10
  6994  00211C  6E09               	movwf	___aomod@divisor^0,c
  6995  00211E  0E00               	movlw	0
  6996  002120  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6997  002122  0E00               	movlw	0
  6998  002124  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6999  002126  0E00               	movlw	0
  7000  002128  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7001  00212A  0E00               	movlw	0
  7002  00212C  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7003  00212E  0E00               	movlw	0
  7004  002130  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7005  002132  0E00               	movlw	0
  7006  002134  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7007  002136  0E00               	movlw	0
  7008  002138  6E10               	movwf	(___aomod@divisor+7)^0,c
  7009  00213A  EC1A  F015         	call	___aomod	;wreg free
  7010  00213E  C001  F026         	movff	?___aomod,??_dtoa
  7011  002142  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7012  002146  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7013  00214A  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7014  00214E  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7015  002152  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7016  002156  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7017  00215A  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7018  00215E  C026  F013         	movff	??_dtoa,abs@a
  7019  002162  C028  F014         	movff	??_dtoa+2,abs@a+1
  7020  002166  ECDC  F01D         	call	_abs	;wreg free
  7021  00216A  5013               	movf	?_abs^0,w,c
  7022  00216C  0F30               	addlw	48
  7023  00216E  6EDF               	movwf	indf2,c
  7024  002170                     
  7025                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  7026  002170  0630               	decf	dtoa@p^0,f,c
  7027  002172  A0D8               	btfss	status,0,c
  7028  002174  0631               	decf	(dtoa@p+1)^0,f,c
  7029  002176                     
  7030                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  7031  002176  0632               	decf	dtoa@w^0,f,c
  7032  002178  A0D8               	btfss	status,0,c
  7033  00217A  0633               	decf	(dtoa@w+1)^0,f,c
  7034  00217C                     
  7035                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7036  00217C  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7037  002180  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7038  002184  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7039  002188  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7040  00218C  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7041  002190  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7042  002194  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7043  002198  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7044  00219C  0E0A               	movlw	10
  7045  00219E  6E09               	movwf	___aodiv@divisor^0,c
  7046  0021A0  0E00               	movlw	0
  7047  0021A2  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7048  0021A4  0E00               	movlw	0
  7049  0021A6  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7050  0021A8  0E00               	movlw	0
  7051  0021AA  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7052  0021AC  0E00               	movlw	0
  7053  0021AE  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7054  0021B0  0E00               	movlw	0
  7055  0021B2  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7056  0021B4  0E00               	movlw	0
  7057  0021B6  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7058  0021B8  0E00               	movlw	0
  7059  0021BA  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7060  0021BC  EC56  F014         	call	___aodiv	;wreg free
  7061  0021C0  C001  F036         	movff	?___aodiv,dtoa@n
  7062  0021C4  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7063  0021C8  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7064  0021CC  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7065  0021D0  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7066  0021D4  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7067  0021D8  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7068  0021DC  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7069  0021E0                     l3953:
  7070                           
  7071                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7072  0021E0  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7073  0021E2  EFFB  F010         	goto	u4351
  7074  0021E6  503F               	movf	(dtoa@i+1)^0,w,c
  7075  0021E8  E108               	bnz	u4350
  7076  0021EA  043E               	decf	dtoa@i^0,w,c
  7077  0021EC  A0D8               	btfss	status,0,c
  7078  0021EE  EFFB  F010         	goto	u4351
  7079  0021F2  EFFD  F010         	goto	u4350
  7080  0021F6                     u4351:
  7081  0021F6  EF2D  F011         	goto	l3963
  7082  0021FA                     u4350:
  7083  0021FA  5036               	movf	dtoa@n^0,w,c
  7084  0021FC  1037               	iorwf	(dtoa@n+1)^0,w,c
  7085  0021FE  1038               	iorwf	(dtoa@n+2)^0,w,c
  7086  002200  1039               	iorwf	(dtoa@n+3)^0,w,c
  7087  002202  103A               	iorwf	(dtoa@n+4)^0,w,c
  7088  002204  103B               	iorwf	(dtoa@n+5)^0,w,c
  7089  002206  103C               	iorwf	(dtoa@n+6)^0,w,c
  7090  002208  103D               	iorwf	(dtoa@n+7)^0,w,c
  7091  00220A  A4D8               	btfss	status,2,c
  7092  00220C  EF0A  F011         	goto	u4361
  7093  002210  EF0C  F011         	goto	u4360
  7094  002214                     u4361:
  7095  002214  EF74  F010         	goto	l3943
  7096  002218                     u4360:
  7097  002218  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7098  00221A  EF19  F011         	goto	u4370
  7099  00221E  5031               	movf	(dtoa@p+1)^0,w,c
  7100  002220  E106               	bnz	u4371
  7101  002222  0430               	decf	dtoa@p^0,w,c
  7102  002224  B0D8               	btfsc	status,0,c
  7103  002226  EF17  F011         	goto	u4371
  7104  00222A  EF19  F011         	goto	u4370
  7105  00222E                     u4371:
  7106  00222E  EF74  F010         	goto	l3943
  7107  002232                     u4370:
  7108  002232  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7109  002234  EF24  F011         	goto	u4381
  7110  002238  5033               	movf	(dtoa@w+1)^0,w,c
  7111  00223A  E108               	bnz	u4380
  7112  00223C  0432               	decf	dtoa@w^0,w,c
  7113  00223E  A0D8               	btfss	status,0,c
  7114  002240  EF24  F011         	goto	u4381
  7115  002244  EF26  F011         	goto	u4380
  7116  002248                     u4381:
  7117  002248  EF2D  F011         	goto	l3963
  7118  00224C                     u4380:
  7119  00224C  B25A               	btfsc	_flags^0,1,c
  7120  00224E  EF2B  F011         	goto	u4391
  7121  002252  EF2D  F011         	goto	u4390
  7122  002256                     u4391:
  7123  002256  EF74  F010         	goto	l3943
  7124  00225A                     u4390:
  7125  00225A                     l3963:
  7126                           
  7127                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7128  00225A  5034               	movf	dtoa@s^0,w,c
  7129  00225C  1035               	iorwf	(dtoa@s+1)^0,w,c
  7130  00225E  A4D8               	btfss	status,2,c
  7131  002260  EF34  F011         	goto	u4401
  7132  002264  EF36  F011         	goto	u4400
  7133  002268                     u4401:
  7134  002268  EF3D  F011         	goto	l3967
  7135  00226C                     u4400:
  7136  00226C  A45A               	btfss	_flags^0,2,c
  7137  00226E  EF3B  F011         	goto	u4411
  7138  002272  EF3D  F011         	goto	u4410
  7139  002276                     u4411:
  7140  002276  EF5B  F011         	goto	l3977
  7141  00227A                     u4410:
  7142  00227A                     l3967:
  7143                           
  7144                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  7145  00227A  063E               	decf	dtoa@i^0,f,c
  7146  00227C  A0D8               	btfss	status,0,c
  7147  00227E  063F               	decf	(dtoa@i+1)^0,f,c
  7148  002280                     
  7149                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7150  002280  5034               	movf	dtoa@s^0,w,c
  7151  002282  1035               	iorwf	(dtoa@s+1)^0,w,c
  7152  002284  A4D8               	btfss	status,2,c
  7153  002286  EF47  F011         	goto	u4421
  7154  00228A  EF49  F011         	goto	u4420
  7155  00228E                     u4421:
  7156  00228E  EF4F  F011         	goto	l3973
  7157  002292                     u4420:
  7158  002292  0E00               	movlw	0
  7159  002294  6E2F               	movwf	(_dtoa$723+1)^0,c
  7160  002296  0E2B               	movlw	43
  7161  002298  6E2E               	movwf	_dtoa$723^0,c
  7162  00229A  EF53  F011         	goto	l3975
  7163  00229E                     l3973:
  7164  00229E  0E00               	movlw	0
  7165  0022A0  6E2F               	movwf	(_dtoa$723+1)^0,c
  7166  0022A2  0E2D               	movlw	45
  7167  0022A4  6E2E               	movwf	_dtoa$723^0,c
  7168  0022A6                     l3975:
  7169  0022A6  0E62               	movlw	low _dbuf
  7170  0022A8  243E               	addwf	dtoa@i^0,w,c
  7171  0022AA  6ED9               	movwf	fsr2l,c
  7172  0022AC  0E01               	movlw	high _dbuf
  7173  0022AE  203F               	addwfc	(dtoa@i+1)^0,w,c
  7174  0022B0  6EDA               	movwf	fsr2h,c
  7175  0022B2  C02E  FFDF         	movff	_dtoa$723,indf2
  7176  0022B6                     l3977:
  7177                           
  7178                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7179  0022B6  C01C  F011         	movff	dtoa@fp,pad@fp
  7180  0022BA  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7181  0022BE  0E62               	movlw	low _dbuf
  7182  0022C0  243E               	addwf	dtoa@i^0,w,c
  7183  0022C2  6E13               	movwf	pad@buf^0,c
  7184  0022C4  0E01               	movlw	high _dbuf
  7185  0022C6  203F               	addwfc	(dtoa@i+1)^0,w,c
  7186  0022C8  6E14               	movwf	(pad@buf+1)^0,c
  7187  0022CA  C032  F015         	movff	dtoa@w,pad@p
  7188  0022CE  C033  F016         	movff	dtoa@w+1,pad@p+1
  7189  0022D2  EC1C  F01A         	call	_pad	;wreg free
  7190  0022D6  C011  F01C         	movff	?_pad,?_dtoa
  7191  0022DA  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7192  0022DE  0012               	return		;funcret
  7193  0022E0                     __end_of_dtoa:
  7194                           	callstack 0
  7195                           
  7196 ;; *************** function _pad *****************
  7197 ;; Defined at:
  7198 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7201 ;;		 -> sprintf@f(11), 
  7202 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7203 ;;		 -> dbuf(80), 
  7204 ;;  p               2   20[COMRAM] int 
  7205 ;; Auto vars:     Size  Location     Type
  7206 ;;  w               2   25[COMRAM] int 
  7207 ;;  i               2   23[COMRAM] int 
  7208 ;; Return value:  Size  Location     Type
  7209 ;;                  2   16[COMRAM] int 
  7210 ;; Registers used:
  7211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7212 ;; Tracked objects:
  7213 ;;		On entry : 0/0
  7214 ;;		On exit  : 0/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7217 ;;      Params:         6       0       0       0
  7218 ;;      Locals:         4       0       0       0
  7219 ;;      Temps:          1       0       0       0
  7220 ;;      Totals:        11       0       0       0
  7221 ;;Total ram usage:       11 bytes
  7222 ;; Hardware stack levels used: 1
  7223 ;; Hardware stack levels required when called: 4
  7224 ;; This function calls:
  7225 ;;		_fputc
  7226 ;;		_fputs
  7227 ;;		_strlen
  7228 ;; This function is called by:
  7229 ;;		_dtoa
  7230 ;;		_efgtoa
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           
  7234                           	psect	text24
  7235  003438                     __ptext24:
  7236                           	callstack 0
  7237  003438                     _pad:
  7238                           	callstack 21
  7239  003438                     
  7240                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7241  003438  A05A               	btfss	_flags^0,0,c
  7242  00343A  EF21  F01A         	goto	u4031
  7243  00343E  EF23  F01A         	goto	u4030
  7244  003442                     u4031:
  7245  003442  EF2D  F01A         	goto	l3833
  7246  003446                     u4030:
  7247  003446                     
  7248                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7249  003446  C013  F00A         	movff	pad@buf,fputs@s
  7250  00344A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7251  00344E  C011  F00C         	movff	pad@fp,fputs@fp
  7252  003452  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7253  003456  EC98  F01D         	call	_fputs	;wreg free
  7254  00345A                     l3833:
  7255                           
  7256                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7257  00345A  BE16               	btfsc	(pad@p+1)^0,7,c
  7258  00345C  EF32  F01A         	goto	u4041
  7259  003460  EF34  F01A         	goto	u4040
  7260  003464                     u4041:
  7261  003464  EF3A  F01A         	goto	l3837
  7262  003468                     u4040:
  7263  003468  C015  F01A         	movff	pad@p,pad@w
  7264  00346C  C016  F01B         	movff	pad@p+1,pad@w+1
  7265  003470  EF3E  F01A         	goto	l923
  7266  003474                     l3837:
  7267  003474  0E00               	movlw	0
  7268  003476  6E1B               	movwf	(pad@w+1)^0,c
  7269  003478  0E00               	movlw	0
  7270  00347A  6E1A               	movwf	pad@w^0,c
  7271  00347C                     l923:
  7272                           
  7273                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7274  00347C  0E00               	movlw	0
  7275  00347E  6E19               	movwf	(pad@i+1)^0,c
  7276  003480  0E00               	movlw	0
  7277  003482  6E18               	movwf	pad@i^0,c
  7278                           
  7279                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7280  003484  EF50  F01A         	goto	l3843
  7281  003488                     l3839:
  7282                           
  7283                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7284  003488  0E00               	movlw	0
  7285  00348A  6E02               	movwf	(fputc@c+1)^0,c
  7286  00348C  0E20               	movlw	32
  7287  00348E  6E01               	movwf	fputc@c^0,c
  7288  003490  C011  F003         	movff	pad@fp,fputc@fp
  7289  003494  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7290  003498  EC55  F019         	call	_fputc	;wreg free
  7291  00349C                     
  7292                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7293  00349C  4A18               	infsnz	pad@i^0,f,c
  7294  00349E  2A19               	incf	(pad@i+1)^0,f,c
  7295  0034A0                     l3843:
  7296                           
  7297                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7298  0034A0  501A               	movf	pad@w^0,w,c
  7299  0034A2  5C18               	subwf	pad@i^0,w,c
  7300  0034A4  5019               	movf	(pad@i+1)^0,w,c
  7301  0034A6  0A80               	xorlw	128
  7302  0034A8  6E17               	movwf	??_pad^0,c
  7303  0034AA  501B               	movf	(pad@w+1)^0,w,c
  7304  0034AC  0A80               	xorlw	128
  7305  0034AE  5817               	subwfb	??_pad^0,w,c
  7306  0034B0  A0D8               	btfss	status,0,c
  7307  0034B2  EF5D  F01A         	goto	u4051
  7308  0034B6  EF5F  F01A         	goto	u4050
  7309  0034BA                     u4051:
  7310  0034BA  EF44  F01A         	goto	l3839
  7311  0034BE                     u4050:
  7312  0034BE                     
  7313                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7314  0034BE  B05A               	btfsc	_flags^0,0,c
  7315  0034C0  EF64  F01A         	goto	u4061
  7316  0034C4  EF66  F01A         	goto	u4060
  7317  0034C8                     u4061:
  7318  0034C8  EF70  F01A         	goto	l3847
  7319  0034CC                     u4060:
  7320  0034CC                     
  7321                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7322  0034CC  C013  F00A         	movff	pad@buf,fputs@s
  7323  0034D0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7324  0034D4  C011  F00C         	movff	pad@fp,fputs@fp
  7325  0034D8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7326  0034DC  EC98  F01D         	call	_fputs	;wreg free
  7327  0034E0                     l3847:
  7328                           
  7329                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7330  0034E0  C013  F001         	movff	pad@buf,strlen@s
  7331  0034E4  C014  F002         	movff	pad@buf+1,strlen@s+1
  7332  0034E8  EC34  F01E         	call	_strlen	;wreg free
  7333  0034EC  501A               	movf	pad@w^0,w,c
  7334  0034EE  2401               	addwf	?_strlen^0,w,c
  7335  0034F0  6E11               	movwf	?_pad^0,c
  7336  0034F2  501B               	movf	(pad@w+1)^0,w,c
  7337  0034F4  2002               	addwfc	(?_strlen+1)^0,w,c
  7338  0034F6  6E12               	movwf	(?_pad+1)^0,c
  7339  0034F8  0012               	return		;funcret
  7340  0034FA                     __end_of_pad:
  7341                           	callstack 0
  7342                           
  7343 ;; *************** function _strlen *****************
  7344 ;; Defined at:
  7345 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7348 ;;		 -> dbuf(80), 
  7349 ;; Auto vars:     Size  Location     Type
  7350 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7351 ;;		 -> dbuf(80), 
  7352 ;; Return value:  Size  Location     Type
  7353 ;;                  2    0[COMRAM] unsigned int 
  7354 ;; Registers used:
  7355 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7356 ;; Tracked objects:
  7357 ;;		On entry : 0/0
  7358 ;;		On exit  : 0/0
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7361 ;;      Params:         2       0       0       0
  7362 ;;      Locals:         2       0       0       0
  7363 ;;      Temps:          0       0       0       0
  7364 ;;      Totals:         4       0       0       0
  7365 ;;Total ram usage:        4 bytes
  7366 ;; Hardware stack levels used: 1
  7367 ;; Hardware stack levels required when called: 1
  7368 ;; This function calls:
  7369 ;;		Nothing
  7370 ;; This function is called by:
  7371 ;;		_pad
  7372 ;; This function uses a non-reentrant model
  7373 ;;
  7374                           
  7375                           	psect	text25
  7376  003C68                     __ptext25:
  7377                           	callstack 0
  7378  003C68                     _strlen:
  7379                           	callstack 23
  7380  003C68  C001  F003         	movff	strlen@s,strlen@a
  7381  003C6C  C002  F004         	movff	strlen@s+1,strlen@a+1
  7382  003C70  EF3C  F01E         	goto	l3295
  7383  003C74                     l3293:
  7384  003C74  4A01               	infsnz	strlen@s^0,f,c
  7385  003C76  2A02               	incf	(strlen@s+1)^0,f,c
  7386  003C78                     l3295:
  7387  003C78  C001  FFD9         	movff	strlen@s,fsr2l
  7388  003C7C  C002  FFDA         	movff	strlen@s+1,fsr2h
  7389  003C80  50DF               	movf	indf2,w,c
  7390  003C82  A4D8               	btfss	status,2,c
  7391  003C84  EF46  F01E         	goto	u3171
  7392  003C88  EF48  F01E         	goto	u3170
  7393  003C8C                     u3171:
  7394  003C8C  EF3A  F01E         	goto	l3293
  7395  003C90                     u3170:
  7396  003C90  5003               	movf	strlen@a^0,w,c
  7397  003C92  5C01               	subwf	strlen@s^0,w,c
  7398  003C94  6E01               	movwf	?_strlen^0,c
  7399  003C96  5004               	movf	(strlen@a+1)^0,w,c
  7400  003C98  5802               	subwfb	(strlen@s+1)^0,w,c
  7401  003C9A  6E02               	movwf	(?_strlen+1)^0,c
  7402  003C9C  0012               	return		;funcret
  7403  003C9E                     __end_of_strlen:
  7404                           	callstack 0
  7405                           
  7406 ;; *************** function _fputs *****************
  7407 ;; Defined at:
  7408 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  7409 ;; Parameters:    Size  Location     Type
  7410 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7411 ;;		 -> dbuf(80), 
  7412 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7413 ;;		 -> sprintf@f(11), 
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;  i               2   14[COMRAM] int 
  7416 ;;  c               1   13[COMRAM] unsigned char 
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  2    9[COMRAM] int 
  7419 ;; Registers used:
  7420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7426 ;;      Params:         4       0       0       0
  7427 ;;      Locals:         3       0       0       0
  7428 ;;      Temps:          0       0       0       0
  7429 ;;      Totals:         7       0       0       0
  7430 ;;Total ram usage:        7 bytes
  7431 ;; Hardware stack levels used: 1
  7432 ;; Hardware stack levels required when called: 3
  7433 ;; This function calls:
  7434 ;;		_fputc
  7435 ;; This function is called by:
  7436 ;;		_pad
  7437 ;; This function uses a non-reentrant model
  7438 ;;
  7439                           
  7440                           	psect	text26
  7441  003B30                     __ptext26:
  7442                           	callstack 0
  7443  003B30                     _fputs:
  7444                           	callstack 21
  7445  003B30  0E00               	movlw	0
  7446  003B32  6E10               	movwf	(fputs@i+1)^0,c
  7447  003B34  0E00               	movlw	0
  7448  003B36  6E0F               	movwf	fputs@i^0,c
  7449  003B38  EFA9  F01D         	goto	l3289
  7450  003B3C                     l3285:
  7451  003B3C  C00E  F001         	movff	fputs@c,fputc@c
  7452  003B40  6A02               	clrf	(fputc@c+1)^0,c
  7453  003B42  C00C  F003         	movff	fputs@fp,fputc@fp
  7454  003B46  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7455  003B4A  EC55  F019         	call	_fputc	;wreg free
  7456  003B4E  4A0F               	infsnz	fputs@i^0,f,c
  7457  003B50  2A10               	incf	(fputs@i+1)^0,f,c
  7458  003B52                     l3289:
  7459  003B52  500F               	movf	fputs@i^0,w,c
  7460  003B54  240A               	addwf	fputs@s^0,w,c
  7461  003B56  6ED9               	movwf	fsr2l,c
  7462  003B58  5010               	movf	(fputs@i+1)^0,w,c
  7463  003B5A  200B               	addwfc	(fputs@s+1)^0,w,c
  7464  003B5C  6EDA               	movwf	fsr2h,c
  7465  003B5E  50DF               	movf	indf2,w,c
  7466  003B60  6E0E               	movwf	fputs@c^0,c
  7467  003B62  500E               	movf	fputs@c^0,w,c
  7468  003B64  A4D8               	btfss	status,2,c
  7469  003B66  EFB7  F01D         	goto	u3161
  7470  003B6A  EFB9  F01D         	goto	u3160
  7471  003B6E                     u3161:
  7472  003B6E  EF9E  F01D         	goto	l3285
  7473  003B72                     u3160:
  7474  003B72  0012               	return		;funcret
  7475  003B74                     __end_of_fputs:
  7476                           	callstack 0
  7477                           
  7478 ;; *************** function _fputc *****************
  7479 ;; Defined at:
  7480 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  7481 ;; Parameters:    Size  Location     Type
  7482 ;;  c               2    0[COMRAM] int 
  7483 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7484 ;;		 -> sprintf@f(11), 
  7485 ;; Auto vars:     Size  Location     Type
  7486 ;;		None
  7487 ;; Return value:  Size  Location     Type
  7488 ;;                  2    0[COMRAM] int 
  7489 ;; Registers used:
  7490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7491 ;; Tracked objects:
  7492 ;;		On entry : 0/0
  7493 ;;		On exit  : 0/0
  7494 ;;		Unchanged: 0/0
  7495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7496 ;;      Params:         4       0       0       0
  7497 ;;      Locals:         0       0       0       0
  7498 ;;      Temps:          5       0       0       0
  7499 ;;      Totals:         9       0       0       0
  7500 ;;Total ram usage:        9 bytes
  7501 ;; Hardware stack levels used: 1
  7502 ;; Hardware stack levels required when called: 2
  7503 ;; This function calls:
  7504 ;;		_putch
  7505 ;; This function is called by:
  7506 ;;		_pad
  7507 ;;		_vfpfcnvrt
  7508 ;;		_fputs
  7509 ;; This function uses a non-reentrant model
  7510 ;;
  7511                           
  7512                           	psect	text27
  7513  0032AA                     __ptext27:
  7514                           	callstack 0
  7515  0032AA                     _fputc:
  7516                           	callstack 24
  7517  0032AA  5003               	movf	fputc@fp^0,w,c
  7518  0032AC  1004               	iorwf	(fputc@fp+1)^0,w,c
  7519  0032AE  B4D8               	btfsc	status,2,c
  7520  0032B0  EF5C  F019         	goto	u2731
  7521  0032B4  EF5E  F019         	goto	u2730
  7522  0032B8                     u2731:
  7523  0032B8  EF67  F019         	goto	l3071
  7524  0032BC                     u2730:
  7525  0032BC  5003               	movf	fputc@fp^0,w,c
  7526  0032BE  1004               	iorwf	(fputc@fp+1)^0,w,c
  7527  0032C0  A4D8               	btfss	status,2,c
  7528  0032C2  EF65  F019         	goto	u2741
  7529  0032C6  EF67  F019         	goto	u2740
  7530  0032CA                     u2741:
  7531  0032CA  EF6C  F019         	goto	l3073
  7532  0032CE                     u2740:
  7533  0032CE                     l3071:
  7534  0032CE  5001               	movf	fputc@c^0,w,c
  7535  0032D0  EC8B  F01E         	call	_putch
  7536  0032D4  EFB9  F019         	goto	l1112
  7537  0032D8                     l3073:
  7538  0032D8  EE20 F009          	lfsr	2,9
  7539  0032DC  5003               	movf	fputc@fp^0,w,c
  7540  0032DE  26D9               	addwf	fsr2l,f,c
  7541  0032E0  5004               	movf	(fputc@fp+1)^0,w,c
  7542  0032E2  22DA               	addwfc	fsr2h,f,c
  7543  0032E4  50DE               	movf	postinc2,w,c
  7544  0032E6  10DE               	iorwf	postinc2,w,c
  7545  0032E8  B4D8               	btfsc	status,2,c
  7546  0032EA  EF79  F019         	goto	u2751
  7547  0032EE  EF7B  F019         	goto	u2750
  7548  0032F2                     u2751:
  7549  0032F2  EF96  F019         	goto	l3077
  7550  0032F6                     u2750:
  7551  0032F6  EE20 F009          	lfsr	2,9
  7552  0032FA  5003               	movf	fputc@fp^0,w,c
  7553  0032FC  26D9               	addwf	fsr2l,f,c
  7554  0032FE  5004               	movf	(fputc@fp+1)^0,w,c
  7555  003300  22DA               	addwfc	fsr2h,f,c
  7556  003302  EE10 F003          	lfsr	1,3
  7557  003306  5003               	movf	fputc@fp^0,w,c
  7558  003308  26E1               	addwf	fsr1l,f,c
  7559  00330A  5004               	movf	(fputc@fp+1)^0,w,c
  7560  00330C  22E2               	addwfc	fsr1h,f,c
  7561  00330E  50DE               	movf	postinc2,w,c
  7562  003310  5CE6               	subwf	postinc1,w,c
  7563  003312  50E6               	movf	postinc1,w,c
  7564  003314  0A80               	xorlw	128
  7565  003316  6E09               	movwf	(??_fputc+4)^0,c
  7566  003318  50DE               	movf	postinc2,w,c
  7567  00331A  0A80               	xorlw	128
  7568  00331C  5809               	subwfb	(??_fputc+4)^0,w,c
  7569  00331E  B0D8               	btfsc	status,0,c
  7570  003320  EF94  F019         	goto	u2761
  7571  003324  EF96  F019         	goto	u2760
  7572  003328                     u2761:
  7573  003328  EFB9  F019         	goto	l1112
  7574  00332C                     u2760:
  7575  00332C                     l3077:
  7576  00332C  EE20 F003          	lfsr	2,3
  7577  003330  5003               	movf	fputc@fp^0,w,c
  7578  003332  26D9               	addwf	fsr2l,f,c
  7579  003334  5004               	movf	(fputc@fp+1)^0,w,c
  7580  003336  22DA               	addwfc	fsr2h,f,c
  7581  003338  CFDE F005          	movff	postinc2,??_fputc
  7582  00333C  CFDD F006          	movff	postdec2,??_fputc+1
  7583  003340  C003  FFD9         	movff	fputc@fp,fsr2l
  7584  003344  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7585  003348  CFDE F007          	movff	postinc2,??_fputc+2
  7586  00334C  CFDD F008          	movff	postdec2,??_fputc+3
  7587  003350  5005               	movf	??_fputc^0,w,c
  7588  003352  2407               	addwf	(??_fputc+2)^0,w,c
  7589  003354  6ED9               	movwf	fsr2l,c
  7590  003356  5006               	movf	(??_fputc+1)^0,w,c
  7591  003358  2008               	addwfc	(??_fputc+3)^0,w,c
  7592  00335A  6EDA               	movwf	fsr2h,c
  7593  00335C  C001  FFDF         	movff	fputc@c,indf2
  7594  003360  EE20 F003          	lfsr	2,3
  7595  003364  5003               	movf	fputc@fp^0,w,c
  7596  003366  26D9               	addwf	fsr2l,f,c
  7597  003368  5004               	movf	(fputc@fp+1)^0,w,c
  7598  00336A  22DA               	addwfc	fsr2h,f,c
  7599  00336C  2ADE               	incf	postinc2,f,c
  7600  00336E  0E00               	movlw	0
  7601  003370  22DD               	addwfc	postdec2,f,c
  7602  003372                     l1112:
  7603  003372  0012               	return		;funcret
  7604  003374                     __end_of_fputc:
  7605                           	callstack 0
  7606                           
  7607 ;; *************** function _putch *****************
  7608 ;; Defined at:
  7609 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  7610 ;; Parameters:    Size  Location     Type
  7611 ;;  c               1    wreg     unsigned char 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  c               1    0[COMRAM] unsigned char 
  7614 ;; Return value:  Size  Location     Type
  7615 ;;                  1    wreg      void 
  7616 ;; Registers used:
  7617 ;;		wreg
  7618 ;; Tracked objects:
  7619 ;;		On entry : 0/0
  7620 ;;		On exit  : 0/0
  7621 ;;		Unchanged: 0/0
  7622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7623 ;;      Params:         0       0       0       0
  7624 ;;      Locals:         0       0       0       0
  7625 ;;      Temps:          0       0       0       0
  7626 ;;      Totals:         0       0       0       0
  7627 ;;Total ram usage:        0 bytes
  7628 ;; Hardware stack levels used: 1
  7629 ;; Hardware stack levels required when called: 1
  7630 ;; This function calls:
  7631 ;;		Nothing
  7632 ;; This function is called by:
  7633 ;;		_fputc
  7634 ;; This function uses a non-reentrant model
  7635 ;;
  7636                           
  7637                           	psect	text28
  7638  003D16                     __ptext28:
  7639                           	callstack 0
  7640  003D16                     _putch:
  7641                           	callstack 24
  7642  003D16  0012               	return		;funcret
  7643  003D18                     __end_of_putch:
  7644                           	callstack 0
  7645                           
  7646 ;; *************** function _abs *****************
  7647 ;; Defined at:
  7648 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;  a               2   18[COMRAM] int 
  7651 ;; Auto vars:     Size  Location     Type
  7652 ;;		None
  7653 ;; Return value:  Size  Location     Type
  7654 ;;                  2   18[COMRAM] int 
  7655 ;; Registers used:
  7656 ;;		wreg, status,2, status,0
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/0
  7659 ;;		On exit  : 0/0
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7662 ;;      Params:         2       0       0       0
  7663 ;;      Locals:         0       0       0       0
  7664 ;;      Temps:          2       0       0       0
  7665 ;;      Totals:         4       0       0       0
  7666 ;;Total ram usage:        4 bytes
  7667 ;; Hardware stack levels used: 1
  7668 ;; Hardware stack levels required when called: 1
  7669 ;; This function calls:
  7670 ;;		Nothing
  7671 ;; This function is called by:
  7672 ;;		_dtoa
  7673 ;; This function uses a non-reentrant model
  7674 ;;
  7675                           
  7676                           	psect	text29
  7677  003BB8                     __ptext29:
  7678                           	callstack 0
  7679  003BB8                     _abs:
  7680                           	callstack 24
  7681  003BB8  BE14               	btfsc	(abs@a+1)^0,7,c
  7682  003BBA  EFE9  F01D         	goto	u4070
  7683  003BBE  5014               	movf	(abs@a+1)^0,w,c
  7684  003BC0  E106               	bnz	u4071
  7685  003BC2  0413               	decf	abs@a^0,w,c
  7686  003BC4  B0D8               	btfsc	status,0,c
  7687  003BC6  EFE7  F01D         	goto	u4071
  7688  003BCA  EFE9  F01D         	goto	u4070
  7689  003BCE                     u4071:
  7690  003BCE  EFF7  F01D         	goto	l1078
  7691  003BD2                     u4070:
  7692  003BD2  C013  F015         	movff	abs@a,??_abs
  7693  003BD6  C014  F016         	movff	abs@a+1,??_abs+1
  7694  003BDA  1E15               	comf	??_abs^0,f,c
  7695  003BDC  1E16               	comf	(??_abs+1)^0,f,c
  7696  003BDE  4A15               	infsnz	??_abs^0,f,c
  7697  003BE0  2A16               	incf	(??_abs+1)^0,f,c
  7698  003BE2  C015  F013         	movff	??_abs,?_abs
  7699  003BE6  C016  F014         	movff	??_abs+1,?_abs+1
  7700  003BEA  EFFB  F01D         	goto	l1081
  7701  003BEE                     l1078:
  7702  003BEE  C013  F013         	movff	abs@a,?_abs
  7703  003BF2  C014  F014         	movff	abs@a+1,?_abs+1
  7704  003BF6                     l1081:
  7705  003BF6  0012               	return		;funcret
  7706  003BF8                     __end_of_abs:
  7707                           	callstack 0
  7708                           
  7709 ;; *************** function ___aomod *****************
  7710 ;; Defined at:
  7711 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  7712 ;; Parameters:    Size  Location     Type
  7713 ;;  dividend        8    0[COMRAM] long long 
  7714 ;;  divisor         8    8[COMRAM] long long 
  7715 ;; Auto vars:     Size  Location     Type
  7716 ;;  sign            1   17[COMRAM] unsigned char 
  7717 ;;  counter         1   16[COMRAM] unsigned char 
  7718 ;; Return value:  Size  Location     Type
  7719 ;;                  8    0[COMRAM] long long 
  7720 ;; Registers used:
  7721 ;;		wreg, status,2, status,0
  7722 ;; Tracked objects:
  7723 ;;		On entry : 0/0
  7724 ;;		On exit  : 0/0
  7725 ;;		Unchanged: 0/0
  7726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7727 ;;      Params:        16       0       0       0
  7728 ;;      Locals:         2       0       0       0
  7729 ;;      Temps:          0       0       0       0
  7730 ;;      Totals:        18       0       0       0
  7731 ;;Total ram usage:       18 bytes
  7732 ;; Hardware stack levels used: 1
  7733 ;; Hardware stack levels required when called: 1
  7734 ;; This function calls:
  7735 ;;		Nothing
  7736 ;; This function is called by:
  7737 ;;		_dtoa
  7738 ;; This function uses a non-reentrant model
  7739 ;;
  7740                           
  7741                           	psect	text30
  7742  002A34                     __ptext30:
  7743                           	callstack 0
  7744  002A34                     ___aomod:
  7745                           	callstack 24
  7746  002A34  0E00               	movlw	0
  7747  002A36  6E12               	movwf	___aomod@sign^0,c
  7748  002A38  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  7749  002A3A  EF23  F015         	goto	u3270
  7750  002A3E  EF21  F015         	goto	u3271
  7751  002A42                     u3271:
  7752  002A42  EF35  F015         	goto	l3357
  7753  002A46                     u3270:
  7754  002A46  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7755  002A48  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7756  002A4A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7757  002A4C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7758  002A4E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7759  002A50  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7760  002A52  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7761  002A54  6C01               	negf	___aomod@dividend^0,c
  7762  002A56  0E00               	movlw	0
  7763  002A58  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7764  002A5A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7765  002A5C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7766  002A5E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7767  002A60  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7768  002A62  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7769  002A64  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7770  002A66  0E01               	movlw	1
  7771  002A68  6E12               	movwf	___aomod@sign^0,c
  7772  002A6A                     l3357:
  7773  002A6A  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  7774  002A6C  EF3C  F015         	goto	u3280
  7775  002A70  EF3A  F015         	goto	u3281
  7776  002A74                     u3281:
  7777  002A74  EF4C  F015         	goto	l3361
  7778  002A78                     u3280:
  7779  002A78  1E10               	comf	(___aomod@divisor+7)^0,f,c
  7780  002A7A  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  7781  002A7C  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  7782  002A7E  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  7783  002A80  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  7784  002A82  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  7785  002A84  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  7786  002A86  6C09               	negf	___aomod@divisor^0,c
  7787  002A88  0E00               	movlw	0
  7788  002A8A  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  7789  002A8C  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  7790  002A8E  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  7791  002A90  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  7792  002A92  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  7793  002A94  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  7794  002A96  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  7795  002A98                     l3361:
  7796  002A98  5009               	movf	___aomod@divisor^0,w,c
  7797  002A9A  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  7798  002A9C  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  7799  002A9E  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  7800  002AA0  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  7801  002AA2  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  7802  002AA4  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  7803  002AA6  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  7804  002AA8  B4D8               	btfsc	status,2,c
  7805  002AAA  EF59  F015         	goto	u3291
  7806  002AAE  EF5B  F015         	goto	u3290
  7807  002AB2                     u3291:
  7808  002AB2  EFA3  F015         	goto	l3377
  7809  002AB6                     u3290:
  7810  002AB6  0E01               	movlw	1
  7811  002AB8  6E11               	movwf	___aomod@counter^0,c
  7812  002ABA  EF69  F015         	goto	l3367
  7813  002ABE                     l3365:
  7814  002ABE  90D8               	bcf	status,0,c
  7815  002AC0  3609               	rlcf	___aomod@divisor^0,f,c
  7816  002AC2  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  7817  002AC4  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  7818  002AC6  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  7819  002AC8  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  7820  002ACA  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  7821  002ACC  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  7822  002ACE  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  7823  002AD0  2A11               	incf	___aomod@counter^0,f,c
  7824  002AD2                     l3367:
  7825  002AD2  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  7826  002AD4  EF6E  F015         	goto	u3301
  7827  002AD8  EF70  F015         	goto	u3300
  7828  002ADC                     u3301:
  7829  002ADC  EF5F  F015         	goto	l3365
  7830  002AE0                     u3300:
  7831  002AE0                     l3369:
  7832  002AE0  5009               	movf	___aomod@divisor^0,w,c
  7833  002AE2  5C01               	subwf	___aomod@dividend^0,w,c
  7834  002AE4  500A               	movf	(___aomod@divisor+1)^0,w,c
  7835  002AE6  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  7836  002AE8  500B               	movf	(___aomod@divisor+2)^0,w,c
  7837  002AEA  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  7838  002AEC  500C               	movf	(___aomod@divisor+3)^0,w,c
  7839  002AEE  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  7840  002AF0  500D               	movf	(___aomod@divisor+4)^0,w,c
  7841  002AF2  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  7842  002AF4  500E               	movf	(___aomod@divisor+5)^0,w,c
  7843  002AF6  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  7844  002AF8  500F               	movf	(___aomod@divisor+6)^0,w,c
  7845  002AFA  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  7846  002AFC  5010               	movf	(___aomod@divisor+7)^0,w,c
  7847  002AFE  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  7848  002B00  A0D8               	btfss	status,0,c
  7849  002B02  EF85  F015         	goto	u3311
  7850  002B06  EF87  F015         	goto	u3310
  7851  002B0A                     u3311:
  7852  002B0A  EF97  F015         	goto	l3373
  7853  002B0E                     u3310:
  7854  002B0E  5009               	movf	___aomod@divisor^0,w,c
  7855  002B10  5E01               	subwf	___aomod@dividend^0,f,c
  7856  002B12  500A               	movf	(___aomod@divisor+1)^0,w,c
  7857  002B14  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  7858  002B16  500B               	movf	(___aomod@divisor+2)^0,w,c
  7859  002B18  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  7860  002B1A  500C               	movf	(___aomod@divisor+3)^0,w,c
  7861  002B1C  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  7862  002B1E  500D               	movf	(___aomod@divisor+4)^0,w,c
  7863  002B20  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  7864  002B22  500E               	movf	(___aomod@divisor+5)^0,w,c
  7865  002B24  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  7866  002B26  500F               	movf	(___aomod@divisor+6)^0,w,c
  7867  002B28  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  7868  002B2A  5010               	movf	(___aomod@divisor+7)^0,w,c
  7869  002B2C  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  7870  002B2E                     l3373:
  7871  002B2E  90D8               	bcf	status,0,c
  7872  002B30  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  7873  002B32  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  7874  002B34  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  7875  002B36  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  7876  002B38  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  7877  002B3A  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  7878  002B3C  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  7879  002B3E  3209               	rrcf	___aomod@divisor^0,f,c
  7880  002B40  2E11               	decfsz	___aomod@counter^0,f,c
  7881  002B42  EF70  F015         	goto	l3369
  7882  002B46                     l3377:
  7883  002B46  5012               	movf	___aomod@sign^0,w,c
  7884  002B48  B4D8               	btfsc	status,2,c
  7885  002B4A  EFA9  F015         	goto	u3321
  7886  002B4E  EFAB  F015         	goto	u3320
  7887  002B52                     u3321:
  7888  002B52  EFBB  F015         	goto	l3381
  7889  002B56                     u3320:
  7890  002B56  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7891  002B58  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7892  002B5A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7893  002B5C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7894  002B5E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7895  002B60  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7896  002B62  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7897  002B64  6C01               	negf	___aomod@dividend^0,c
  7898  002B66  0E00               	movlw	0
  7899  002B68  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7900  002B6A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7901  002B6C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7902  002B6E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7903  002B70  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7904  002B72  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7905  002B74  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7906  002B76                     l3381:
  7907  002B76  C001  F001         	movff	___aomod@dividend,?___aomod
  7908  002B7A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  7909  002B7E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  7910  002B82  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  7911  002B86  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  7912  002B8A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  7913  002B8E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  7914  002B92  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  7915  002B96  0012               	return		;funcret
  7916  002B98                     __end_of___aomod:
  7917                           	callstack 0
  7918                           
  7919 ;; *************** function ___aodiv *****************
  7920 ;; Defined at:
  7921 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  7922 ;; Parameters:    Size  Location     Type
  7923 ;;  dividend        8    0[COMRAM] long long 
  7924 ;;  divisor         8    8[COMRAM] long long 
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;  quotient        8   18[COMRAM] long long 
  7927 ;;  sign            1   17[COMRAM] unsigned char 
  7928 ;;  counter         1   16[COMRAM] unsigned char 
  7929 ;; Return value:  Size  Location     Type
  7930 ;;                  8    0[COMRAM] long long 
  7931 ;; Registers used:
  7932 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7933 ;; Tracked objects:
  7934 ;;		On entry : 0/0
  7935 ;;		On exit  : 0/0
  7936 ;;		Unchanged: 0/0
  7937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7938 ;;      Params:        16       0       0       0
  7939 ;;      Locals:        10       0       0       0
  7940 ;;      Temps:          0       0       0       0
  7941 ;;      Totals:        26       0       0       0
  7942 ;;Total ram usage:       26 bytes
  7943 ;; Hardware stack levels used: 1
  7944 ;; Hardware stack levels required when called: 1
  7945 ;; This function calls:
  7946 ;;		Nothing
  7947 ;; This function is called by:
  7948 ;;		_dtoa
  7949 ;; This function uses a non-reentrant model
  7950 ;;
  7951                           
  7952                           	psect	text31
  7953  0028AC                     __ptext31:
  7954                           	callstack 0
  7955  0028AC                     ___aodiv:
  7956                           	callstack 24
  7957  0028AC  0E00               	movlw	0
  7958  0028AE  6E12               	movwf	___aodiv@sign^0,c
  7959  0028B0  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  7960  0028B2  EF5F  F014         	goto	u3200
  7961  0028B6  EF5D  F014         	goto	u3201
  7962  0028BA                     u3201:
  7963  0028BA  EF71  F014         	goto	l3313
  7964  0028BE                     u3200:
  7965  0028BE  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  7966  0028C0  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  7967  0028C2  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  7968  0028C4  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  7969  0028C6  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  7970  0028C8  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  7971  0028CA  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  7972  0028CC  6C09               	negf	___aodiv@divisor^0,c
  7973  0028CE  0E00               	movlw	0
  7974  0028D0  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  7975  0028D2  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  7976  0028D4  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  7977  0028D6  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  7978  0028D8  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  7979  0028DA  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  7980  0028DC  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  7981  0028DE  0E01               	movlw	1
  7982  0028E0  6E12               	movwf	___aodiv@sign^0,c
  7983  0028E2                     l3313:
  7984  0028E2  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  7985  0028E4  EF78  F014         	goto	u3210
  7986  0028E8  EF76  F014         	goto	u3211
  7987  0028EC                     u3211:
  7988  0028EC  EF8A  F014         	goto	l3319
  7989  0028F0                     u3210:
  7990  0028F0  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  7991  0028F2  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  7992  0028F4  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  7993  0028F6  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  7994  0028F8  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  7995  0028FA  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  7996  0028FC  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  7997  0028FE  6C01               	negf	___aodiv@dividend^0,c
  7998  002900  0E00               	movlw	0
  7999  002902  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8000  002904  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8001  002906  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8002  002908  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8003  00290A  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8004  00290C  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8005  00290E  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8006  002910  0E01               	movlw	1
  8007  002912  1A12               	xorwf	___aodiv@sign^0,f,c
  8008  002914                     l3319:
  8009  002914  EE20  F013         	lfsr	2,___aodiv@quotient
  8010  002918  0E07               	movlw	7
  8011  00291A                     u3221:
  8012  00291A  6ADE               	clrf	postinc2,c
  8013  00291C  06E8               	decf	wreg,f,c
  8014  00291E  E2FD               	bc	u3221
  8015  002920  5009               	movf	___aodiv@divisor^0,w,c
  8016  002922  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8017  002924  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8018  002926  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8019  002928  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8020  00292A  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8021  00292C  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8022  00292E  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8023  002930  B4D8               	btfsc	status,2,c
  8024  002932  EF9D  F014         	goto	u3231
  8025  002936  EF9F  F014         	goto	u3230
  8026  00293A                     u3231:
  8027  00293A  EFF1  F014         	goto	l3341
  8028  00293E                     u3230:
  8029  00293E  0E01               	movlw	1
  8030  002940  6E11               	movwf	___aodiv@counter^0,c
  8031  002942  EFAD  F014         	goto	l3327
  8032  002946                     l3325:
  8033  002946  90D8               	bcf	status,0,c
  8034  002948  3609               	rlcf	___aodiv@divisor^0,f,c
  8035  00294A  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8036  00294C  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8037  00294E  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8038  002950  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8039  002952  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8040  002954  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8041  002956  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8042  002958  2A11               	incf	___aodiv@counter^0,f,c
  8043  00295A                     l3327:
  8044  00295A  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8045  00295C  EFB2  F014         	goto	u3241
  8046  002960  EFB4  F014         	goto	u3240
  8047  002964                     u3241:
  8048  002964  EFA3  F014         	goto	l3325
  8049  002968                     u3240:
  8050  002968                     l3329:
  8051  002968  90D8               	bcf	status,0,c
  8052  00296A  3613               	rlcf	___aodiv@quotient^0,f,c
  8053  00296C  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8054  00296E  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8055  002970  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8056  002972  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8057  002974  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8058  002976  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8059  002978  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8060  00297A  5009               	movf	___aodiv@divisor^0,w,c
  8061  00297C  5C01               	subwf	___aodiv@dividend^0,w,c
  8062  00297E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8063  002980  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8064  002982  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8065  002984  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8066  002986  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8067  002988  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8068  00298A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8069  00298C  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8070  00298E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8071  002990  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8072  002992  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8073  002994  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8074  002996  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8075  002998  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8076  00299A  A0D8               	btfss	status,0,c
  8077  00299C  EFD2  F014         	goto	u3251
  8078  0029A0  EFD4  F014         	goto	u3250
  8079  0029A4                     u3251:
  8080  0029A4  EFE5  F014         	goto	l3337
  8081  0029A8                     u3250:
  8082  0029A8  5009               	movf	___aodiv@divisor^0,w,c
  8083  0029AA  5E01               	subwf	___aodiv@dividend^0,f,c
  8084  0029AC  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8085  0029AE  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8086  0029B0  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8087  0029B2  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8088  0029B4  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8089  0029B6  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8090  0029B8  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8091  0029BA  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8092  0029BC  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8093  0029BE  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8094  0029C0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8095  0029C2  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8096  0029C4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8097  0029C6  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8098  0029C8  8013               	bsf	___aodiv@quotient^0,0,c
  8099  0029CA                     l3337:
  8100  0029CA  90D8               	bcf	status,0,c
  8101  0029CC  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8102  0029CE  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8103  0029D0  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8104  0029D2  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8105  0029D4  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8106  0029D6  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8107  0029D8  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8108  0029DA  3209               	rrcf	___aodiv@divisor^0,f,c
  8109  0029DC  2E11               	decfsz	___aodiv@counter^0,f,c
  8110  0029DE  EFB4  F014         	goto	l3329
  8111  0029E2                     l3341:
  8112  0029E2  5012               	movf	___aodiv@sign^0,w,c
  8113  0029E4  B4D8               	btfsc	status,2,c
  8114  0029E6  EFF7  F014         	goto	u3261
  8115  0029EA  EFF9  F014         	goto	u3260
  8116  0029EE                     u3261:
  8117  0029EE  EF09  F015         	goto	l3345
  8118  0029F2                     u3260:
  8119  0029F2  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8120  0029F4  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8121  0029F6  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8122  0029F8  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8123  0029FA  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8124  0029FC  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8125  0029FE  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8126  002A00  6C13               	negf	___aodiv@quotient^0,c
  8127  002A02  0E00               	movlw	0
  8128  002A04  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8129  002A06  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8130  002A08  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8131  002A0A  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8132  002A0C  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8133  002A0E  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8134  002A10  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8135  002A12                     l3345:
  8136  002A12  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8137  002A16  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8138  002A1A  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8139  002A1E  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8140  002A22  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8141  002A26  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8142  002A2A  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8143  002A2E  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8144  002A32  0012               	return		;funcret
  8145  002A34                     __end_of___aodiv:
  8146                           	callstack 0
  8147                           
  8148 ;; *************** function _lcd_goto *****************
  8149 ;; Defined at:
  8150 ;;		line 124 in file "display.c"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;  pos             1    wreg     unsigned char 
  8153 ;; Auto vars:     Size  Location     Type
  8154 ;;  pos             1    1[COMRAM] unsigned char 
  8155 ;; Return value:  Size  Location     Type
  8156 ;;                  1    wreg      void 
  8157 ;; Registers used:
  8158 ;;		wreg, status,2, status,0, cstack
  8159 ;; Tracked objects:
  8160 ;;		On entry : 0/0
  8161 ;;		On exit  : 0/0
  8162 ;;		Unchanged: 0/0
  8163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8164 ;;      Params:         0       0       0       0
  8165 ;;      Locals:         1       0       0       0
  8166 ;;      Temps:          0       0       0       0
  8167 ;;      Totals:         1       0       0       0
  8168 ;;Total ram usage:        1 bytes
  8169 ;; Hardware stack levels used: 1
  8170 ;; Hardware stack levels required when called: 2
  8171 ;; This function calls:
  8172 ;;		_lcd_write
  8173 ;; This function is called by:
  8174 ;;		_print_threshold
  8175 ;;		_print_time_velocity
  8176 ;;		_main
  8177 ;; This function uses a non-reentrant model
  8178 ;;
  8179                           
  8180                           	psect	text32
  8181  003CF4                     __ptext32:
  8182                           	callstack 0
  8183  003CF4                     _lcd_goto:
  8184                           	callstack 27
  8185                           
  8186                           ;incstack = 0
  8187                           ;lcd_goto@pos stored from wreg
  8188  003CF4  6E02               	movwf	lcd_goto@pos^0,c
  8189  003CF6                     
  8190                           ;display.c: 124: void lcd_goto(unsigned char pos);display.c: 125: {;display.c: 126:  LCD
      +                          _RS_flag = 0;
  8191  003CF6  0E00               	movlw	0
  8192  003CF8  6E5D               	movwf	(_LCD_RS_flag+1)^0,c	;volatile
  8193  003CFA  0E00               	movlw	0
  8194  003CFC  6E5C               	movwf	_LCD_RS_flag^0,c	;volatile
  8195  003CFE                     
  8196                           ;display.c: 127:  lcd_write(0x80+pos);
  8197  003CFE  5002               	movf	lcd_goto@pos^0,w,c
  8198  003D00  0F80               	addlw	128
  8199  003D02  EC2A  F01B         	call	_lcd_write
  8200  003D06  0012               	return		;funcret
  8201  003D08                     __end_of_lcd_goto:
  8202                           	callstack 0
  8203                           
  8204 ;; *************** function _lcd_init *****************
  8205 ;; Defined at:
  8206 ;;		line 134 in file "display.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;		None
  8209 ;; Auto vars:     Size  Location     Type
  8210 ;;		None
  8211 ;; Return value:  Size  Location     Type
  8212 ;;                  1    wreg      void 
  8213 ;; Registers used:
  8214 ;;		wreg, status,2, status,0, cstack
  8215 ;; Tracked objects:
  8216 ;;		On entry : 0/0
  8217 ;;		On exit  : 0/0
  8218 ;;		Unchanged: 0/0
  8219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8220 ;;      Params:         0       0       0       0
  8221 ;;      Locals:         0       0       0       0
  8222 ;;      Temps:          2       0       0       0
  8223 ;;      Totals:         2       0       0       0
  8224 ;;Total ram usage:        2 bytes
  8225 ;; Hardware stack levels used: 1
  8226 ;; Hardware stack levels required when called: 2
  8227 ;; This function calls:
  8228 ;;		_lcd_write
  8229 ;; This function is called by:
  8230 ;;		_main
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234                           	psect	text33
  8235  002DC2                     __ptext33:
  8236                           	callstack 0
  8237  002DC2                     _lcd_init:
  8238                           	callstack 28
  8239  002DC2  0E0F               	movlw	15
  8240  002DC4  168B               	andwf	139,f,c	;volatile
  8241  002DC6                     
  8242                           ;display.c: 137:     LCD_RS_flag = 0;
  8243  002DC6  0E00               	movlw	0
  8244  002DC8  6E5D               	movwf	(_LCD_RS_flag+1)^0,c	;volatile
  8245  002DCA  0E00               	movlw	0
  8246  002DCC  6E5C               	movwf	_LCD_RS_flag^0,c	;volatile
  8247  002DCE                     
  8248                           ;display.c: 138:  _delay((unsigned long)((60)*(16000000/4000.0)));
  8249  002DCE  0E02               	movlw	2
  8250  002DD0  6E03               	movwf	(??_lcd_init+1)^0,c
  8251  002DD2  0E38               	movlw	56
  8252  002DD4  6E02               	movwf	??_lcd_init^0,c
  8253  002DD6  0EAD               	movlw	173
  8254  002DD8                     u5497:
  8255  002DD8  2EE8               	decfsz	wreg,f,c
  8256  002DDA  D7FE               	bra	u5497
  8257  002DDC  2E02               	decfsz	??_lcd_init^0,f,c
  8258  002DDE  D7FC               	bra	u5497
  8259  002DE0  2E03               	decfsz	(??_lcd_init+1)^0,f,c
  8260  002DE2  D7FA               	bra	u5497
  8261  002DE4  F000               	nop	
  8262  002DE6                     
  8263                           ;display.c: 140:  LATC = 0x03;
  8264  002DE6  0E03               	movlw	3
  8265  002DE8  6E8B               	movwf	139,c	;volatile
  8266  002DEA                     
  8267                           ;display.c: 141:  { _delay((unsigned long)((2)*(16000000/4000000.0))); LATC |= 0x10; _de
      +                          lay((unsigned long)((2)*(16000000/4000000.0))); LATC = LATC & 0x0F; _delay((unsigned lon
      +                          g)((2)*(16000000/4000000.0))); };
  8268  002DEA  D000               	nop2		;2 cycle nop
  8269  002DEC  D000               	nop2		;2 cycle nop
  8270  002DEE  D000               	nop2		;2 cycle nop
  8271  002DF0  D000               	nop2		;2 cycle nop
  8272  002DF2  888B               	bsf	139,4,c	;volatile
  8273  002DF4  D000               	nop2		;2 cycle nop
  8274  002DF6  D000               	nop2		;2 cycle nop
  8275  002DF8  D000               	nop2		;2 cycle nop
  8276  002DFA  D000               	nop2		;2 cycle nop
  8277  002DFC  508B               	movf	139,w,c	;volatile
  8278  002DFE  0B0F               	andlw	15
  8279  002E00  6E8B               	movwf	139,c	;volatile
  8280  002E02  D000               	nop2		;2 cycle nop
  8281  002E04  D000               	nop2		;2 cycle nop
  8282  002E06  D000               	nop2		;2 cycle nop
  8283  002E08  D000               	nop2		;2 cycle nop
  8284                           
  8285                           ;display.c: 142:  _delay((unsigned long)((10)*(16000000/4000.0)));
  8286  002E0A  0E34               	movlw	52
  8287  002E0C  6E02               	movwf	??_lcd_init^0,c
  8288  002E0E  0EF2               	movlw	242
  8289  002E10                     u5507:
  8290  002E10  2EE8               	decfsz	wreg,f,c
  8291  002E12  D7FE               	bra	u5507
  8292  002E14  2E02               	decfsz	??_lcd_init^0,f,c
  8293  002E16  D7FC               	bra	u5507
  8294  002E18                     
  8295                           ;display.c: 144:  { _delay((unsigned long)((2)*(16000000/4000000.0))); LATC |= 0x10; _de
      +                          lay((unsigned long)((2)*(16000000/4000000.0))); LATC = LATC & 0x0F; _delay((unsigned lon
      +                          g)((2)*(16000000/4000000.0))); };
  8296  002E18  D000               	nop2		;2 cycle nop
  8297  002E1A  D000               	nop2		;2 cycle nop
  8298  002E1C  D000               	nop2		;2 cycle nop
  8299  002E1E  D000               	nop2		;2 cycle nop
  8300  002E20  888B               	bsf	139,4,c	;volatile
  8301  002E22  D000               	nop2		;2 cycle nop
  8302  002E24  D000               	nop2		;2 cycle nop
  8303  002E26  D000               	nop2		;2 cycle nop
  8304  002E28  D000               	nop2		;2 cycle nop
  8305  002E2A  508B               	movf	139,w,c	;volatile
  8306  002E2C  0B0F               	andlw	15
  8307  002E2E  6E8B               	movwf	139,c	;volatile
  8308  002E30  D000               	nop2		;2 cycle nop
  8309  002E32  D000               	nop2		;2 cycle nop
  8310  002E34  D000               	nop2		;2 cycle nop
  8311  002E36  D000               	nop2		;2 cycle nop
  8312  002E38                     
  8313                           ;display.c: 145:     _delay((unsigned long)((50)*(16000000/4000000.0)));
  8314  002E38  0E42               	movlw	66
  8315  002E3A                     u5517:
  8316  002E3A  2EE8               	decfsz	wreg,f,c
  8317  002E3C  D7FE               	bra	u5517
  8318  002E3E  D000               	nop2	
  8319  002E40                     
  8320                           ;display.c: 147:  { _delay((unsigned long)((2)*(16000000/4000000.0))); LATC |= 0x10; _de
      +                          lay((unsigned long)((2)*(16000000/4000000.0))); LATC = LATC & 0x0F; _delay((unsigned lon
      +                          g)((2)*(16000000/4000000.0))); };
  8321  002E40  D000               	nop2		;2 cycle nop
  8322  002E42  D000               	nop2		;2 cycle nop
  8323  002E44  D000               	nop2		;2 cycle nop
  8324  002E46  D000               	nop2		;2 cycle nop
  8325  002E48  888B               	bsf	139,4,c	;volatile
  8326  002E4A  D000               	nop2		;2 cycle nop
  8327  002E4C  D000               	nop2		;2 cycle nop
  8328  002E4E  D000               	nop2		;2 cycle nop
  8329  002E50  D000               	nop2		;2 cycle nop
  8330  002E52  508B               	movf	139,w,c	;volatile
  8331  002E54  0B0F               	andlw	15
  8332  002E56  6E8B               	movwf	139,c	;volatile
  8333  002E58  D000               	nop2		;2 cycle nop
  8334  002E5A  D000               	nop2		;2 cycle nop
  8335  002E5C  D000               	nop2		;2 cycle nop
  8336  002E5E  D000               	nop2		;2 cycle nop
  8337                           
  8338                           ;display.c: 148:  _delay((unsigned long)((50)*(16000000/4000000.0)));
  8339  002E60  0E42               	movlw	66
  8340  002E62                     u5527:
  8341  002E62  2EE8               	decfsz	wreg,f,c
  8342  002E64  D7FE               	bra	u5527
  8343  002E66  D000               	nop2	
  8344  002E68                     
  8345                           ;display.c: 150:  LATC = 0x2;
  8346  002E68  0E02               	movlw	2
  8347  002E6A  6E8B               	movwf	139,c	;volatile
  8348  002E6C                     
  8349                           ;display.c: 151:  { _delay((unsigned long)((2)*(16000000/4000000.0))); LATC |= 0x10; _de
      +                          lay((unsigned long)((2)*(16000000/4000000.0))); LATC = LATC & 0x0F; _delay((unsigned lon
      +                          g)((2)*(16000000/4000000.0))); };
  8350  002E6C  D000               	nop2		;2 cycle nop
  8351  002E6E  D000               	nop2		;2 cycle nop
  8352  002E70  D000               	nop2		;2 cycle nop
  8353  002E72  D000               	nop2		;2 cycle nop
  8354  002E74  888B               	bsf	139,4,c	;volatile
  8355  002E76  D000               	nop2		;2 cycle nop
  8356  002E78  D000               	nop2		;2 cycle nop
  8357  002E7A  D000               	nop2		;2 cycle nop
  8358  002E7C  D000               	nop2		;2 cycle nop
  8359  002E7E  508B               	movf	139,w,c	;volatile
  8360  002E80  0B0F               	andlw	15
  8361  002E82  6E8B               	movwf	139,c	;volatile
  8362  002E84  D000               	nop2		;2 cycle nop
  8363  002E86  D000               	nop2		;2 cycle nop
  8364  002E88  D000               	nop2		;2 cycle nop
  8365  002E8A  D000               	nop2		;2 cycle nop
  8366  002E8C                     
  8367                           ;display.c: 152:     _delay((unsigned long)((50)*(16000000/4000000.0)));
  8368  002E8C  0E42               	movlw	66
  8369  002E8E                     u5537:
  8370  002E8E  2EE8               	decfsz	wreg,f,c
  8371  002E90  D7FE               	bra	u5537
  8372  002E92  D000               	nop2	
  8373  002E94                     
  8374                           ;display.c: 154:  lcd_write(0x29);
  8375  002E94  0E29               	movlw	41
  8376  002E96  EC2A  F01B         	call	_lcd_write
  8377  002E9A                     
  8378                           ;display.c: 156:  lcd_write(0x1D);
  8379  002E9A  0E1D               	movlw	29
  8380  002E9C  EC2A  F01B         	call	_lcd_write
  8381  002EA0                     
  8382                           ;display.c: 157:     lcd_write(0x79);
  8383  002EA0  0E79               	movlw	121
  8384  002EA2  EC2A  F01B         	call	_lcd_write
  8385  002EA6                     
  8386                           ;display.c: 158:     lcd_write(0x50);
  8387  002EA6  0E50               	movlw	80
  8388  002EA8  EC2A  F01B         	call	_lcd_write
  8389  002EAC                     
  8390                           ;display.c: 159:     lcd_write(0x6C);
  8391  002EAC  0E6C               	movlw	108
  8392  002EAE  EC2A  F01B         	call	_lcd_write
  8393  002EB2                     
  8394                           ;display.c: 161:  lcd_write(0x28);
  8395  002EB2  0E28               	movlw	40
  8396  002EB4  EC2A  F01B         	call	_lcd_write
  8397  002EB8                     
  8398                           ;display.c: 162:  lcd_write(0x0E);
  8399  002EB8  0E0E               	movlw	14
  8400  002EBA  EC2A  F01B         	call	_lcd_write
  8401  002EBE                     
  8402                           ;display.c: 163:  lcd_write(0x01);
  8403  002EBE  0E01               	movlw	1
  8404  002EC0  EC2A  F01B         	call	_lcd_write
  8405  002EC4                     
  8406                           ;display.c: 164:  lcd_write(0x06);
  8407  002EC4  0E06               	movlw	6
  8408  002EC6  EC2A  F01B         	call	_lcd_write
  8409  002ECA  0012               	return		;funcret
  8410  002ECC                     __end_of_lcd_init:
  8411                           	callstack 0
  8412                           
  8413 ;; *************** function _calibrate *****************
  8414 ;; Defined at:
  8415 ;;		line 112 in file "main.c"
  8416 ;; Parameters:    Size  Location     Type
  8417 ;;		None
  8418 ;; Auto vars:     Size  Location     Type
  8419 ;;  i               2   16[COMRAM] int 
  8420 ;;  i               2   14[COMRAM] int 
  8421 ;;  sum             2   18[COMRAM] int 
  8422 ;; Return value:  Size  Location     Type
  8423 ;;                  1    wreg      void 
  8424 ;; Registers used:
  8425 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8426 ;; Tracked objects:
  8427 ;;		On entry : 0/0
  8428 ;;		On exit  : 0/0
  8429 ;;		Unchanged: 0/0
  8430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8431 ;;      Params:         0       0       0       0
  8432 ;;      Locals:         6       0       0       0
  8433 ;;      Temps:          2       0       0       0
  8434 ;;      Totals:         8       0       0       0
  8435 ;;Total ram usage:        8 bytes
  8436 ;; Hardware stack levels used: 1
  8437 ;; Hardware stack levels required when called: 3
  8438 ;; This function calls:
  8439 ;;		___awdiv
  8440 ;;		_change_position
  8441 ;;		_lcd_clear
  8442 ;;		_lcd_puts
  8443 ;;		_read_adc
  8444 ;; This function is called by:
  8445 ;;		_main
  8446 ;; This function uses a non-reentrant model
  8447 ;;
  8448                           
  8449                           	psect	text34
  8450  002B98                     __ptext34:
  8451                           	callstack 0
  8452  002B98                     _calibrate:
  8453                           	callstack 27
  8454  002B98                     
  8455                           ;main.c: 114:         sum += read_adc();
  8456  002B98  0E11               	movlw	17
  8457  002B9A  6E83               	movwf	131,c	;volatile
  8458  002B9C                     
  8459                           ;main.c: 115:     }
  8460  002B9C  0E22               	movlw	low STR_1
  8461  002B9E  6E02               	movwf	lcd_puts@s^0,c
  8462  002BA0  0E03               	movlw	high STR_1
  8463  002BA2  6E03               	movwf	(lcd_puts@s+1)^0,c
  8464  002BA4  EC72  F01C         	call	_lcd_puts	;wreg free
  8465  002BA8                     
  8466                           ;main.c: 116: 
  8467  002BA8  0E00               	movlw	0
  8468  002BAA  6E14               	movwf	(calibrate@sum+1)^0,c
  8469  002BAC  0E00               	movlw	0
  8470  002BAE  6E13               	movwf	calibrate@sum^0,c
  8471  002BB0                     
  8472                           ;main.c: 118: 
  8473  002BB0  0E00               	movlw	0
  8474  002BB2  6E02               	movwf	(change_position@position+1)^0,c
  8475  002BB4  0E00               	movlw	0
  8476  002BB6  6E01               	movwf	change_position@position^0,c
  8477  002BB8  EC5F  F01E         	call	_change_position	;wreg free
  8478  002BBC                     
  8479                           ;main.c: 120:     _delay((unsigned long)((100000)*(128000/4000.0)));
  8480  002BBC  0E00               	movlw	0
  8481  002BBE  6E10               	movwf	(calibrate@i+1)^0,c
  8482  002BC0  0E00               	movlw	0
  8483  002BC2  6E0F               	movwf	calibrate@i^0,c
  8484  002BC4                     l4593:
  8485                           
  8486                           ;main.c: 122:     PORTD = 0x00;
  8487  002BC4  ECBA  F01D         	call	_read_adc	;wreg free
  8488  002BC8  5009               	movf	?_read_adc^0,w,c
  8489  002BCA  2613               	addwf	calibrate@sum^0,f,c
  8490  002BCC  500A               	movf	(?_read_adc+1)^0,w,c
  8491  002BCE  2214               	addwfc	(calibrate@sum+1)^0,f,c
  8492  002BD0                     
  8493                           ;main.c: 123:     lcd_clear();
  8494  002BD0  4A0F               	infsnz	calibrate@i^0,f,c
  8495  002BD2  2A10               	incf	(calibrate@i+1)^0,f,c
  8496  002BD4  BE10               	btfsc	(calibrate@i+1)^0,7,c
  8497  002BD6  EFF6  F015         	goto	u5291
  8498  002BDA  5010               	movf	(calibrate@i+1)^0,w,c
  8499  002BDC  E109               	bnz	u5290
  8500  002BDE  0E14               	movlw	20
  8501  002BE0  5C0F               	subwf	calibrate@i^0,w,c
  8502  002BE2  A0D8               	btfss	status,0,c
  8503  002BE4  EFF6  F015         	goto	u5291
  8504  002BE8  EFF8  F015         	goto	u5290
  8505  002BEC                     u5291:
  8506  002BEC  EFE2  F015         	goto	l4593
  8507  002BF0                     u5290:
  8508  002BF0                     
  8509                           ;main.c: 125:     return;
  8510  002BF0  C013  F001         	movff	calibrate@sum,___awdiv@dividend
  8511  002BF4  C014  F002         	movff	calibrate@sum+1,___awdiv@dividend+1
  8512  002BF8  0E00               	movlw	0
  8513  002BFA  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8514  002BFC  0E15               	movlw	21
  8515  002BFE  6E03               	movwf	___awdiv@divisor^0,c
  8516  002C00  ECBA  F019         	call	___awdiv	;wreg free
  8517  002C04  C001  F0F9         	movff	?___awdiv,_threshold_front
  8518  002C08  C002  F0FA         	movff	?___awdiv+1,_threshold_front+1
  8519  002C0C                     
  8520                           ;main.c: 126: }
  8521  002C0C  0E00               	movlw	0
  8522  002C0E  6E14               	movwf	(calibrate@sum+1)^0,c
  8523  002C10  0E00               	movlw	0
  8524  002C12  6E13               	movwf	calibrate@sum^0,c
  8525  002C14                     
  8526                           ;main.c: 127: 
  8527  002C14  0E00               	movlw	0
  8528  002C16  6E02               	movwf	(change_position@position+1)^0,c
  8529  002C18  0E01               	movlw	1
  8530  002C1A  6E01               	movwf	change_position@position^0,c
  8531  002C1C  EC5F  F01E         	call	_change_position	;wreg free
  8532                           
  8533                           ;main.c: 129: void debug_print() {
  8534  002C20  0E00               	movlw	0
  8535  002C22  6E12               	movwf	(calibrate@i_106+1)^0,c
  8536  002C24  0E00               	movlw	0
  8537  002C26  6E11               	movwf	calibrate@i_106^0,c
  8538  002C28                     l4609:
  8539                           
  8540                           ;main.c: 131:     change_position(0);
  8541  002C28  ECBA  F01D         	call	_read_adc	;wreg free
  8542  002C2C  5009               	movf	?_read_adc^0,w,c
  8543  002C2E  2613               	addwf	calibrate@sum^0,f,c
  8544  002C30  500A               	movf	(?_read_adc+1)^0,w,c
  8545  002C32  2214               	addwfc	(calibrate@sum+1)^0,f,c
  8546  002C34                     
  8547                           ;main.c: 132: 
  8548  002C34  4A11               	infsnz	calibrate@i_106^0,f,c
  8549  002C36  2A12               	incf	(calibrate@i_106+1)^0,f,c
  8550  002C38  BE12               	btfsc	(calibrate@i_106+1)^0,7,c
  8551  002C3A  EF28  F016         	goto	u5301
  8552  002C3E  5012               	movf	(calibrate@i_106+1)^0,w,c
  8553  002C40  E109               	bnz	u5300
  8554  002C42  0E14               	movlw	20
  8555  002C44  5C11               	subwf	calibrate@i_106^0,w,c
  8556  002C46  A0D8               	btfss	status,0,c
  8557  002C48  EF28  F016         	goto	u5301
  8558  002C4C  EF2A  F016         	goto	u5300
  8559  002C50                     u5301:
  8560  002C50  EF14  F016         	goto	l4609
  8561  002C54                     u5300:
  8562  002C54                     
  8563                           ;main.c: 134: 
  8564  002C54  C013  F001         	movff	calibrate@sum,___awdiv@dividend
  8565  002C58  C014  F002         	movff	calibrate@sum+1,___awdiv@dividend+1
  8566  002C5C  0E00               	movlw	0
  8567  002C5E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8568  002C60  0E15               	movlw	21
  8569  002C62  6E03               	movwf	___awdiv@divisor^0,c
  8570  002C64  ECBA  F019         	call	___awdiv	;wreg free
  8571  002C68  C001  F0F7         	movff	?___awdiv,_threshold_back
  8572  002C6C  C002  F0F8         	movff	?___awdiv+1,_threshold_back+1
  8573  002C70                     
  8574                           ;main.c: 137:         int front = read_adc();
  8575  002C70  0E11               	movlw	17
  8576  002C72  6E0E               	movwf	(??_calibrate+1)^0,c
  8577  002C74  0E3C               	movlw	60
  8578  002C76  6E0D               	movwf	??_calibrate^0,c
  8579  002C78  0ECB               	movlw	203
  8580  002C7A                     u5547:
  8581  002C7A  2EE8               	decfsz	wreg,f,c
  8582  002C7C  D7FE               	bra	u5547
  8583  002C7E  2E0D               	decfsz	??_calibrate^0,f,c
  8584  002C80  D7FC               	bra	u5547
  8585  002C82  2E0E               	decfsz	(??_calibrate+1)^0,f,c
  8586  002C84  D7FA               	bra	u5547
  8587  002C86  F000               	nop	
  8588  002C88                     
  8589                           ;main.c: 138:         sprintf(message, "%d", front);
  8590  002C88  0E11               	movlw	17
  8591  002C8A  6E0E               	movwf	(??_calibrate+1)^0,c
  8592  002C8C  0E3C               	movlw	60
  8593  002C8E  6E0D               	movwf	??_calibrate^0,c
  8594  002C90  0ECB               	movlw	203
  8595  002C92                     u5557:
  8596  002C92  2EE8               	decfsz	wreg,f,c
  8597  002C94  D7FE               	bra	u5557
  8598  002C96  2E0D               	decfsz	??_calibrate^0,f,c
  8599  002C98  D7FC               	bra	u5557
  8600  002C9A  2E0E               	decfsz	(??_calibrate+1)^0,f,c
  8601  002C9C  D7FA               	bra	u5557
  8602  002C9E  F000               	nop	
  8603  002CA0                     
  8604                           ;main.c: 139: 
  8605  002CA0  0E00               	movlw	0
  8606  002CA2  6E83               	movwf	131,c	;volatile
  8607  002CA4                     
  8608                           ;main.c: 140:         lcd_clear();
  8609  002CA4  EC4F  F01E         	call	_lcd_clear	;wreg free
  8610  002CA8                     
  8611                           ;main.c: 141:         lcd_puts(message);
  8612  002CA8  0E01               	movlw	low STR_2
  8613  002CAA  6E02               	movwf	lcd_puts@s^0,c
  8614  002CAC  0E03               	movlw	high STR_2
  8615  002CAE  6E03               	movwf	(lcd_puts@s+1)^0,c
  8616  002CB0  EC72  F01C         	call	_lcd_puts	;wreg free
  8617  002CB4  0012               	return		;funcret
  8618  002CB6                     __end_of_calibrate:
  8619                           	callstack 0
  8620                           
  8621 ;; *************** function _read_adc *****************
  8622 ;; Defined at:
  8623 ;;		line 75 in file "main.c"
  8624 ;; Parameters:    Size  Location     Type
  8625 ;;		None
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;  result          2   10[COMRAM] int 
  8628 ;; Return value:  Size  Location     Type
  8629 ;;                  2    8[COMRAM] int 
  8630 ;; Registers used:
  8631 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8632 ;; Tracked objects:
  8633 ;;		On entry : 0/0
  8634 ;;		On exit  : 0/0
  8635 ;;		Unchanged: 0/0
  8636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8637 ;;      Params:         2       0       0       0
  8638 ;;      Locals:         2       0       0       0
  8639 ;;      Temps:          0       0       0       0
  8640 ;;      Totals:         4       0       0       0
  8641 ;;Total ram usage:        4 bytes
  8642 ;; Hardware stack levels used: 1
  8643 ;; Hardware stack levels required when called: 2
  8644 ;; This function calls:
  8645 ;;		___awdiv
  8646 ;; This function is called by:
  8647 ;;		_calibrate
  8648 ;;		_main
  8649 ;;		_debug_print
  8650 ;; This function uses a non-reentrant model
  8651 ;;
  8652                           
  8653                           	psect	text35
  8654  003B74                     __ptext35:
  8655                           	callstack 0
  8656  003B74                     _read_adc:
  8657                           	callstack 28
  8658  003B74                     
  8659                           ;main.c: 78: 
  8660  003B74  50C2               	movf	194,w,c	;volatile
  8661  003B76  0902               	iorlw	2
  8662  003B78  6EC2               	movwf	194,c	;volatile
  8663  003B7A                     l4437:
  8664                           
  8665                           ;main.c: 83: 
  8666  003B7A  B2C2               	btfsc	194,1,c	;volatile
  8667  003B7C  EFC2  F01D         	goto	u5081
  8668  003B80  EFC4  F01D         	goto	u5080
  8669  003B84                     u5081:
  8670  003B84  EFBD  F01D         	goto	l4437
  8671  003B88                     u5080:
  8672  003B88                     
  8673                           ;main.c: 87: 
  8674  003B88  50C4               	movf	196,w,c	;volatile
  8675  003B8A  0D04               	mullw	4
  8676  003B8C  CFF3 F00B          	movff	prodl,read_adc@result
  8677  003B90  CFF4 F00C          	movff	prodh,read_adc@result+1
  8678  003B94                     
  8679                           ;main.c: 88: 
  8680  003B94  CFC3 F001          	movff	4035,___awdiv@dividend	;volatile
  8681  003B98  6A02               	clrf	(___awdiv@dividend+1)^0,c
  8682  003B9A  0E00               	movlw	0
  8683  003B9C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8684  003B9E  0E40               	movlw	64
  8685  003BA0  6E03               	movwf	___awdiv@divisor^0,c
  8686  003BA2  ECBA  F019         	call	___awdiv	;wreg free
  8687  003BA6  5001               	movf	?___awdiv^0,w,c
  8688  003BA8  260B               	addwf	read_adc@result^0,f,c
  8689  003BAA  5002               	movf	(?___awdiv+1)^0,w,c
  8690  003BAC  220C               	addwfc	(read_adc@result+1)^0,f,c
  8691  003BAE                     
  8692                           ;main.c: 89:         ADCON0 = 0b00001101;
  8693  003BAE  C00B  F009         	movff	read_adc@result,?_read_adc
  8694  003BB2  C00C  F00A         	movff	read_adc@result+1,?_read_adc+1
  8695  003BB6  0012               	return		;funcret
  8696  003BB8                     __end_of_read_adc:
  8697                           	callstack 0
  8698                           
  8699 ;; *************** function ___awdiv *****************
  8700 ;; Defined at:
  8701 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8702 ;; Parameters:    Size  Location     Type
  8703 ;;  dividend        2    0[COMRAM] int 
  8704 ;;  divisor         2    2[COMRAM] int 
  8705 ;; Auto vars:     Size  Location     Type
  8706 ;;  quotient        2    6[COMRAM] int 
  8707 ;;  sign            1    5[COMRAM] unsigned char 
  8708 ;;  counter         1    4[COMRAM] unsigned char 
  8709 ;; Return value:  Size  Location     Type
  8710 ;;                  2    0[COMRAM] int 
  8711 ;; Registers used:
  8712 ;;		wreg, status,2, status,0
  8713 ;; Tracked objects:
  8714 ;;		On entry : 0/0
  8715 ;;		On exit  : 0/0
  8716 ;;		Unchanged: 0/0
  8717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8718 ;;      Params:         4       0       0       0
  8719 ;;      Locals:         4       0       0       0
  8720 ;;      Temps:          0       0       0       0
  8721 ;;      Totals:         8       0       0       0
  8722 ;;Total ram usage:        8 bytes
  8723 ;; Hardware stack levels used: 1
  8724 ;; Hardware stack levels required when called: 1
  8725 ;; This function calls:
  8726 ;;		Nothing
  8727 ;; This function is called by:
  8728 ;;		_read_adc
  8729 ;;		_calibrate
  8730 ;;		_efgtoa
  8731 ;; This function uses a non-reentrant model
  8732 ;;
  8733                           
  8734                           	psect	text36
  8735  003374                     __ptext36:
  8736                           	callstack 0
  8737  003374                     ___awdiv:
  8738                           	callstack 28
  8739  003374  0E00               	movlw	0
  8740  003376  6E06               	movwf	___awdiv@sign^0,c
  8741  003378  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  8742  00337A  EFC3  F019         	goto	u3750
  8743  00337E  EFC1  F019         	goto	u3751
  8744  003382                     u3751:
  8745  003382  EFC9  F019         	goto	l3667
  8746  003386                     u3750:
  8747  003386  6C03               	negf	___awdiv@divisor^0,c
  8748  003388  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  8749  00338A  B0D8               	btfsc	status,0,c
  8750  00338C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  8751  00338E  0E01               	movlw	1
  8752  003390  6E06               	movwf	___awdiv@sign^0,c
  8753  003392                     l3667:
  8754  003392  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  8755  003394  EFD0  F019         	goto	u3760
  8756  003398  EFCE  F019         	goto	u3761
  8757  00339C                     u3761:
  8758  00339C  EFD6  F019         	goto	l3673
  8759  0033A0                     u3760:
  8760  0033A0  6C01               	negf	___awdiv@dividend^0,c
  8761  0033A2  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  8762  0033A4  B0D8               	btfsc	status,0,c
  8763  0033A6  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  8764  0033A8  0E01               	movlw	1
  8765  0033AA  1A06               	xorwf	___awdiv@sign^0,f,c
  8766  0033AC                     l3673:
  8767  0033AC  0E00               	movlw	0
  8768  0033AE  6E08               	movwf	(___awdiv@quotient+1)^0,c
  8769  0033B0  0E00               	movlw	0
  8770  0033B2  6E07               	movwf	___awdiv@quotient^0,c
  8771  0033B4  5003               	movf	___awdiv@divisor^0,w,c
  8772  0033B6  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  8773  0033B8  B4D8               	btfsc	status,2,c
  8774  0033BA  EFE1  F019         	goto	u3771
  8775  0033BE  EFE3  F019         	goto	u3770
  8776  0033C2                     u3771:
  8777  0033C2  EF0B  F01A         	goto	l3695
  8778  0033C6                     u3770:
  8779  0033C6  0E01               	movlw	1
  8780  0033C8  6E05               	movwf	___awdiv@counter^0,c
  8781  0033CA  EFEB  F019         	goto	l3681
  8782  0033CE                     l3679:
  8783  0033CE  90D8               	bcf	status,0,c
  8784  0033D0  3603               	rlcf	___awdiv@divisor^0,f,c
  8785  0033D2  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  8786  0033D4  2A05               	incf	___awdiv@counter^0,f,c
  8787  0033D6                     l3681:
  8788  0033D6  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  8789  0033D8  EFF0  F019         	goto	u3781
  8790  0033DC  EFF2  F019         	goto	u3780
  8791  0033E0                     u3781:
  8792  0033E0  EFE7  F019         	goto	l3679
  8793  0033E4                     u3780:
  8794  0033E4                     l3683:
  8795  0033E4  90D8               	bcf	status,0,c
  8796  0033E6  3607               	rlcf	___awdiv@quotient^0,f,c
  8797  0033E8  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  8798  0033EA  5003               	movf	___awdiv@divisor^0,w,c
  8799  0033EC  5C01               	subwf	___awdiv@dividend^0,w,c
  8800  0033EE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8801  0033F0  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  8802  0033F2  A0D8               	btfss	status,0,c
  8803  0033F4  EFFE  F019         	goto	u3791
  8804  0033F8  EF00  F01A         	goto	u3790
  8805  0033FC                     u3791:
  8806  0033FC  EF05  F01A         	goto	l3691
  8807  003400                     u3790:
  8808  003400  5003               	movf	___awdiv@divisor^0,w,c
  8809  003402  5E01               	subwf	___awdiv@dividend^0,f,c
  8810  003404  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8811  003406  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  8812  003408  8007               	bsf	___awdiv@quotient^0,0,c
  8813  00340A                     l3691:
  8814  00340A  90D8               	bcf	status,0,c
  8815  00340C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  8816  00340E  3203               	rrcf	___awdiv@divisor^0,f,c
  8817  003410  2E05               	decfsz	___awdiv@counter^0,f,c
  8818  003412  EFF2  F019         	goto	l3683
  8819  003416                     l3695:
  8820  003416  5006               	movf	___awdiv@sign^0,w,c
  8821  003418  B4D8               	btfsc	status,2,c
  8822  00341A  EF11  F01A         	goto	u3801
  8823  00341E  EF13  F01A         	goto	u3800
  8824  003422                     u3801:
  8825  003422  EF17  F01A         	goto	l3699
  8826  003426                     u3800:
  8827  003426  6C07               	negf	___awdiv@quotient^0,c
  8828  003428  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  8829  00342A  B0D8               	btfsc	status,0,c
  8830  00342C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8831  00342E                     l3699:
  8832  00342E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8833  003432  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8834  003436  0012               	return		;funcret
  8835  003438                     __end_of___awdiv:
  8836                           	callstack 0
  8837                           
  8838 ;; *************** function _lcd_puts *****************
  8839 ;; Defined at:
  8840 ;;		line 90 in file "display.c"
  8841 ;; Parameters:    Size  Location     Type
  8842 ;;  s               2    1[COMRAM] PTR const unsigned char 
  8843 ;;		 -> STR_10(10), STR_9(16), STR_8(10), print_time_velocity@message_bc(20), 
  8844 ;;		 -> print_time_velocity@message_fr(20), print_threshold@message_bc(20), print_threshold@message_fr(20), debug_print@
      +message(10), 
  8845 ;;		 -> STR_2(17), STR_1(15), 
  8846 ;; Auto vars:     Size  Location     Type
  8847 ;;		None
  8848 ;; Return value:  Size  Location     Type
  8849 ;;                  1    wreg      void 
  8850 ;; Registers used:
  8851 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8852 ;; Tracked objects:
  8853 ;;		On entry : 0/0
  8854 ;;		On exit  : 0/0
  8855 ;;		Unchanged: 0/0
  8856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8857 ;;      Params:         2       0       0       0
  8858 ;;      Locals:         0       0       0       0
  8859 ;;      Temps:          0       0       0       0
  8860 ;;      Totals:         2       0       0       0
  8861 ;;Total ram usage:        2 bytes
  8862 ;; Hardware stack levels used: 1
  8863 ;; Hardware stack levels required when called: 2
  8864 ;; This function calls:
  8865 ;;		_lcd_write
  8866 ;; This function is called by:
  8867 ;;		_calibrate
  8868 ;;		_print_threshold
  8869 ;;		_print_time_velocity
  8870 ;;		_main
  8871 ;;		_debug_print
  8872 ;; This function uses a non-reentrant model
  8873 ;;
  8874                           
  8875                           	psect	text37
  8876  0038E4                     __ptext37:
  8877                           	callstack 0
  8878  0038E4                     _lcd_puts:
  8879                           	callstack 27
  8880  0038E4                     
  8881                           ;display.c: 90: void lcd_puts(const char * s);display.c: 91: {;display.c: 92:  LCD_RS_fl
      +                          ag = 1;
  8882  0038E4  0E00               	movlw	0
  8883  0038E6  6E5D               	movwf	(_LCD_RS_flag+1)^0,c	;volatile
  8884  0038E8  0E01               	movlw	1
  8885  0038EA  6E5C               	movwf	_LCD_RS_flag^0,c	;volatile
  8886                           
  8887                           ;display.c: 93:  while(*s){
  8888  0038EC  EF8C  F01C         	goto	l4461
  8889  0038F0                     l4457:
  8890                           
  8891                           ;display.c: 94:   lcd_write(*s++);
  8892  0038F0  C002  FFF6         	movff	lcd_puts@s,tblptrl
  8893  0038F4  C003  FFF7         	movff	lcd_puts@s+1,tblptrh
  8894  0038F8  6AF8               	clrf	tblptru,c
  8895  0038FA  0E02               	movlw	(high __ramtop+-1)
  8896  0038FC  64F7               	cpfsgt	tblptrh,c
  8897  0038FE  D003               	bra	u5107
  8898  003900  0008               	tblrd		*
  8899  003902  50F5               	movf	tablat,w,c
  8900  003904  D005               	bra	u5100
  8901  003906                     u5107:
  8902  003906  CFF6 FFE1          	movff	tblptrl,fsr1l
  8903  00390A  CFF7 FFE2          	movff	tblptrh,fsr1h
  8904  00390E  50E7               	movf	indf1,w,c
  8905  003910                     u5100:
  8906  003910  EC2A  F01B         	call	_lcd_write
  8907  003914  4A02               	infsnz	lcd_puts@s^0,f,c
  8908  003916  2A03               	incf	(lcd_puts@s+1)^0,f,c
  8909  003918                     l4461:
  8910                           
  8911                           ;display.c: 93:  while(*s){
  8912  003918  C002  FFF6         	movff	lcd_puts@s,tblptrl
  8913  00391C  C003  FFF7         	movff	lcd_puts@s+1,tblptrh
  8914  003920  6AF8               	clrf	tblptru,c
  8915  003922  0E02               	movlw	(high __ramtop+-1)
  8916  003924  64F7               	cpfsgt	tblptrh,c
  8917  003926  D003               	bra	u5117
  8918  003928  0008               	tblrd		*
  8919  00392A  50F5               	movf	tablat,w,c
  8920  00392C  D005               	bra	u5110
  8921  00392E                     u5117:
  8922  00392E  CFF6 FFE1          	movff	tblptrl,fsr1l
  8923  003932  CFF7 FFE2          	movff	tblptrh,fsr1h
  8924  003936  50E7               	movf	indf1,w,c
  8925  003938                     u5110:
  8926  003938  0900               	iorlw	0
  8927  00393A  A4D8               	btfss	status,2,c
  8928  00393C  EFA2  F01C         	goto	u5121
  8929  003940  EFA4  F01C         	goto	u5120
  8930  003944                     u5121:
  8931  003944  EF78  F01C         	goto	l4457
  8932  003948                     u5120:
  8933  003948  0012               	return		;funcret
  8934  00394A                     __end_of_lcd_puts:
  8935                           	callstack 0
  8936                           
  8937 ;; *************** function _lcd_clear *****************
  8938 ;; Defined at:
  8939 ;;		line 69 in file "display.c"
  8940 ;; Parameters:    Size  Location     Type
  8941 ;;		None
  8942 ;; Auto vars:     Size  Location     Type
  8943 ;;		None
  8944 ;; Return value:  Size  Location     Type
  8945 ;;                  1    wreg      void 
  8946 ;; Registers used:
  8947 ;;		wreg, status,2, status,0, cstack
  8948 ;; Tracked objects:
  8949 ;;		On entry : 0/0
  8950 ;;		On exit  : 0/0
  8951 ;;		Unchanged: 0/0
  8952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8953 ;;      Params:         0       0       0       0
  8954 ;;      Locals:         0       0       0       0
  8955 ;;      Temps:          1       0       0       0
  8956 ;;      Totals:         1       0       0       0
  8957 ;;Total ram usage:        1 bytes
  8958 ;; Hardware stack levels used: 1
  8959 ;; Hardware stack levels required when called: 2
  8960 ;; This function calls:
  8961 ;;		_lcd_write
  8962 ;; This function is called by:
  8963 ;;		_calibrate
  8964 ;;		_print_threshold
  8965 ;;		_print_time_velocity
  8966 ;;		_main
  8967 ;;		_debug_print
  8968 ;; This function uses a non-reentrant model
  8969 ;;
  8970                           
  8971                           	psect	text38
  8972  003C9E                     __ptext38:
  8973                           	callstack 0
  8974  003C9E                     _lcd_clear:
  8975                           	callstack 27
  8976  003C9E                     
  8977                           ;display.c: 71:  LCD_RS_flag = 0;
  8978  003C9E  0E00               	movlw	0
  8979  003CA0  6E5D               	movwf	(_LCD_RS_flag+1)^0,c	;volatile
  8980  003CA2  0E00               	movlw	0
  8981  003CA4  6E5C               	movwf	_LCD_RS_flag^0,c	;volatile
  8982  003CA6                     
  8983                           ;display.c: 72:  lcd_write(0x1);
  8984  003CA6  0E01               	movlw	1
  8985  003CA8  EC2A  F01B         	call	_lcd_write
  8986  003CAC                     
  8987                           ;display.c: 73:  _delay((unsigned long)((2)*(16000000/4000.0)));
  8988  003CAC  0E0B               	movlw	11
  8989  003CAE  6E02               	movwf	??_lcd_clear^0,c
  8990  003CB0  0E62               	movlw	98
  8991  003CB2                     u5567:
  8992  003CB2  2EE8               	decfsz	wreg,f,c
  8993  003CB4  D7FE               	bra	u5567
  8994  003CB6  2E02               	decfsz	??_lcd_clear^0,f,c
  8995  003CB8  D7FC               	bra	u5567
  8996  003CBA  D000               	nop2	
  8997  003CBC  0012               	return		;funcret
  8998  003CBE                     __end_of_lcd_clear:
  8999                           	callstack 0
  9000                           
  9001 ;; *************** function _lcd_write *****************
  9002 ;; Defined at:
  9003 ;;		line 37 in file "display.c"
  9004 ;; Parameters:    Size  Location     Type
  9005 ;;  c               1    wreg     unsigned char 
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;  c               1    0[COMRAM] unsigned char 
  9008 ;; Return value:  Size  Location     Type
  9009 ;;                  1    wreg      void 
  9010 ;; Registers used:
  9011 ;;		wreg, status,2, status,0
  9012 ;; Tracked objects:
  9013 ;;		On entry : 0/0
  9014 ;;		On exit  : 0/0
  9015 ;;		Unchanged: 0/0
  9016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9017 ;;      Params:         0       0       0       0
  9018 ;;      Locals:         1       0       0       0
  9019 ;;      Temps:          0       0       0       0
  9020 ;;      Totals:         1       0       0       0
  9021 ;;Total ram usage:        1 bytes
  9022 ;; Hardware stack levels used: 1
  9023 ;; Hardware stack levels required when called: 1
  9024 ;; This function calls:
  9025 ;;		Nothing
  9026 ;; This function is called by:
  9027 ;;		_lcd_clear
  9028 ;;		_lcd_puts
  9029 ;;		_lcd_goto
  9030 ;;		_lcd_init
  9031 ;;		_lcd_putchar
  9032 ;;		_lcd_puthex
  9033 ;;		_lcd_init33
  9034 ;; This function uses a non-reentrant model
  9035 ;;
  9036                           
  9037                           	psect	text39
  9038  003654                     __ptext39:
  9039                           	callstack 0
  9040  003654                     _lcd_write:
  9041                           	callstack 27
  9042                           
  9043                           ;incstack = 0
  9044                           ;lcd_write@c stored from wreg
  9045  003654  6E01               	movwf	lcd_write@c^0,c
  9046  003656                     
  9047                           ;display.c: 37: void lcd_write(unsigned char c);display.c: 38: {;display.c: 41:     LATC
      +                           = c >> 4;
  9048  003656  3801               	swapf	lcd_write@c^0,w,c
  9049  003658  0B0F               	andlw	15
  9050  00365A  6E8B               	movwf	139,c	;volatile
  9051                           
  9052                           ;display.c: 45:     {if(LCD_RS_flag == 1) LATC |= 0x40; else LATC &= 0x0F;};
  9053  00365C  045C               	decf	_LCD_RS_flag^0,w,c	;volatile
  9054  00365E  105D               	iorwf	(_LCD_RS_flag+1)^0,w,c	;volatile
  9055  003660  A4D8               	btfss	status,2,c
  9056  003662  EF35  F01B         	goto	u5051
  9057  003666  EF37  F01B         	goto	u5050
  9058  00366A                     u5051:
  9059  00366A  EF3A  F01B         	goto	l4391
  9060  00366E                     u5050:
  9061  00366E  8C8B               	bsf	139,6,c	;volatile
  9062  003670  EF3C  F01B         	goto	l4393
  9063  003674                     l4391:
  9064  003674  0E0F               	movlw	15
  9065  003676  168B               	andwf	139,f,c	;volatile
  9066  003678                     l4393:
  9067                           
  9068                           ;display.c: 48:     { _delay((unsigned long)((2)*(16000000/4000000.0))); LATC |= 0x10; _
      +                          delay((unsigned long)((2)*(16000000/4000000.0))); LATC = LATC & 0x0F; _delay((unsigned l
      +                          ong)((2)*(16000000/4000000.0))); };
  9069  003678  D000               	nop2		;2 cycle nop
  9070  00367A  D000               	nop2		;2 cycle nop
  9071  00367C  D000               	nop2		;2 cycle nop
  9072  00367E  D000               	nop2		;2 cycle nop
  9073  003680  888B               	bsf	139,4,c	;volatile
  9074  003682  D000               	nop2		;2 cycle nop
  9075  003684  D000               	nop2		;2 cycle nop
  9076  003686  D000               	nop2		;2 cycle nop
  9077  003688  D000               	nop2		;2 cycle nop
  9078  00368A  508B               	movf	139,w,c	;volatile
  9079  00368C  0B0F               	andlw	15
  9080  00368E  6E8B               	movwf	139,c	;volatile
  9081  003690  D000               	nop2		;2 cycle nop
  9082  003692  D000               	nop2		;2 cycle nop
  9083  003694  D000               	nop2		;2 cycle nop
  9084  003696  D000               	nop2		;2 cycle nop
  9085  003698                     
  9086                           ;display.c: 51:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  9087  003698  D000               	nop2		;2 cycle nop
  9088  00369A  D000               	nop2		;2 cycle nop
  9089  00369C  D000               	nop2		;2 cycle nop
  9090  00369E  D000               	nop2		;2 cycle nop
  9091  0036A0                     
  9092                           ;display.c: 54:     LATC = c & 0x0f;
  9093  0036A0  5001               	movf	lcd_write@c^0,w,c
  9094  0036A2  0B0F               	andlw	15
  9095  0036A4  6E8B               	movwf	139,c	;volatile
  9096  0036A6                     
  9097                           ;display.c: 57:     {if(LCD_RS_flag == 1) LATC |= 0x40; else LATC &= 0x0F;};
  9098  0036A6  045C               	decf	_LCD_RS_flag^0,w,c	;volatile
  9099  0036A8  105D               	iorwf	(_LCD_RS_flag+1)^0,w,c	;volatile
  9100  0036AA  A4D8               	btfss	status,2,c
  9101  0036AC  EF5A  F01B         	goto	u5061
  9102  0036B0  EF5C  F01B         	goto	u5060
  9103  0036B4                     u5061:
  9104  0036B4  EF5F  F01B         	goto	l4411
  9105  0036B8                     u5060:
  9106  0036B8  8C8B               	bsf	139,6,c	;volatile
  9107  0036BA  EF61  F01B         	goto	l4413
  9108  0036BE                     l4411:
  9109  0036BE  0E0F               	movlw	15
  9110  0036C0  168B               	andwf	139,f,c	;volatile
  9111  0036C2                     l4413:
  9112                           
  9113                           ;display.c: 60:     { _delay((unsigned long)((2)*(16000000/4000000.0))); LATC |= 0x10; _
      +                          delay((unsigned long)((2)*(16000000/4000000.0))); LATC = LATC & 0x0F; _delay((unsigned l
      +                          ong)((2)*(16000000/4000000.0))); };
  9114  0036C2  D000               	nop2		;2 cycle nop
  9115  0036C4  D000               	nop2		;2 cycle nop
  9116  0036C6  D000               	nop2		;2 cycle nop
  9117  0036C8  D000               	nop2		;2 cycle nop
  9118  0036CA  888B               	bsf	139,4,c	;volatile
  9119  0036CC  D000               	nop2		;2 cycle nop
  9120  0036CE  D000               	nop2		;2 cycle nop
  9121  0036D0  D000               	nop2		;2 cycle nop
  9122  0036D2  D000               	nop2		;2 cycle nop
  9123  0036D4  508B               	movf	139,w,c	;volatile
  9124  0036D6  0B0F               	andlw	15
  9125  0036D8  6E8B               	movwf	139,c	;volatile
  9126  0036DA  D000               	nop2		;2 cycle nop
  9127  0036DC  D000               	nop2		;2 cycle nop
  9128  0036DE  D000               	nop2		;2 cycle nop
  9129  0036E0  D000               	nop2		;2 cycle nop
  9130  0036E2                     
  9131                           ;display.c: 63:     _delay((unsigned long)((50)*(16000000/4000000.0)));
  9132  0036E2  0E42               	movlw	66
  9133  0036E4                     u5577:
  9134  0036E4  2EE8               	decfsz	wreg,f,c
  9135  0036E6  D7FE               	bra	u5577
  9136  0036E8  D000               	nop2	
  9137  0036EA  0012               	return		;funcret
  9138  0036EC                     __end_of_lcd_write:
  9139                           	callstack 0
  9140                           
  9141 ;; *************** function _change_position *****************
  9142 ;; Defined at:
  9143 ;;		line 97 in file "main.c"
  9144 ;; Parameters:    Size  Location     Type
  9145 ;;  position        2    0[COMRAM] int 
  9146 ;; Auto vars:     Size  Location     Type
  9147 ;;		None
  9148 ;; Return value:  Size  Location     Type
  9149 ;;                  1    wreg      void 
  9150 ;; Registers used:
  9151 ;;		wreg, status,2, status,0
  9152 ;; Tracked objects:
  9153 ;;		On entry : 0/0
  9154 ;;		On exit  : 0/0
  9155 ;;		Unchanged: 0/0
  9156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9157 ;;      Params:         2       0       0       0
  9158 ;;      Locals:         0       0       0       0
  9159 ;;      Temps:          0       0       0       0
  9160 ;;      Totals:         2       0       0       0
  9161 ;;Total ram usage:        2 bytes
  9162 ;; Hardware stack levels used: 1
  9163 ;; Hardware stack levels required when called: 1
  9164 ;; This function calls:
  9165 ;;		Nothing
  9166 ;; This function is called by:
  9167 ;;		_calibrate
  9168 ;;		_main
  9169 ;;		_debug_print
  9170 ;; This function uses a non-reentrant model
  9171 ;;
  9172                           
  9173                           	psect	text40
  9174  003CBE                     __ptext40:
  9175                           	callstack 0
  9176  003CBE                     _change_position:
  9177                           	callstack 29
  9178  003CBE                     
  9179                           ;main.c: 99:     int sum = 0;
  9180  003CBE  5001               	movf	change_position@position^0,w,c
  9181  003CC0  1002               	iorwf	(change_position@position+1)^0,w,c
  9182  003CC2  A4D8               	btfss	status,2,c
  9183  003CC4  EF66  F01E         	goto	u5091
  9184  003CC8  EF68  F01E         	goto	u5090
  9185  003CCC                     u5091:
  9186  003CCC  EF6C  F01E         	goto	l4451
  9187  003CD0                     u5090:
  9188  003CD0                     
  9189                           ;main.c: 102: 
  9190  003CD0  0E11               	movlw	17
  9191  003CD2  6EC2               	movwf	194,c	;volatile
  9192                           
  9193                           ;main.c: 103:     for (int i = 0; i < 20; i++) {
  9194  003CD4  EF6E  F01E         	goto	l107
  9195  003CD8                     l4451:
  9196                           
  9197                           ;main.c: 106:     }
  9198  003CD8  0E0D               	movlw	13
  9199  003CDA  6EC2               	movwf	194,c	;volatile
  9200  003CDC                     l107:
  9201  003CDC  0012               	return		;funcret
  9202  003CDE                     __end_of_change_position:
  9203                           	callstack 0
  9204                           
  9205 ;; *************** function _calculate_velocity *****************
  9206 ;; Defined at:
  9207 ;;		line 210 in file "main.c"
  9208 ;; Parameters:    Size  Location     Type
  9209 ;;  time            4   25[COMRAM] void 
  9210 ;; Auto vars:     Size  Location     Type
  9211 ;;		None
  9212 ;; Return value:  Size  Location     Type
  9213 ;;                  4   25[COMRAM] float 
  9214 ;; Registers used:
  9215 ;;		wreg, status,2, status,0, cstack
  9216 ;; Tracked objects:
  9217 ;;		On entry : 0/0
  9218 ;;		On exit  : 0/0
  9219 ;;		Unchanged: 0/0
  9220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9221 ;;      Params:         4       0       0       0
  9222 ;;      Locals:         4       0       0       0
  9223 ;;      Temps:          0       0       0       0
  9224 ;;      Totals:         8       0       0       0
  9225 ;;Total ram usage:        8 bytes
  9226 ;; Hardware stack levels used: 1
  9227 ;; Hardware stack levels required when called: 2
  9228 ;; This function calls:
  9229 ;;		___fldiv
  9230 ;; This function is called by:
  9231 ;;		_main
  9232 ;; This function uses a non-reentrant model
  9233 ;;
  9234                           
  9235                           	psect	text41
  9236  00387A                     __ptext41:
  9237                           	callstack 0
  9238  00387A                     _calculate_velocity:
  9239                           	callstack 28
  9240  00387A                     
  9241                           ;main.c: 212:     ADCON0 = 0b00000001;
  9242  00387A  0E00               	movlw	0
  9243  00387C  6E05               	movwf	___fldiv@a^0,c
  9244  00387E  0E00               	movlw	0
  9245  003880  6E06               	movwf	(___fldiv@a+1)^0,c
  9246  003882  0E7A               	movlw	122
  9247  003884  6E07               	movwf	(___fldiv@a+2)^0,c
  9248  003886  0E44               	movlw	68
  9249  003888  6E08               	movwf	(___fldiv@a+3)^0,c
  9250  00388A  C01A  F001         	movff	calculate_velocity@time,___fldiv@b
  9251  00388E  C01B  F002         	movff	calculate_velocity@time+1,___fldiv@b+1
  9252  003892  C01C  F003         	movff	calculate_velocity@time+2,___fldiv@b+2
  9253  003896  C01D  F004         	movff	calculate_velocity@time+3,___fldiv@b+3
  9254  00389A  EC34  F00E         	call	___fldiv	;wreg free
  9255  00389E  C001  F01E         	movff	?___fldiv,_calculate_velocity$1106
  9256  0038A2  C002  F01F         	movff	?___fldiv+1,_calculate_velocity$1106+1
  9257  0038A6  C003  F020         	movff	?___fldiv+2,_calculate_velocity$1106+2
  9258  0038AA  C004  F021         	movff	?___fldiv+3,_calculate_velocity$1106+3
  9259                           
  9260                           ;main.c: 212:     ADCON0 = 0b00000001;
  9261  0038AE  0E00               	movlw	0
  9262  0038B0  6E01               	movwf	___fldiv@b^0,c
  9263  0038B2  0E00               	movlw	0
  9264  0038B4  6E02               	movwf	(___fldiv@b+1)^0,c
  9265  0038B6  0EB8               	movlw	184
  9266  0038B8  6E03               	movwf	(___fldiv@b+2)^0,c
  9267  0038BA  0E41               	movlw	65
  9268  0038BC  6E04               	movwf	(___fldiv@b+3)^0,c
  9269  0038BE  C01E  F005         	movff	_calculate_velocity$1106,___fldiv@a
  9270  0038C2  C01F  F006         	movff	_calculate_velocity$1106+1,___fldiv@a+1
  9271  0038C6  C020  F007         	movff	_calculate_velocity$1106+2,___fldiv@a+2
  9272  0038CA  C021  F008         	movff	_calculate_velocity$1106+3,___fldiv@a+3
  9273  0038CE  EC34  F00E         	call	___fldiv	;wreg free
  9274  0038D2  C001  F01A         	movff	?___fldiv,?_calculate_velocity
  9275  0038D6  C002  F01B         	movff	?___fldiv+1,?_calculate_velocity+1
  9276  0038DA  C003  F01C         	movff	?___fldiv+2,?_calculate_velocity+2
  9277  0038DE  C004  F01D         	movff	?___fldiv+3,?_calculate_velocity+3
  9278  0038E2  0012               	return		;funcret
  9279  0038E4                     __end_of_calculate_velocity:
  9280                           	callstack 0
  9281                           
  9282 ;; *************** function ___fldiv *****************
  9283 ;; Defined at:
  9284 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  9285 ;; Parameters:    Size  Location     Type
  9286 ;;  b               4    0[COMRAM] float 
  9287 ;;  a               4    4[COMRAM] float 
  9288 ;; Auto vars:     Size  Location     Type
  9289 ;;  grs             4   19[COMRAM] unsigned long 
  9290 ;;  rem             4   12[COMRAM] unsigned long 
  9291 ;;  new_exp         2   17[COMRAM] short 
  9292 ;;  aexp            1   24[COMRAM] unsigned char 
  9293 ;;  bexp            1   23[COMRAM] unsigned char 
  9294 ;;  sign            1   16[COMRAM] unsigned char 
  9295 ;; Return value:  Size  Location     Type
  9296 ;;                  4    0[COMRAM] unsigned char 
  9297 ;; Registers used:
  9298 ;;		wreg, status,2, status,0
  9299 ;; Tracked objects:
  9300 ;;		On entry : 0/0
  9301 ;;		On exit  : 0/0
  9302 ;;		Unchanged: 0/0
  9303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9304 ;;      Params:         8       0       0       0
  9305 ;;      Locals:        13       0       0       0
  9306 ;;      Temps:          4       0       0       0
  9307 ;;      Totals:        25       0       0       0
  9308 ;;Total ram usage:       25 bytes
  9309 ;; Hardware stack levels used: 1
  9310 ;; Hardware stack levels required when called: 1
  9311 ;; This function calls:
  9312 ;;		Nothing
  9313 ;; This function is called by:
  9314 ;;		_calculate_velocity
  9315 ;;		_efgtoa
  9316 ;; This function uses a non-reentrant model
  9317 ;;
  9318                           
  9319                           	psect	text42
  9320  001C68                     __ptext42:
  9321                           	callstack 0
  9322  001C68                     ___fldiv:
  9323                           	callstack 24
  9324  001C68  5004               	movf	(___fldiv@b+3)^0,w,c
  9325  001C6A  0B80               	andlw	128
  9326  001C6C  6E11               	movwf	___fldiv@sign^0,c
  9327  001C6E  5004               	movf	(___fldiv@b+3)^0,w,c
  9328  001C70  2404               	addwf	(___fldiv@b+3)^0,w,c
  9329  001C72  6E18               	movwf	___fldiv@bexp^0,c
  9330  001C74  AE03               	btfss	(___fldiv@b+2)^0,7,c
  9331  001C76  EF3F  F00E         	goto	u3331
  9332  001C7A  EF41  F00E         	goto	u3330
  9333  001C7E                     u3331:
  9334  001C7E  EF42  F00E         	goto	l3391
  9335  001C82                     u3330:
  9336  001C82  8018               	bsf	___fldiv@bexp^0,0,c
  9337  001C84                     l3391:
  9338  001C84  5018               	movf	___fldiv@bexp^0,w,c
  9339  001C86  B4D8               	btfsc	status,2,c
  9340  001C88  EF48  F00E         	goto	u3341
  9341  001C8C  EF4A  F00E         	goto	u3340
  9342  001C90                     u3341:
  9343  001C90  EF5F  F00E         	goto	l3401
  9344  001C94                     u3340:
  9345  001C94  2818               	incf	___fldiv@bexp^0,w,c
  9346  001C96  A4D8               	btfss	status,2,c
  9347  001C98  EF50  F00E         	goto	u3351
  9348  001C9C  EF52  F00E         	goto	u3350
  9349  001CA0                     u3351:
  9350  001CA0  EF5A  F00E         	goto	l3397
  9351  001CA4                     u3350:
  9352  001CA4  0E00               	movlw	0
  9353  001CA6  6E01               	movwf	___fldiv@b^0,c
  9354  001CA8  0E00               	movlw	0
  9355  001CAA  6E02               	movwf	(___fldiv@b+1)^0,c
  9356  001CAC  0E00               	movlw	0
  9357  001CAE  6E03               	movwf	(___fldiv@b+2)^0,c
  9358  001CB0  0E00               	movlw	0
  9359  001CB2  6E04               	movwf	(___fldiv@b+3)^0,c
  9360  001CB4                     l3397:
  9361  001CB4  8E03               	bsf	(___fldiv@b+2)^0,7,c
  9362  001CB6  0E00               	movlw	0
  9363  001CB8  6E04               	movwf	(___fldiv@b+3)^0,c
  9364  001CBA  EF67  F00E         	goto	l3403
  9365  001CBE                     l3401:
  9366  001CBE  0E00               	movlw	0
  9367  001CC0  6E01               	movwf	___fldiv@b^0,c
  9368  001CC2  0E00               	movlw	0
  9369  001CC4  6E02               	movwf	(___fldiv@b+1)^0,c
  9370  001CC6  0E00               	movlw	0
  9371  001CC8  6E03               	movwf	(___fldiv@b+2)^0,c
  9372  001CCA  0E00               	movlw	0
  9373  001CCC  6E04               	movwf	(___fldiv@b+3)^0,c
  9374  001CCE                     l3403:
  9375  001CCE  5008               	movf	(___fldiv@a+3)^0,w,c
  9376  001CD0  0B80               	andlw	128
  9377  001CD2  1A11               	xorwf	___fldiv@sign^0,f,c
  9378  001CD4  5008               	movf	(___fldiv@a+3)^0,w,c
  9379  001CD6  2408               	addwf	(___fldiv@a+3)^0,w,c
  9380  001CD8  6E19               	movwf	___fldiv@aexp^0,c
  9381  001CDA  AE07               	btfss	(___fldiv@a+2)^0,7,c
  9382  001CDC  EF72  F00E         	goto	u3361
  9383  001CE0  EF74  F00E         	goto	u3360
  9384  001CE4                     u3361:
  9385  001CE4  EF75  F00E         	goto	l3411
  9386  001CE8                     u3360:
  9387  001CE8  8019               	bsf	___fldiv@aexp^0,0,c
  9388  001CEA                     l3411:
  9389  001CEA  5019               	movf	___fldiv@aexp^0,w,c
  9390  001CEC  B4D8               	btfsc	status,2,c
  9391  001CEE  EF7B  F00E         	goto	u3371
  9392  001CF2  EF7D  F00E         	goto	u3370
  9393  001CF6                     u3371:
  9394  001CF6  EF92  F00E         	goto	l3421
  9395  001CFA                     u3370:
  9396  001CFA  2819               	incf	___fldiv@aexp^0,w,c
  9397  001CFC  A4D8               	btfss	status,2,c
  9398  001CFE  EF83  F00E         	goto	u3381
  9399  001D02  EF85  F00E         	goto	u3380
  9400  001D06                     u3381:
  9401  001D06  EF8D  F00E         	goto	l3417
  9402  001D0A                     u3380:
  9403  001D0A  0E00               	movlw	0
  9404  001D0C  6E05               	movwf	___fldiv@a^0,c
  9405  001D0E  0E00               	movlw	0
  9406  001D10  6E06               	movwf	(___fldiv@a+1)^0,c
  9407  001D12  0E00               	movlw	0
  9408  001D14  6E07               	movwf	(___fldiv@a+2)^0,c
  9409  001D16  0E00               	movlw	0
  9410  001D18  6E08               	movwf	(___fldiv@a+3)^0,c
  9411  001D1A                     l3417:
  9412  001D1A  8E07               	bsf	(___fldiv@a+2)^0,7,c
  9413  001D1C  0E00               	movlw	0
  9414  001D1E  6E08               	movwf	(___fldiv@a+3)^0,c
  9415  001D20  EF9A  F00E         	goto	l3423
  9416  001D24                     l3421:
  9417  001D24  0E00               	movlw	0
  9418  001D26  6E05               	movwf	___fldiv@a^0,c
  9419  001D28  0E00               	movlw	0
  9420  001D2A  6E06               	movwf	(___fldiv@a+1)^0,c
  9421  001D2C  0E00               	movlw	0
  9422  001D2E  6E07               	movwf	(___fldiv@a+2)^0,c
  9423  001D30  0E00               	movlw	0
  9424  001D32  6E08               	movwf	(___fldiv@a+3)^0,c
  9425  001D34                     l3423:
  9426  001D34  5005               	movf	___fldiv@a^0,w,c
  9427  001D36  1006               	iorwf	(___fldiv@a+1)^0,w,c
  9428  001D38  1007               	iorwf	(___fldiv@a+2)^0,w,c
  9429  001D3A  1008               	iorwf	(___fldiv@a+3)^0,w,c
  9430  001D3C  A4D8               	btfss	status,2,c
  9431  001D3E  EFA3  F00E         	goto	u3391
  9432  001D42  EFA5  F00E         	goto	u3390
  9433  001D46                     u3391:
  9434  001D46  EFBD  F00E         	goto	l3435
  9435  001D4A                     u3390:
  9436  001D4A  0E00               	movlw	0
  9437  001D4C  6E01               	movwf	___fldiv@b^0,c
  9438  001D4E  0E00               	movlw	0
  9439  001D50  6E02               	movwf	(___fldiv@b+1)^0,c
  9440  001D52  0E00               	movlw	0
  9441  001D54  6E03               	movwf	(___fldiv@b+2)^0,c
  9442  001D56  0E00               	movlw	0
  9443  001D58  6E04               	movwf	(___fldiv@b+3)^0,c
  9444  001D5A  0E80               	movlw	128
  9445  001D5C  1203               	iorwf	(___fldiv@b+2)^0,f,c
  9446  001D5E  0E7F               	movlw	127
  9447  001D60  1204               	iorwf	(___fldiv@b+3)^0,f,c
  9448  001D62                     l3429:
  9449  001D62  5011               	movf	___fldiv@sign^0,w,c
  9450  001D64  1204               	iorwf	(___fldiv@b+3)^0,f,c
  9451  001D66  C001  F001         	movff	___fldiv@b,?___fldiv
  9452  001D6A  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  9453  001D6E  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  9454  001D72  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  9455  001D76  EF00  F010         	goto	l788
  9456  001D7A                     l3435:
  9457  001D7A  5018               	movf	___fldiv@bexp^0,w,c
  9458  001D7C  A4D8               	btfss	status,2,c
  9459  001D7E  EFC3  F00E         	goto	u3401
  9460  001D82  EFC5  F00E         	goto	u3400
  9461  001D86                     u3401:
  9462  001D86  EFCF  F00E         	goto	l3443
  9463  001D8A                     u3400:
  9464  001D8A  0E00               	movlw	0
  9465  001D8C  6E01               	movwf	?___fldiv^0,c
  9466  001D8E  0E00               	movlw	0
  9467  001D90  6E02               	movwf	(?___fldiv+1)^0,c
  9468  001D92  0E00               	movlw	0
  9469  001D94  6E03               	movwf	(?___fldiv+2)^0,c
  9470  001D96  0E00               	movlw	0
  9471  001D98  6E04               	movwf	(?___fldiv+3)^0,c
  9472  001D9A  EF00  F010         	goto	l788
  9473  001D9E                     l3443:
  9474  001D9E  5019               	movf	___fldiv@aexp^0,w,c
  9475  001DA0  C018  F009         	movff	___fldiv@bexp,??___fldiv
  9476  001DA4  6A0A               	clrf	(??___fldiv+1)^0,c
  9477  001DA6  5E09               	subwf	??___fldiv^0,f,c
  9478  001DA8  0E00               	movlw	0
  9479  001DAA  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  9480  001DAC  0E7F               	movlw	127
  9481  001DAE  2409               	addwf	??___fldiv^0,w,c
  9482  001DB0  6E12               	movwf	___fldiv@new_exp^0,c
  9483  001DB2  0E00               	movlw	0
  9484  001DB4  200A               	addwfc	(??___fldiv+1)^0,w,c
  9485  001DB6  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9486  001DB8  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  9487  001DBC  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  9488  001DC0  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  9489  001DC4  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  9490  001DC8  0E00               	movlw	0
  9491  001DCA  6E01               	movwf	___fldiv@b^0,c
  9492  001DCC  0E00               	movlw	0
  9493  001DCE  6E02               	movwf	(___fldiv@b+1)^0,c
  9494  001DD0  0E00               	movlw	0
  9495  001DD2  6E03               	movwf	(___fldiv@b+2)^0,c
  9496  001DD4  0E00               	movlw	0
  9497  001DD6  6E04               	movwf	(___fldiv@b+3)^0,c
  9498  001DD8  0E00               	movlw	0
  9499  001DDA  6E14               	movwf	___fldiv@grs^0,c
  9500  001DDC  0E00               	movlw	0
  9501  001DDE  6E15               	movwf	(___fldiv@grs+1)^0,c
  9502  001DE0  0E00               	movlw	0
  9503  001DE2  6E16               	movwf	(___fldiv@grs+2)^0,c
  9504  001DE4  0E00               	movlw	0
  9505  001DE6  6E17               	movwf	(___fldiv@grs+3)^0,c
  9506  001DE8  0E00               	movlw	0
  9507  001DEA  6E19               	movwf	___fldiv@aexp^0,c
  9508  001DEC  EF30  F00F         	goto	l790
  9509  001DF0                     l3453:
  9510  001DF0  5019               	movf	___fldiv@aexp^0,w,c
  9511  001DF2  B4D8               	btfsc	status,2,c
  9512  001DF4  EFFE  F00E         	goto	u3411
  9513  001DF8  EF00  F00F         	goto	u3410
  9514  001DFC                     u3411:
  9515  001DFC  EF17  F00F         	goto	l3461
  9516  001E00                     u3410:
  9517  001E00  90D8               	bcf	status,0,c
  9518  001E02  360D               	rlcf	___fldiv@rem^0,f,c
  9519  001E04  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  9520  001E06  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  9521  001E08  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  9522  001E0A  90D8               	bcf	status,0,c
  9523  001E0C  3601               	rlcf	___fldiv@b^0,f,c
  9524  001E0E  3602               	rlcf	(___fldiv@b+1)^0,f,c
  9525  001E10  3603               	rlcf	(___fldiv@b+2)^0,f,c
  9526  001E12  3604               	rlcf	(___fldiv@b+3)^0,f,c
  9527  001E14  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9528  001E16  EF0F  F00F         	goto	u3421
  9529  001E1A  EF11  F00F         	goto	u3420
  9530  001E1E                     u3421:
  9531  001E1E  EF12  F00F         	goto	l793
  9532  001E22                     u3420:
  9533  001E22  8001               	bsf	___fldiv@b^0,0,c
  9534  001E24                     l793:
  9535  001E24  90D8               	bcf	status,0,c
  9536  001E26  3614               	rlcf	___fldiv@grs^0,f,c
  9537  001E28  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  9538  001E2A  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  9539  001E2C  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  9540  001E2E                     l3461:
  9541  001E2E  5005               	movf	___fldiv@a^0,w,c
  9542  001E30  5C0D               	subwf	___fldiv@rem^0,w,c
  9543  001E32  5006               	movf	(___fldiv@a+1)^0,w,c
  9544  001E34  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  9545  001E36  5007               	movf	(___fldiv@a+2)^0,w,c
  9546  001E38  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  9547  001E3A  5008               	movf	(___fldiv@a+3)^0,w,c
  9548  001E3C  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  9549  001E3E  A0D8               	btfss	status,0,c
  9550  001E40  EF24  F00F         	goto	u3431
  9551  001E44  EF26  F00F         	goto	u3430
  9552  001E48                     u3431:
  9553  001E48  EF2F  F00F         	goto	l3467
  9554  001E4C                     u3430:
  9555  001E4C  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  9556  001E4E  5005               	movf	___fldiv@a^0,w,c
  9557  001E50  5E0D               	subwf	___fldiv@rem^0,f,c
  9558  001E52  5006               	movf	(___fldiv@a+1)^0,w,c
  9559  001E54  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  9560  001E56  5007               	movf	(___fldiv@a+2)^0,w,c
  9561  001E58  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  9562  001E5A  5008               	movf	(___fldiv@a+3)^0,w,c
  9563  001E5C  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  9564  001E5E                     l3467:
  9565  001E5E  2A19               	incf	___fldiv@aexp^0,f,c
  9566  001E60                     l790:
  9567  001E60  0E19               	movlw	25
  9568  001E62  6419               	cpfsgt	___fldiv@aexp^0,c
  9569  001E64  EF36  F00F         	goto	u3441
  9570  001E68  EF38  F00F         	goto	u3440
  9571  001E6C                     u3441:
  9572  001E6C  EFF8  F00E         	goto	l3453
  9573  001E70                     u3440:
  9574  001E70  500D               	movf	___fldiv@rem^0,w,c
  9575  001E72  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  9576  001E74  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  9577  001E76  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  9578  001E78  B4D8               	btfsc	status,2,c
  9579  001E7A  EF41  F00F         	goto	u3451
  9580  001E7E  EF43  F00F         	goto	u3450
  9581  001E82                     u3451:
  9582  001E82  EF5B  F00F         	goto	l3479
  9583  001E86                     u3450:
  9584  001E86  8014               	bsf	___fldiv@grs^0,0,c
  9585  001E88  EF5B  F00F         	goto	l3479
  9586  001E8C                     l3473:
  9587  001E8C  90D8               	bcf	status,0,c
  9588  001E8E  3601               	rlcf	___fldiv@b^0,f,c
  9589  001E90  3602               	rlcf	(___fldiv@b+1)^0,f,c
  9590  001E92  3603               	rlcf	(___fldiv@b+2)^0,f,c
  9591  001E94  3604               	rlcf	(___fldiv@b+3)^0,f,c
  9592  001E96  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9593  001E98  EF50  F00F         	goto	u3461
  9594  001E9C  EF52  F00F         	goto	u3460
  9595  001EA0                     u3461:
  9596  001EA0  EF53  F00F         	goto	l799
  9597  001EA4                     u3460:
  9598  001EA4  8001               	bsf	___fldiv@b^0,0,c
  9599  001EA6                     l799:
  9600  001EA6  90D8               	bcf	status,0,c
  9601  001EA8  3614               	rlcf	___fldiv@grs^0,f,c
  9602  001EAA  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  9603  001EAC  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  9604  001EAE  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  9605  001EB0  0612               	decf	___fldiv@new_exp^0,f,c
  9606  001EB2  A0D8               	btfss	status,0,c
  9607  001EB4  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  9608  001EB6                     l3479:
  9609  001EB6  AE03               	btfss	(___fldiv@b+2)^0,7,c
  9610  001EB8  EF60  F00F         	goto	u3471
  9611  001EBC  EF62  F00F         	goto	u3470
  9612  001EC0                     u3471:
  9613  001EC0  EF46  F00F         	goto	l3473
  9614  001EC4                     u3470:
  9615  001EC4  0E00               	movlw	0
  9616  001EC6  6E19               	movwf	___fldiv@aexp^0,c
  9617  001EC8  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9618  001ECA  EF69  F00F         	goto	u3481
  9619  001ECE  EF6B  F00F         	goto	u3480
  9620  001ED2                     u3481:
  9621  001ED2  EF8F  F00F         	goto	l801
  9622  001ED6                     u3480:
  9623  001ED6  0EFF               	movlw	255
  9624  001ED8  1414               	andwf	___fldiv@grs^0,w,c
  9625  001EDA  6E09               	movwf	??___fldiv^0,c
  9626  001EDC  0EFF               	movlw	255
  9627  001EDE  1415               	andwf	(___fldiv@grs+1)^0,w,c
  9628  001EE0  6E0A               	movwf	(??___fldiv+1)^0,c
  9629  001EE2  0EFF               	movlw	255
  9630  001EE4  1416               	andwf	(___fldiv@grs+2)^0,w,c
  9631  001EE6  6E0B               	movwf	(??___fldiv+2)^0,c
  9632  001EE8  0E7F               	movlw	127
  9633  001EEA  1417               	andwf	(___fldiv@grs+3)^0,w,c
  9634  001EEC  6E0C               	movwf	(??___fldiv+3)^0,c
  9635  001EEE  5009               	movf	??___fldiv^0,w,c
  9636  001EF0  100A               	iorwf	(??___fldiv+1)^0,w,c
  9637  001EF2  100B               	iorwf	(??___fldiv+2)^0,w,c
  9638  001EF4  100C               	iorwf	(??___fldiv+3)^0,w,c
  9639  001EF6  B4D8               	btfsc	status,2,c
  9640  001EF8  EF80  F00F         	goto	u3491
  9641  001EFC  EF82  F00F         	goto	u3490
  9642  001F00                     u3491:
  9643  001F00  EF86  F00F         	goto	l802
  9644  001F04                     u3490:
  9645  001F04                     l3487:
  9646  001F04  0E01               	movlw	1
  9647  001F06  6E19               	movwf	___fldiv@aexp^0,c
  9648  001F08  EF8F  F00F         	goto	l801
  9649  001F0C                     l802:
  9650  001F0C  A001               	btfss	___fldiv@b^0,0,c
  9651  001F0E  EF8B  F00F         	goto	u3501
  9652  001F12  EF8D  F00F         	goto	u3500
  9653  001F16                     u3501:
  9654  001F16  EF8F  F00F         	goto	l801
  9655  001F1A                     u3500:
  9656  001F1A  EF82  F00F         	goto	l3487
  9657  001F1E                     l801:
  9658  001F1E  5019               	movf	___fldiv@aexp^0,w,c
  9659  001F20  B4D8               	btfsc	status,2,c
  9660  001F22  EF95  F00F         	goto	u3511
  9661  001F26  EF97  F00F         	goto	u3510
  9662  001F2A                     u3511:
  9663  001F2A  EFBB  F00F         	goto	l3499
  9664  001F2E                     u3510:
  9665  001F2E  0E01               	movlw	1
  9666  001F30  2601               	addwf	___fldiv@b^0,f,c
  9667  001F32  0E00               	movlw	0
  9668  001F34  2202               	addwfc	(___fldiv@b+1)^0,f,c
  9669  001F36  2203               	addwfc	(___fldiv@b+2)^0,f,c
  9670  001F38  2204               	addwfc	(___fldiv@b+3)^0,f,c
  9671  001F3A  A004               	btfss	(___fldiv@b+3)^0,0,c
  9672  001F3C  EFA2  F00F         	goto	u3521
  9673  001F40  EFA4  F00F         	goto	u3520
  9674  001F44                     u3521:
  9675  001F44  EFBB  F00F         	goto	l3499
  9676  001F48                     u3520:
  9677  001F48  C001  F009         	movff	___fldiv@b,??___fldiv
  9678  001F4C  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  9679  001F50  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  9680  001F54  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  9681  001F58  340C               	rlcf	(??___fldiv+3)^0,w,c
  9682  001F5A  320C               	rrcf	(??___fldiv+3)^0,f,c
  9683  001F5C  320B               	rrcf	(??___fldiv+2)^0,f,c
  9684  001F5E  320A               	rrcf	(??___fldiv+1)^0,f,c
  9685  001F60  3209               	rrcf	??___fldiv^0,f,c
  9686  001F62  C009  F001         	movff	??___fldiv,___fldiv@b
  9687  001F66  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  9688  001F6A  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  9689  001F6E  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  9690  001F72  4A12               	infsnz	___fldiv@new_exp^0,f,c
  9691  001F74  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  9692  001F76                     l3499:
  9693  001F76  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9694  001F78  EFC6  F00F         	goto	u3531
  9695  001F7C  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  9696  001F7E  E108               	bnz	u3530
  9697  001F80  2812               	incf	___fldiv@new_exp^0,w,c
  9698  001F82  A0D8               	btfss	status,0,c
  9699  001F84  EFC6  F00F         	goto	u3531
  9700  001F88  EFC8  F00F         	goto	u3530
  9701  001F8C                     u3531:
  9702  001F8C  EFD3  F00F         	goto	l3503
  9703  001F90                     u3530:
  9704  001F90  0E00               	movlw	0
  9705  001F92  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9706  001F94  6812               	setf	___fldiv@new_exp^0,c
  9707  001F96  0E00               	movlw	0
  9708  001F98  6E01               	movwf	___fldiv@b^0,c
  9709  001F9A  0E00               	movlw	0
  9710  001F9C  6E02               	movwf	(___fldiv@b+1)^0,c
  9711  001F9E  0E00               	movlw	0
  9712  001FA0  6E03               	movwf	(___fldiv@b+2)^0,c
  9713  001FA2  0E00               	movlw	0
  9714  001FA4  6E04               	movwf	(___fldiv@b+3)^0,c
  9715  001FA6                     l3503:
  9716  001FA6  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9717  001FA8  EFE0  F00F         	goto	u3540
  9718  001FAC  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  9719  001FAE  E106               	bnz	u3541
  9720  001FB0  0412               	decf	___fldiv@new_exp^0,w,c
  9721  001FB2  B0D8               	btfsc	status,0,c
  9722  001FB4  EFDE  F00F         	goto	u3541
  9723  001FB8  EFE0  F00F         	goto	u3540
  9724  001FBC                     u3541:
  9725  001FBC  EFEE  F00F         	goto	l3507
  9726  001FC0                     u3540:
  9727  001FC0  0E00               	movlw	0
  9728  001FC2  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9729  001FC4  0E00               	movlw	0
  9730  001FC6  6E12               	movwf	___fldiv@new_exp^0,c
  9731  001FC8  0E00               	movlw	0
  9732  001FCA  6E01               	movwf	___fldiv@b^0,c
  9733  001FCC  0E00               	movlw	0
  9734  001FCE  6E02               	movwf	(___fldiv@b+1)^0,c
  9735  001FD0  0E00               	movlw	0
  9736  001FD2  6E03               	movwf	(___fldiv@b+2)^0,c
  9737  001FD4  0E00               	movlw	0
  9738  001FD6  6E04               	movwf	(___fldiv@b+3)^0,c
  9739  001FD8  0E00               	movlw	0
  9740  001FDA  6E11               	movwf	___fldiv@sign^0,c
  9741  001FDC                     l3507:
  9742  001FDC  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  9743  001FE0  A018               	btfss	___fldiv@bexp^0,0,c
  9744  001FE2  EFF5  F00F         	goto	u3551
  9745  001FE6  EFF7  F00F         	goto	u3550
  9746  001FEA                     u3551:
  9747  001FEA  EFFA  F00F         	goto	l3513
  9748  001FEE                     u3550:
  9749  001FEE  8E03               	bsf	(___fldiv@b+2)^0,7,c
  9750  001FF0  EFFB  F00F         	goto	l3515
  9751  001FF4                     l3513:
  9752  001FF4  9E03               	bcf	(___fldiv@b+2)^0,7,c
  9753  001FF6                     l3515:
  9754  001FF6  90D8               	bcf	status,0,c
  9755  001FF8  3018               	rrcf	___fldiv@bexp^0,w,c
  9756  001FFA  6E04               	movwf	(___fldiv@b+3)^0,c
  9757  001FFC  EFB1  F00E         	goto	l3429
  9758  002000                     l788:
  9759  002000  0012               	return		;funcret
  9760  002002                     __end_of___fldiv:
  9761                           	callstack 0
  9762                           
  9763 ;; *************** function _calculate_time *****************
  9764 ;; Defined at:
  9765 ;;		line 200 in file "main.c"
  9766 ;; Parameters:    Size  Location     Type
  9767 ;;		None
  9768 ;; Auto vars:     Size  Location     Type
  9769 ;;  result          2   20[COMRAM] int 
  9770 ;; Return value:  Size  Location     Type
  9771 ;;                  4   14[COMRAM] int 
  9772 ;; Registers used:
  9773 ;;		wreg, status,2, status,0, cstack
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/0
  9776 ;;		On exit  : 0/0
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9779 ;;      Params:         4       0       0       0
  9780 ;;      Locals:         2       0       0       0
  9781 ;;      Temps:          2       0       0       0
  9782 ;;      Totals:         8       0       0       0
  9783 ;;Total ram usage:        8 bytes
  9784 ;; Hardware stack levels used: 1
  9785 ;; Hardware stack levels required when called: 2
  9786 ;; This function calls:
  9787 ;;		___aldiv
  9788 ;;		___xxtofl
  9789 ;; This function is called by:
  9790 ;;		_main
  9791 ;; This function uses a non-reentrant model
  9792 ;;
  9793                           
  9794                           	psect	text43
  9795  0036EC                     __ptext43:
  9796                           	callstack 0
  9797  0036EC                     _calculate_time:
  9798                           	callstack 28
  9799  0036EC                     
  9800                           ;main.c: 203:     ANSELB = 0x00;
  9801  0036EC  C0F5  F013         	movff	_timer_overflows,??_calculate_time
  9802  0036F0  C0F6  F014         	movff	_timer_overflows+1,??_calculate_time+1
  9803  0036F4  3A13               	swapf	??_calculate_time^0,f,c
  9804  0036F6  3A14               	swapf	(??_calculate_time+1)^0,f,c
  9805  0036F8  0EF0               	movlw	240
  9806  0036FA  1614               	andwf	(??_calculate_time+1)^0,f,c
  9807  0036FC  5013               	movf	??_calculate_time^0,w,c
  9808  0036FE  0B0F               	andlw	15
  9809  003700  1214               	iorwf	(??_calculate_time+1)^0,f,c
  9810  003702  0EF0               	movlw	240
  9811  003704  1613               	andwf	??_calculate_time^0,f,c
  9812  003706  C013  F015         	movff	??_calculate_time,calculate_time@result
  9813  00370A  C014  F016         	movff	??_calculate_time+1,calculate_time@result+1
  9814  00370E                     
  9815                           ;main.c: 204: 
  9816  00370E  50D6               	movf	214,w,c	;volatile
  9817  003710  CFD7 F013          	movff	4055,??_calculate_time	;volatile
  9818  003714  6A14               	clrf	(??_calculate_time+1)^0,c
  9819  003716  C013  F014         	movff	??_calculate_time,??_calculate_time+1
  9820  00371A  6A13               	clrf	??_calculate_time^0,c
  9821  00371C  2613               	addwf	??_calculate_time^0,f,c
  9822  00371E  0E00               	movlw	0
  9823  003720  2214               	addwfc	(??_calculate_time+1)^0,f,c
  9824  003722  C013  F001         	movff	??_calculate_time,___aldiv@dividend
  9825  003726  C014  F002         	movff	??_calculate_time+1,___aldiv@dividend+1
  9826  00372A  0E00               	movlw	0
  9827  00372C  BE02               	btfsc	(___aldiv@dividend+1)^0,7,c
  9828  00372E  0EFF               	movlw	-1
  9829  003730  6E03               	movwf	(___aldiv@dividend+2)^0,c
  9830  003732  6E04               	movwf	(___aldiv@dividend+3)^0,c
  9831  003734  0EA0               	movlw	160
  9832  003736  6E05               	movwf	___aldiv@divisor^0,c
  9833  003738  0E0F               	movlw	15
  9834  00373A  6E06               	movwf	(___aldiv@divisor+1)^0,c
  9835  00373C  0E00               	movlw	0
  9836  00373E  6E07               	movwf	(___aldiv@divisor+2)^0,c
  9837  003740  0E00               	movlw	0
  9838  003742  6E08               	movwf	(___aldiv@divisor+3)^0,c
  9839  003744  EC5B  F016         	call	___aldiv	;wreg free
  9840  003748  5001               	movf	?___aldiv^0,w,c
  9841  00374A  2615               	addwf	calculate_time@result^0,f,c
  9842  00374C  5002               	movf	(?___aldiv+1)^0,w,c
  9843  00374E  2216               	addwfc	(calculate_time@result+1)^0,f,c
  9844  003750                     
  9845                           ;main.c: 205:     ANSELA = 0xff;
  9846  003750  C015  F001         	movff	calculate_time@result,___xxtofl@val
  9847  003754  C016  F002         	movff	calculate_time@result+1,___xxtofl@val+1
  9848  003758  0E00               	movlw	0
  9849  00375A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9850  00375C  0EFF               	movlw	-1
  9851  00375E  6E03               	movwf	(___xxtofl@val+2)^0,c
  9852  003760  6E04               	movwf	(___xxtofl@val+3)^0,c
  9853  003762  0E01               	movlw	1
  9854  003764  EC7C  F013         	call	___xxtofl
  9855  003768  C001  F00F         	movff	?___xxtofl,?_calculate_time
  9856  00376C  C002  F010         	movff	?___xxtofl+1,?_calculate_time+1
  9857  003770  C003  F011         	movff	?___xxtofl+2,?_calculate_time+2
  9858  003774  C004  F012         	movff	?___xxtofl+3,?_calculate_time+3
  9859  003778  0012               	return		;funcret
  9860  00377A                     __end_of_calculate_time:
  9861                           	callstack 0
  9862                           
  9863 ;; *************** function ___xxtofl *****************
  9864 ;; Defined at:
  9865 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  9866 ;; Parameters:    Size  Location     Type
  9867 ;;  sign            1    wreg     unsigned char 
  9868 ;;  val             4    0[COMRAM] long 
  9869 ;; Auto vars:     Size  Location     Type
  9870 ;;  sign            1    8[COMRAM] unsigned char 
  9871 ;;  arg             4   10[COMRAM] unsigned long 
  9872 ;;  exp             1    9[COMRAM] unsigned char 
  9873 ;; Return value:  Size  Location     Type
  9874 ;;                  4    0[COMRAM] unsigned char 
  9875 ;; Registers used:
  9876 ;;		wreg, status,2, status,0
  9877 ;; Tracked objects:
  9878 ;;		On entry : 0/0
  9879 ;;		On exit  : 0/0
  9880 ;;		Unchanged: 0/0
  9881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9882 ;;      Params:         4       0       0       0
  9883 ;;      Locals:         6       0       0       0
  9884 ;;      Temps:          4       0       0       0
  9885 ;;      Totals:        14       0       0       0
  9886 ;;Total ram usage:       14 bytes
  9887 ;; Hardware stack levels used: 1
  9888 ;; Hardware stack levels required when called: 1
  9889 ;; This function calls:
  9890 ;;		Nothing
  9891 ;; This function is called by:
  9892 ;;		_calculate_time
  9893 ;;		_calculate_velocity
  9894 ;; This function uses a non-reentrant model
  9895 ;;
  9896                           
  9897                           	psect	text44
  9898  0026F8                     __ptext44:
  9899                           	callstack 0
  9900  0026F8                     ___xxtofl:
  9901                           	callstack 28
  9902                           
  9903                           ;incstack = 0
  9904                           ;___xxtofl@sign stored from wreg
  9905  0026F8  6E09               	movwf	___xxtofl@sign^0,c
  9906  0026FA  5009               	movf	___xxtofl@sign^0,w,c
  9907  0026FC  B4D8               	btfsc	status,2,c
  9908  0026FE  EF83  F013         	goto	u5191
  9909  002702  EF85  F013         	goto	u5190
  9910  002706                     u5191:
  9911  002706  EFA7  F013         	goto	l861
  9912  00270A                     u5190:
  9913  00270A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9914  00270C  EF8C  F013         	goto	u5200
  9915  002710  EF8A  F013         	goto	u5201
  9916  002714                     u5201:
  9917  002714  EFA7  F013         	goto	l861
  9918  002718                     u5200:
  9919  002718  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9920  00271C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9921  002720  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9922  002724  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9923  002728  1E05               	comf	??___xxtofl^0,f,c
  9924  00272A  1E06               	comf	(??___xxtofl+1)^0,f,c
  9925  00272C  1E07               	comf	(??___xxtofl+2)^0,f,c
  9926  00272E  1E08               	comf	(??___xxtofl+3)^0,f,c
  9927  002730  2A05               	incf	??___xxtofl^0,f,c
  9928  002732  0E00               	movlw	0
  9929  002734  2206               	addwfc	(??___xxtofl+1)^0,f,c
  9930  002736  2207               	addwfc	(??___xxtofl+2)^0,f,c
  9931  002738  2208               	addwfc	(??___xxtofl+3)^0,f,c
  9932  00273A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9933  00273E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9934  002742  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9935  002746  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9936  00274A  EFAF  F013         	goto	l4535
  9937  00274E                     l861:
  9938  00274E  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9939  002752  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9940  002756  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9941  00275A  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9942  00275E                     l4535:
  9943  00275E  5001               	movf	___xxtofl@val^0,w,c
  9944  002760  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9945  002762  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9946  002764  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9947  002766  A4D8               	btfss	status,2,c
  9948  002768  EFB8  F013         	goto	u5211
  9949  00276C  EFBA  F013         	goto	u5210
  9950  002770                     u5211:
  9951  002770  EFC4  F013         	goto	l4541
  9952  002774                     u5210:
  9953  002774  0E00               	movlw	0
  9954  002776  6E01               	movwf	?___xxtofl^0,c
  9955  002778  0E00               	movlw	0
  9956  00277A  6E02               	movwf	(?___xxtofl+1)^0,c
  9957  00277C  0E00               	movlw	0
  9958  00277E  6E03               	movwf	(?___xxtofl+2)^0,c
  9959  002780  0E00               	movlw	0
  9960  002782  6E04               	movwf	(?___xxtofl+3)^0,c
  9961  002784  EF55  F014         	goto	l864
  9962  002788                     l4541:
  9963  002788  0E96               	movlw	150
  9964  00278A  6E0A               	movwf	___xxtofl@exp^0,c
  9965  00278C  EFCE  F013         	goto	l4545
  9966  002790                     l4543:
  9967  002790  2A0A               	incf	___xxtofl@exp^0,f,c
  9968  002792  90D8               	bcf	status,0,c
  9969  002794  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9970  002796  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9971  002798  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9972  00279A  320B               	rrcf	___xxtofl@arg^0,f,c
  9973  00279C                     l4545:
  9974  00279C  0E00               	movlw	0
  9975  00279E  140B               	andwf	___xxtofl@arg^0,w,c
  9976  0027A0  6E05               	movwf	??___xxtofl^0,c
  9977  0027A2  0E00               	movlw	0
  9978  0027A4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9979  0027A6  6E06               	movwf	(??___xxtofl+1)^0,c
  9980  0027A8  0E00               	movlw	0
  9981  0027AA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9982  0027AC  6E07               	movwf	(??___xxtofl+2)^0,c
  9983  0027AE  0EFE               	movlw	254
  9984  0027B0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9985  0027B2  6E08               	movwf	(??___xxtofl+3)^0,c
  9986  0027B4  5005               	movf	??___xxtofl^0,w,c
  9987  0027B6  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9988  0027B8  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9989  0027BA  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9990  0027BC  A4D8               	btfss	status,2,c
  9991  0027BE  EFE3  F013         	goto	u5221
  9992  0027C2  EFE5  F013         	goto	u5220
  9993  0027C6                     u5221:
  9994  0027C6  EFC8  F013         	goto	l4543
  9995  0027CA                     u5220:
  9996  0027CA  EFF3  F013         	goto	l868
  9997  0027CE                     l4547:
  9998  0027CE  2A0A               	incf	___xxtofl@exp^0,f,c
  9999  0027D0  0E01               	movlw	1
 10000  0027D2  260B               	addwf	___xxtofl@arg^0,f,c
 10001  0027D4  0E00               	movlw	0
 10002  0027D6  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 10003  0027D8  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 10004  0027DA  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 10005  0027DC  90D8               	bcf	status,0,c
 10006  0027DE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10007  0027E0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10008  0027E2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10009  0027E4  320B               	rrcf	___xxtofl@arg^0,f,c
 10010  0027E6                     l868:
 10011  0027E6  0E00               	movlw	0
 10012  0027E8  140B               	andwf	___xxtofl@arg^0,w,c
 10013  0027EA  6E05               	movwf	??___xxtofl^0,c
 10014  0027EC  0E00               	movlw	0
 10015  0027EE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10016  0027F0  6E06               	movwf	(??___xxtofl+1)^0,c
 10017  0027F2  0E00               	movlw	0
 10018  0027F4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10019  0027F6  6E07               	movwf	(??___xxtofl+2)^0,c
 10020  0027F8  0EFF               	movlw	255
 10021  0027FA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10022  0027FC  6E08               	movwf	(??___xxtofl+3)^0,c
 10023  0027FE  5005               	movf	??___xxtofl^0,w,c
 10024  002800  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10025  002802  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10026  002804  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10027  002806  A4D8               	btfss	status,2,c
 10028  002808  EF08  F014         	goto	u5231
 10029  00280C  EF0A  F014         	goto	u5230
 10030  002810                     u5231:
 10031  002810  EFE7  F013         	goto	l4547
 10032  002814                     u5230:
 10033  002814  EF12  F014         	goto	l4555
 10034  002818                     l4553:
 10035  002818  060A               	decf	___xxtofl@exp^0,f,c
 10036  00281A  90D8               	bcf	status,0,c
 10037  00281C  360B               	rlcf	___xxtofl@arg^0,f,c
 10038  00281E  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 10039  002820  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 10040  002822  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 10041  002824                     l4555:
 10042  002824  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 10043  002826  EF17  F014         	goto	u5241
 10044  00282A  EF19  F014         	goto	u5240
 10045  00282E                     u5241:
 10046  00282E  EF21  F014         	goto	l875
 10047  002832                     u5240:
 10048  002832  0E02               	movlw	2
 10049  002834  600A               	cpfslt	___xxtofl@exp^0,c
 10050  002836  EF1F  F014         	goto	u5251
 10051  00283A  EF21  F014         	goto	u5250
 10052  00283E                     u5251:
 10053  00283E  EF0C  F014         	goto	l4553
 10054  002842                     u5250:
 10055  002842                     l875:
 10056  002842  B00A               	btfsc	___xxtofl@exp^0,0,c
 10057  002844  EF26  F014         	goto	u5261
 10058  002848  EF28  F014         	goto	u5260
 10059  00284C                     u5261:
 10060  00284C  EF29  F014         	goto	l4561
 10061  002850                     u5260:
 10062  002850  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 10063  002852                     l4561:
 10064  002852  90D8               	bcf	status,0,c
 10065  002854  320A               	rrcf	___xxtofl@exp^0,f,c
 10066  002856  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 10067  00285A  6A06               	clrf	(??___xxtofl+1)^0,c
 10068  00285C  6A07               	clrf	(??___xxtofl+2)^0,c
 10069  00285E  6A08               	clrf	(??___xxtofl+3)^0,c
 10070  002860  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 10071  002864  6A07               	clrf	(??___xxtofl+2)^0,c
 10072  002866  6A06               	clrf	(??___xxtofl+1)^0,c
 10073  002868  6A05               	clrf	??___xxtofl^0,c
 10074  00286A  5005               	movf	??___xxtofl^0,w,c
 10075  00286C  120B               	iorwf	___xxtofl@arg^0,f,c
 10076  00286E  5006               	movf	(??___xxtofl+1)^0,w,c
 10077  002870  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 10078  002872  5007               	movf	(??___xxtofl+2)^0,w,c
 10079  002874  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 10080  002876  5008               	movf	(??___xxtofl+3)^0,w,c
 10081  002878  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 10082  00287A  5009               	movf	___xxtofl@sign^0,w,c
 10083  00287C  B4D8               	btfsc	status,2,c
 10084  00287E  EF43  F014         	goto	u5271
 10085  002882  EF45  F014         	goto	u5270
 10086  002886                     u5271:
 10087  002886  EF4D  F014         	goto	l4571
 10088  00288A                     u5270:
 10089  00288A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10090  00288C  EF4C  F014         	goto	u5280
 10091  002890  EF4A  F014         	goto	u5281
 10092  002894                     u5281:
 10093  002894  EF4D  F014         	goto	l4571
 10094  002898                     u5280:
 10095  002898  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 10096  00289A                     l4571:
 10097  00289A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 10098  00289E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 10099  0028A2  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 10100  0028A6  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 10101  0028AA                     l864:
 10102  0028AA  0012               	return		;funcret
 10103  0028AC                     __end_of___xxtofl:
 10104                           	callstack 0
 10105                           
 10106 ;; *************** function ___aldiv *****************
 10107 ;; Defined at:
 10108 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aldiv.c"
 10109 ;; Parameters:    Size  Location     Type
 10110 ;;  dividend        4    0[COMRAM] long 
 10111 ;;  divisor         4    4[COMRAM] long 
 10112 ;; Auto vars:     Size  Location     Type
 10113 ;;  quotient        4   10[COMRAM] long 
 10114 ;;  sign            1    9[COMRAM] unsigned char 
 10115 ;;  counter         1    8[COMRAM] unsigned char 
 10116 ;; Return value:  Size  Location     Type
 10117 ;;                  4    0[COMRAM] long 
 10118 ;; Registers used:
 10119 ;;		wreg, status,2, status,0
 10120 ;; Tracked objects:
 10121 ;;		On entry : 0/0
 10122 ;;		On exit  : 0/0
 10123 ;;		Unchanged: 0/0
 10124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10125 ;;      Params:         8       0       0       0
 10126 ;;      Locals:         6       0       0       0
 10127 ;;      Temps:          0       0       0       0
 10128 ;;      Totals:        14       0       0       0
 10129 ;;Total ram usage:       14 bytes
 10130 ;; Hardware stack levels used: 1
 10131 ;; Hardware stack levels required when called: 1
 10132 ;; This function calls:
 10133 ;;		Nothing
 10134 ;; This function is called by:
 10135 ;;		_calculate_time
 10136 ;; This function uses a non-reentrant model
 10137 ;;
 10138                           
 10139                           	psect	text45
 10140  002CB6                     __ptext45:
 10141                           	callstack 0
 10142  002CB6                     ___aldiv:
 10143                           	callstack 28
 10144  002CB6  0E00               	movlw	0
 10145  002CB8  6E0A               	movwf	___aldiv@sign^0,c
 10146  002CBA  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
 10147  002CBC  EF64  F016         	goto	u5130
 10148  002CC0  EF62  F016         	goto	u5131
 10149  002CC4                     u5131:
 10150  002CC4  EF6E  F016         	goto	l4493
 10151  002CC8                     u5130:
 10152  002CC8  1E08               	comf	(___aldiv@divisor+3)^0,f,c
 10153  002CCA  1E07               	comf	(___aldiv@divisor+2)^0,f,c
 10154  002CCC  1E06               	comf	(___aldiv@divisor+1)^0,f,c
 10155  002CCE  6C05               	negf	___aldiv@divisor^0,c
 10156  002CD0  0E00               	movlw	0
 10157  002CD2  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
 10158  002CD4  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
 10159  002CD6  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
 10160  002CD8  0E01               	movlw	1
 10161  002CDA  6E0A               	movwf	___aldiv@sign^0,c
 10162  002CDC                     l4493:
 10163  002CDC  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
 10164  002CDE  EF75  F016         	goto	u5140
 10165  002CE2  EF73  F016         	goto	u5141
 10166  002CE6                     u5141:
 10167  002CE6  EF7F  F016         	goto	l4499
 10168  002CEA                     u5140:
 10169  002CEA  1E04               	comf	(___aldiv@dividend+3)^0,f,c
 10170  002CEC  1E03               	comf	(___aldiv@dividend+2)^0,f,c
 10171  002CEE  1E02               	comf	(___aldiv@dividend+1)^0,f,c
 10172  002CF0  6C01               	negf	___aldiv@dividend^0,c
 10173  002CF2  0E00               	movlw	0
 10174  002CF4  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
 10175  002CF6  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
 10176  002CF8  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
 10177  002CFA  0E01               	movlw	1
 10178  002CFC  1A0A               	xorwf	___aldiv@sign^0,f,c
 10179  002CFE                     l4499:
 10180  002CFE  0E00               	movlw	0
 10181  002D00  6E0B               	movwf	___aldiv@quotient^0,c
 10182  002D02  0E00               	movlw	0
 10183  002D04  6E0C               	movwf	(___aldiv@quotient+1)^0,c
 10184  002D06  0E00               	movlw	0
 10185  002D08  6E0D               	movwf	(___aldiv@quotient+2)^0,c
 10186  002D0A  0E00               	movlw	0
 10187  002D0C  6E0E               	movwf	(___aldiv@quotient+3)^0,c
 10188  002D0E  5005               	movf	___aldiv@divisor^0,w,c
 10189  002D10  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
 10190  002D12  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
 10191  002D14  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
 10192  002D16  B4D8               	btfsc	status,2,c
 10193  002D18  EF90  F016         	goto	u5151
 10194  002D1C  EF92  F016         	goto	u5150
 10195  002D20                     u5151:
 10196  002D20  EFC8  F016         	goto	l4521
 10197  002D24                     u5150:
 10198  002D24  0E01               	movlw	1
 10199  002D26  6E09               	movwf	___aldiv@counter^0,c
 10200  002D28  EF9C  F016         	goto	l4507
 10201  002D2C                     l4505:
 10202  002D2C  90D8               	bcf	status,0,c
 10203  002D2E  3605               	rlcf	___aldiv@divisor^0,f,c
 10204  002D30  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
 10205  002D32  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
 10206  002D34  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
 10207  002D36  2A09               	incf	___aldiv@counter^0,f,c
 10208  002D38                     l4507:
 10209  002D38  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
 10210  002D3A  EFA1  F016         	goto	u5161
 10211  002D3E  EFA3  F016         	goto	u5160
 10212  002D42                     u5161:
 10213  002D42  EF96  F016         	goto	l4505
 10214  002D46                     u5160:
 10215  002D46                     l4509:
 10216  002D46  90D8               	bcf	status,0,c
 10217  002D48  360B               	rlcf	___aldiv@quotient^0,f,c
 10218  002D4A  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
 10219  002D4C  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
 10220  002D4E  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
 10221  002D50  5005               	movf	___aldiv@divisor^0,w,c
 10222  002D52  5C01               	subwf	___aldiv@dividend^0,w,c
 10223  002D54  5006               	movf	(___aldiv@divisor+1)^0,w,c
 10224  002D56  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
 10225  002D58  5007               	movf	(___aldiv@divisor+2)^0,w,c
 10226  002D5A  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
 10227  002D5C  5008               	movf	(___aldiv@divisor+3)^0,w,c
 10228  002D5E  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
 10229  002D60  A0D8               	btfss	status,0,c
 10230  002D62  EFB5  F016         	goto	u5171
 10231  002D66  EFB7  F016         	goto	u5170
 10232  002D6A                     u5171:
 10233  002D6A  EFC0  F016         	goto	l4517
 10234  002D6E                     u5170:
 10235  002D6E  5005               	movf	___aldiv@divisor^0,w,c
 10236  002D70  5E01               	subwf	___aldiv@dividend^0,f,c
 10237  002D72  5006               	movf	(___aldiv@divisor+1)^0,w,c
 10238  002D74  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
 10239  002D76  5007               	movf	(___aldiv@divisor+2)^0,w,c
 10240  002D78  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
 10241  002D7A  5008               	movf	(___aldiv@divisor+3)^0,w,c
 10242  002D7C  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
 10243  002D7E  800B               	bsf	___aldiv@quotient^0,0,c
 10244  002D80                     l4517:
 10245  002D80  90D8               	bcf	status,0,c
 10246  002D82  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
 10247  002D84  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
 10248  002D86  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
 10249  002D88  3205               	rrcf	___aldiv@divisor^0,f,c
 10250  002D8A  2E09               	decfsz	___aldiv@counter^0,f,c
 10251  002D8C  EFA3  F016         	goto	l4509
 10252  002D90                     l4521:
 10253  002D90  500A               	movf	___aldiv@sign^0,w,c
 10254  002D92  B4D8               	btfsc	status,2,c
 10255  002D94  EFCE  F016         	goto	u5181
 10256  002D98  EFD0  F016         	goto	u5180
 10257  002D9C                     u5181:
 10258  002D9C  EFD8  F016         	goto	l4525
 10259  002DA0                     u5180:
 10260  002DA0  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
 10261  002DA2  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
 10262  002DA4  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
 10263  002DA6  6C0B               	negf	___aldiv@quotient^0,c
 10264  002DA8  0E00               	movlw	0
 10265  002DAA  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
 10266  002DAC  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
 10267  002DAE  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
 10268  002DB0                     l4525:
 10269  002DB0  C00B  F001         	movff	___aldiv@quotient,?___aldiv
 10270  002DB4  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
 10271  002DB8  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
 10272  002DBC  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
 10273  002DC0  0012               	return		;funcret
 10274  002DC2                     __end_of___aldiv:
 10275                           	callstack 0
 10276                           
 10277 ;; *************** function _int0 *****************
 10278 ;; Defined at:
 10279 ;;		line 33 in file "main.c"
 10280 ;; Parameters:    Size  Location     Type
 10281 ;;		None
 10282 ;; Auto vars:     Size  Location     Type
 10283 ;;		None
 10284 ;; Return value:  Size  Location     Type
 10285 ;;                  1    wreg      void 
 10286 ;; Registers used:
 10287 ;;		wreg, status,2, status,0
 10288 ;; Tracked objects:
 10289 ;;		On entry : 0/0
 10290 ;;		On exit  : 0/0
 10291 ;;		Unchanged: 0/0
 10292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10293 ;;      Params:         0       0       0       0
 10294 ;;      Locals:         0       0       0       0
 10295 ;;      Temps:          0       0       0       0
 10296 ;;      Totals:         0       0       0       0
 10297 ;;Total ram usage:        0 bytes
 10298 ;; Hardware stack levels used: 1
 10299 ;; This function calls:
 10300 ;;		Nothing
 10301 ;; This function is called by:
 10302 ;;		Interrupt level 2
 10303 ;; This function uses a non-reentrant model
 10304 ;;
 10305                           
 10306                           	psect	intcode
 10307  000008                     __pintcode:
 10308                           	callstack 0
 10309  000008                     _int0:
 10310                           	callstack 21
 10311                           
 10312                           ;incstack = 0
 10313  000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10314  00000A                     
 10315                           ;main.c: 35:     T0CS = 0;
 10316  00000A  AAF2               	btfss	4082,5,c	;volatile
 10317  00000C  EF0A  F000         	goto	i2u535_41
 10318  000010  EF0C  F000         	goto	i2u535_40
 10319  000014                     i2u535_41:
 10320  000014  EF19  F000         	goto	i2l87
 10321  000018                     i2u535_40:
 10322  000018  A4F2               	btfss	4082,2,c	;volatile
 10323  00001A  EF11  F000         	goto	i2u536_41
 10324  00001E  EF13  F000         	goto	i2u536_40
 10325  000022                     i2u536_41:
 10326  000022  EF19  F000         	goto	i2l87
 10327  000026                     i2u536_40:
 10328  000026                     
 10329                           ;main.c: 36:     T0SE = 0;
 10330  000026  94F2               	bcf	4082,2,c	;volatile
 10331  000028                     
 10332                           ;main.c: 37:     PSA = 1;
 10333  000028  0100               	movlb	0	; () banked
 10334  00002A  4BF5               	infsnz	_timer_overflows& (0+255),f,b
 10335  00002C  2BF6               	incf	(_timer_overflows+1)& (0+255),f,b
 10336  00002E  EF2E  F000         	goto	i2l88
 10337  000032                     i2l87:
 10338                           
 10339                           ;main.c: 40:     PEIE = 1;
 10340  000032  A8F2               	btfss	4082,4,c	;volatile
 10341  000034  EF1E  F000         	goto	i2u537_41
 10342  000038  EF20  F000         	goto	i2u537_40
 10343  00003C                     i2u537_41:
 10344  00003C  EF2E  F000         	goto	i2l88
 10345  000040                     i2u537_40:
 10346  000040  A2F2               	btfss	4082,1,c	;volatile
 10347  000042  EF25  F000         	goto	i2u538_41
 10348  000046  EF27  F000         	goto	i2u538_40
 10349  00004A                     i2u538_41:
 10350  00004A  EF2E  F000         	goto	i2l88
 10351  00004E                     i2u538_40:
 10352  00004E                     
 10353                           ;main.c: 41:     TMR0IE = 1;
 10354  00004E  0E00               	movlw	0
 10355  000050  0100               	movlb	0	; () banked
 10356  000052  6FF4               	movwf	(_button_pushed+1)& (0+255),b
 10357  000054  0E01               	movlw	1
 10358  000056  6FF3               	movwf	_button_pushed& (0+255),b
 10359  000058                     
 10360                           ; BSR set to: 0
 10361                           ;main.c: 42:     IPEN = 1;
 10362  000058  98F2               	bcf	4082,4,c	;volatile
 10363  00005A                     
 10364                           ; BSR set to: 0
 10365                           ;main.c: 43: 
 10366  00005A  92F2               	bcf	4082,1,c	;volatile
 10367  00005C                     i2l88:
 10368  00005C  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10369  00005E  0011               	retfie		f
 10370  000060                     __end_of_int0:
 10371                           	callstack 0
 10372                           
 10373                           	psect	rparam
 10374  0000                     
 10375                           	psect	temp
 10376  00005E                     btemp:
 10377                           	callstack 0
 10378  00005E                     	ds	1
 10379  0000                     int$flags	set	btemp
 10380  0000                     wtemp8	set	btemp+1
 10381  0000                     ttemp5	set	btemp+1
 10382  0000                     ttemp6	set	btemp+4
 10383  0000                     ttemp7	set	btemp+8
 10384                           
 10385                           	psect	idloc
 10386                           
 10387                           ;Config register IDLOC0 @ 0x200000
 10388                           ;	unspecified, using default values
 10389  200000                     	org	2097152
 10390  200000  FF                 	db	255
 10391                           
 10392                           ;Config register IDLOC1 @ 0x200001
 10393                           ;	unspecified, using default values
 10394  200001                     	org	2097153
 10395  200001  FF                 	db	255
 10396                           
 10397                           ;Config register IDLOC2 @ 0x200002
 10398                           ;	unspecified, using default values
 10399  200002                     	org	2097154
 10400  200002  FF                 	db	255
 10401                           
 10402                           ;Config register IDLOC3 @ 0x200003
 10403                           ;	unspecified, using default values
 10404  200003                     	org	2097155
 10405  200003  FF                 	db	255
 10406                           
 10407                           ;Config register IDLOC4 @ 0x200004
 10408                           ;	unspecified, using default values
 10409  200004                     	org	2097156
 10410  200004  FF                 	db	255
 10411                           
 10412                           ;Config register IDLOC5 @ 0x200005
 10413                           ;	unspecified, using default values
 10414  200005                     	org	2097157
 10415  200005  FF                 	db	255
 10416                           
 10417                           ;Config register IDLOC6 @ 0x200006
 10418                           ;	unspecified, using default values
 10419  200006                     	org	2097158
 10420  200006  FF                 	db	255
 10421                           
 10422                           ;Config register IDLOC7 @ 0x200007
 10423                           ;	unspecified, using default values
 10424  200007                     	org	2097159
 10425  200007  FF                 	db	255
 10426                           
 10427                           	psect	config
 10428                           
 10429                           ; Padding undefined space
 10430  300000                     	org	3145728
 10431  300000  FF                 	db	255
 10432                           
 10433                           ;Config register CONFIG1H @ 0x300001
 10434                           ;	Oscillator Selection bits
 10435                           ;	FOSC = INTIO7, Internal oscillator block, CLKOUT function on OSC2
 10436                           ;	4X PLL Enable
 10437                           ;	PLLCFG = 0x0, unprogrammed default
 10438                           ;	Primary clock enable bit
 10439                           ;	PRICLKEN = 0x1, unprogrammed default
 10440                           ;	Fail-Safe Clock Monitor Enable bit
 10441                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 10442                           ;	Internal/External Oscillator Switchover bit
 10443                           ;	IESO = 0x0, unprogrammed default
 10444  300001                     	org	3145729
 10445  300001  69                 	db	105
 10446                           
 10447                           ;Config register CONFIG2L @ 0x300002
 10448                           ;	unspecified, using default values
 10449                           ;	Power-up Timer Enable bit
 10450                           ;	PWRTEN = 0x1, unprogrammed default
 10451                           ;	Brown-out Reset Enable bits
 10452                           ;	BOREN = 0x3, unprogrammed default
 10453                           ;	Brown Out Reset Voltage bits
 10454                           ;	BORV = 0x3, unprogrammed default
 10455  300002                     	org	3145730
 10456  300002  1F                 	db	31
 10457                           
 10458                           ;Config register CONFIG2H @ 0x300003
 10459                           ;	Watchdog Timer Enable bits
 10460                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 10461                           ;	Watchdog Timer Postscale Select bits
 10462                           ;	WDTPS = 0xF, unprogrammed default
 10463  300003                     	org	3145731
 10464  300003  3C                 	db	60
 10465                           
 10466                           ; Padding undefined space
 10467  300004                     	org	3145732
 10468  300004  FF                 	db	255
 10469                           
 10470                           ;Config register CONFIG3H @ 0x300005
 10471                           ;	CCP2 MUX bit
 10472                           ;	CCP2MX = 0x1, unprogrammed default
 10473                           ;	PORTB A/D Enable bit
 10474                           ;	PBADEN = 0x1, unprogrammed default
 10475                           ;	P3A/CCP3 Mux bit
 10476                           ;	CCP3MX = 0x1, unprogrammed default
 10477                           ;	HFINTOSC Fast Start-up
 10478                           ;	HFOFST = 0x1, unprogrammed default
 10479                           ;	Timer3 Clock input mux bit
 10480                           ;	T3CMX = 0x1, unprogrammed default
 10481                           ;	ECCP2 B output mux bit
 10482                           ;	P2BMX = 0x1, unprogrammed default
 10483                           ;	MCLR Pin Enable bit
 10484                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 10485  300005                     	org	3145733
 10486  300005  BF                 	db	191
 10487                           
 10488                           ;Config register CONFIG4L @ 0x300006
 10489                           ;	unspecified, using default values
 10490                           ;	Stack Full/Underflow Reset Enable bit
 10491                           ;	STVREN = 0x1, unprogrammed default
 10492                           ;	Single-Supply ICSP Enable bit
 10493                           ;	LVP = 0x1, unprogrammed default
 10494                           ;	Extended Instruction Set Enable bit
 10495                           ;	XINST = 0x0, unprogrammed default
 10496                           ;	Background Debug
 10497                           ;	DEBUG = 0x1, unprogrammed default
 10498  300006                     	org	3145734
 10499  300006  85                 	db	133
 10500                           
 10501                           ; Padding undefined space
 10502  300007                     	org	3145735
 10503  300007  FF                 	db	255
 10504                           
 10505                           ;Config register CONFIG5L @ 0x300008
 10506                           ;	unspecified, using default values
 10507                           ;	Code Protection Block 0
 10508                           ;	CP0 = 0x1, unprogrammed default
 10509                           ;	Code Protection Block 1
 10510                           ;	CP1 = 0x1, unprogrammed default
 10511  300008                     	org	3145736
 10512  300008  03                 	db	3
 10513                           
 10514                           ;Config register CONFIG5H @ 0x300009
 10515                           ;	unspecified, using default values
 10516                           ;	Boot Block Code Protection bit
 10517                           ;	CPB = 0x1, unprogrammed default
 10518                           ;	Data EEPROM Code Protection bit
 10519                           ;	CPD = 0x1, unprogrammed default
 10520  300009                     	org	3145737
 10521  300009  C0                 	db	192
 10522                           
 10523                           ;Config register CONFIG6L @ 0x30000A
 10524                           ;	unspecified, using default values
 10525                           ;	Write Protection Block 0
 10526                           ;	WRT0 = 0x1, unprogrammed default
 10527                           ;	Write Protection Block 1
 10528                           ;	WRT1 = 0x1, unprogramm 10529  30000A                     	org	3145738
 10530  30000A  03                 	db	3
 10531                           
 10532                           ;Config register CONFIG6H @ 0x30000B
 10533                           ;	unspecified, using default values
 10534                           ;	Configuration Register Write Protection bit
 10535                           ;	WRTC = 0x1, unprogrammed default
 10536                           ;	Boot Block Write Protection bit
 10537                           ;	WRTB = 0x1, unprogrammed default
 10538                           ;	Data EEPROM Write Protection bit
 10539                           ;	WRTD = 0x1, unprogrammed default
 10540  30000B                     	org	3145739
 10541  30000B  E0                 	db	224
 10542                           
 10543                           ;Config register CONFIG7L @ 0x30000C
 10544                           ;	unspecified, using default values
 10545                           ;	Table Read Protection Block 0
 10546                           ;	EBTR0 = 0x1, unprogrammed default
 10547                           ;	Table Read Protection Block 1
 10548                           ;	EBTR1 = 0x1, unprogrammed default
 10549  30000C                     	org	3145740
 10550  30000C  03                 	db	3
 10551                           
 10552                           ;Config register CONFIG7H @ 0x30000D
 10553                           ;	unspecified, using default values
 10554                           ;	Boot Block Table Read Protection bit
 10555                           ;	EBTRB = 0x1, unprogrammed default
 10556  30000D                     	org	3145741
 10557  30000D  40                 	db	64
 10558                           tosu	equ	0xFFF
 10559                           tosh	equ	0xFFE
 10560                           tosl	equ	0xFFD
 10561                           stkptr	equ	0xFFC
 10562                           pclatu	equ	0xFFB
 10563                           pclath	equ	0xFFA
 10564                           pcl	equ	0xFF9
 10565                           tblptru	equ	0xFF8
 10566                           tblptrh	equ	0xFF7
 10567                           tblptrl	equ	0xFF6
 10568                           tablat	equ	0xFF5
 10569                           prodh	equ	0xFF4
 10570                           prodl	equ	0xFF3
 10571                           indf0	equ	0xFEF
 10572                           postinc0	equ	0xFEE
 10573                           postdec0	equ	0xFED
 10574                           preinc0	equ	0xFEC
 10575                           plusw0	equ	0xFEB
 10576                           fsr0h	equ	0xFEA
 10577                           fsr0l	equ	0xFE9
 10578                           wreg	equ	0xFE8
 10579                           indf1	equ	0xFE7
 10580                           postinc1	equ	0xFE6
 10581                           postdec1	equ	0xFE5
 10582                           preinc1	equ	0xFE4
 10583                           plusw1	equ	0xFE3
 10584                           fsr1h	equ	0xFE2
 10585                           fsr1l	equ	0xFE1
 10586                           bsr	equ	0xFE0
 10587                           indf2	equ	0xFDF
 10588                           postinc2	equ	0xFDE
 10589                           postdec2	equ	0xFDD
 10590                           preinc2	equ	0xFDC
 10591                           plusw2	equ	0xFDB
 10592                           fsr2h	equ	0xFDA
 10593                           fsr2l	equ	0xFD9
 10594                           status	equ	0xFD8

Data Sizes:
    Strings     119
    Constant    0
    Data        2
    BSS         196
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      93
    BANK0           160    143     157
    BANK1           256      0     178
    BANK2           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_7(CODE[12]), STR_6(CODE[10]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_7(CODE[12]), STR_6(CODE[10]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_7(CODE[12]), STR_6(CODE[10]), STR_5(CODE[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> print_time_velocity@message_bc(BANK0[20]), print_time_velocity@message_fr(BANK0[20]), print_threshold@message_bc(BANK0[20]), print_threshold@message_fr(BANK0[20]), 
		 -> debug_print@message(COMRAM[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S608$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S608$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_10(CODE[10]), STR_9(CODE[16]), STR_8(CODE[10]), print_time_velocity@message_bc(BANK0[20]), 
		 -> print_time_velocity@message_fr(BANK0[20]), print_threshold@message_bc(BANK0[20]), print_threshold@message_fr(BANK0[20]), debug_print@message(COMRAM[10]), 
		 -> STR_2(CODE[17]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _lcd_goto->_lcd_write
    _lcd_init->_lcd_write
    _calibrate->_read_adc
    _read_adc->___awdiv
    _lcd_puts->_lcd_write
    _lcd_clear->_lcd_write
    _calculate_velocity->___fldiv
    _calculate_time->___aldiv
    _calculate_time->___xxtofl

Critical Paths under _int0 in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_print_time_velocity
    _print_time_velocity->_sprintf
    _print_threshold->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _int0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int0 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   77823
                                             85 COMRAM     2     2      0
                                            131 BANK0     12    12      0
                     _calculate_time
                 _calculate_velocity
                          _calibrate
                    _change_position
                          _lcd_clear
                           _lcd_goto
                           _lcd_init
                           _lcd_puts
                    _print_threshold
                _print_time_velocity
                           _read_adc
                  _setup_buttons_int
                    _setup_timer_int
 ---------------------------------------------------------------------------------
 (1) _setup_timer_int                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_buttons_int                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_time_velocity                                 48    40      8   34382
                                             83 BANK0     48    40      8
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _print_threshold                                     40    40      0   34186
                                             83 BANK0     40    40      0
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8   33125
                                             62 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   32160
                                             83 COMRAM     2     2      0
                                             56 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   31795
                                             63 COMRAM    20    20      0
                                             50 BANK0      6     0      6
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              62    55      7   22980
                                             45 COMRAM    12     5      7
                                              0 BANK0     50    50      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _lcd_goto                                             1     1      0      66
                                              1 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      44
                                              1 COMRAM     2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _calibrate                                            8     8      0    3352
                                             12 COMRAM     8     8      0
                            ___awdiv
                    _change_position
                          _lcd_clear
                           _lcd_puts
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             4     2      2     933
                                              8 COMRAM     4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             2     0      2     849
                                              1 COMRAM     2     0      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_write                                            1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _change_position                                      2     0      2     478
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _calculate_velocity                                   8     4      4    2432
                                             25 COMRAM     8     4      4
                            ___fldiv
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2311
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _calculate_time                                       8     4      4     943
                                             14 COMRAM     8     4      4
                            ___aldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     466
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _int0                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calculate_time
     ___aldiv
     ___xxtofl
   _calculate_velocity
     ___fldiv
   _calibrate
     ___awdiv
     _change_position
     _lcd_clear
       _lcd_write
     _lcd_puts
       _lcd_write
     _read_adc
       ___awdiv
   _change_position
   _lcd_clear
   _lcd_goto
     _lcd_write
   _lcd_init
     _lcd_write
   _lcd_puts
   _print_threshold
     _lcd_clear
     _lcd_goto
     _lcd_puts
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
             _strcpy
             _tolower
               _isupper
           _fputc
           _isupper
           _strncmp
           _tolower
   _print_time_velocity
     _lcd_clear
     _lcd_goto
     _lcd_puts
     _sprintf
   _read_adc
   _setup_buttons_int
   _setup_timer_int

 _int0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      20        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      B2       7       69.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8F      9D       5       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      5D       1       98.9%
BITBIGSFRlllllh     49      0       0      18        0.0%
BITBIGSFRllllhh     29      0       0      15        0.0%
BITBIGSFRlhh        19      0       0      11        0.0%
BITBIGSFRh           D      0       0      10        0.0%
BITBIGSFRlllhh       B      0       0      14        0.0%
BITBIGSFRllllhl      6      0       0      16        0.0%
BITBIGSFRllllhl      6      0       0      17        0.0%
BITBIGSFRllhl        2      0       0      13        0.0%
BITBIGSFRllhh        1      0       0      12        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AC      19        0.0%
DATA                 0      0     1AC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Jun 27 17:16:56 2022

                 ___fldiv@aexp 0019                   ___fldiv@bexp 0018                   ___fldiv@sign 0011  
                           l92 3CF2                             l95 3D12                   ___awdiv@sign 0006  
                          l100 3BB6                            l114 2CB4                            l107 3CDC  
                          l142 38E2                            l320 2A32                            l136 3800  
                          l129 3878                            l139 3778                            l171 36EA  
                          l333 2B96                            l174 3CBC                            l183 3948  
                          l503 2FD0                            l193 3D06                            l450 35A8  
                          l285 2DC0                            l437 3436                            l198 2ECA  
                          l471 308E                            l480 3C66                            l801 1F1E  
                          l465 3652                            l802 1F0C                            l476 30D4  
                          l820 150E                            l830 176A                            l734 1178  
                          l751 1292                            l743 1448                            l735 1166  
                          l824 1872                            l760 1362                            l736 112C  
                          l761 1350                            l923 347C                            l827 1704  
                          l861 274E                            l837 1834                            l829 177C  
                          l790 1E60                            l926 34BE                            l934 20A0  
                          l864 28AA                            l928 34F8                            l936 20A8  
                          l776 3B2E                            l793 1E24                            l954 22DE  
                          l970 0F88                            l875 2842                            l868 27E6  
                          l788 2000                            l884 3A58                            l799 1EA6  
                          l986 0736                            _GIE 007F97                            _PSA 007EAB  
                          _abs 3BB8                            _pad 3438                   ___awmod@sign 0006  
             ?_print_threshold 0001                    lcd_goto@pos 0002                            wreg 000FE8  
                 ___flmul@aexp 0012                   ___flmul@bexp 0013                   ___flmul@sign 000D  
                 ___flmul@temp 0018                   ___flmul@prod 0014                   ___fltol@exp1 000A  
                         l1014 0B76                           l1112 3372                           l1120 3B72  
                         l1050 1C66                           l1123 3D16                           ?_abs 0013  
                         l1062 39A2                           l1135 3C9C                           l1063 39AA  
                         l1152 3AE8                           l1056 1BAC                           l1081 3BF6  
                         l1073 31D2                           l1129 3A06                           l1090 2434  
                         l1139 32A8                           l3101 0FF6                           l1149 3AE0  
                         l1078 3BEE                           l3111 1020                           l3103 1008  
                         l1087 24F0                           l3201 11F6                           l3113 1030  
                         l3121 105A                           l3105 100A                           l1097 3C2E  
                         l4001 0412                           l3211 1262                           l3203 1200  
                         l3131 1092                           l3123 106A                           l3115 1040  
                         l3107 1010                           l4003 041E                           l4011 0434  
                         l3213 1272                           l3205 1206                           l3141 10A6  
                         l3133 1096                           l3125 107C                           l3117 1050  
                         l3109 101E                           l3301 3BF8                           l4101 07F0  
                         l4021 04A4                           l4005 0426                           l3311 28DE  
                         l3071 32CE                           l3231 12F4                           l3223 12CC  
                         l3207 122C                           l3215 1282                           l3151 10BA  
                         l3143 10AA                           l3135 109A                           l3127 108A  
                         l3119 1052                           l4111 083A                           l4103 07FE  
                         l4023 04BE                           l4007 042A                           l3401 1CBE  
                         l3321 2920                           l3313 28E2                           l3305 28AC  
                         l3073 32D8                           l3233 12FC                           l3225 12D6  
                         l3217 12A8                           l3209 1260                           l3241 1320  
                         l3161 10CE                           l3153 10BE                           l3145 10AE  
                         l3137 109E                           l3129 108E                           l3081 0F8A  
                         l4201 0CD0                           l4121 0880                           l4113 084C  
                         l4105 0802                           l4025 04C8                           l4017 045A  
                         l4009 042E                           l3411 1CEA                           l3403 1CCE  
                         l3331 297A                           l3323 293E                           l3315 28F0  
                         l3307 28B0                           l3075 32F6                           l3067 32AA  
                         l3251 1372                           l3243 1324                           l3235 1300  
                         l3227 12E4                           l3219 12B8                           l3171 1146  
                         l3163 10F8                           l3155 10C2                           l3147 10B2  
                         l3139 10A2                           l3091 0FC6                           l3083 0F96  
                         l4203 0CD6                           l4211 0D6E                           l4131 0994  
                         l4123 08E4                           l4107 0814                           l4115 0854  
                         l4035 0516                           l4019 0486                           l3501 1F90  
                         l3413 1CFA                           l3421 1D24                           l3405 1CD4  
                         l3333 29A8                           l3325 2946                           l3341 29E2  
                         l3317 2910                           l3309 28BE                           l3077 332C  
                         l3069 32BC                           l3261 13D8                           l3253 137E  
                         l3245 1332                           l3237 1310                           l3229 12E6  
                         l3181 1186                           l3173 114A                           l3165 1114  
                         l3157 10C6                           l3149 10B6                           l3093 0FD6  
                         l3085 0FA4                           l4221 0DD8                           l4213 0D8C  
                         l4205 0D2E                           l4141 0A52                           l4133 09C8  
                         l4125 093C                           l4117 085C                           l4109 0822  
                         l4061 0696                           l4053 05CE                           l4037 0542  
                         l4029 04F0                           l4301 325E                           l3511 1FEE  
                         l3503 1FA6                           l3431 1D66                           l3423 1D34  
                         l3415 1D0A                           l3407 1CDA                           l3343 29F2  
                         l3335 29C8                           l3327 295A                           l3319 2914  
                         l3351 2A38                           l3271 1420                           l3263 13E8  
                         l3255 138C                           l3247 1348                           l3239 1312  
                         l3191 11C8                           l3183 1196                           l3175 1158  
                         l3167 1124                           l3159 10CA                           l3095 0FD8  
                         l3087 0FA6                           l4231 0E16                           l4223 0DDC  
                         l4215 0DA8                           l4207 0D62                           l4151 0B26  
                         l4143 0A62                           l4135 09FA                           l4127 0970  
                         l4119 086C                           l4071 06F6                           l4063 069E  
                         l4055 0602                           l4039 0560                           l4047 057E  
                         l4303 3286                           l4311 18A6                           l3513 1FF4  
                         l3505 1FC0                           l3425 1D4A                           l3417 1D1A  
                         l3409 1CE8                           l4401 3690                           l3345 2A12  
                         l3337 29CA                           l3329 2968                           l3361 2A98  
                         l3353 2A46                           l3601 16BE                           l3273 1422  
                         l3265 1408                           l3257 13C6                           l3193 11D6  
                         l3177 115A                           l3169 113A                           l3089 0FB6  
                         l3097 0FE0                           l4241 0E48                           l4233 0E1E  
                         l4225 0DEC                           l4217 0DBA                           l4209 0D6A  
                         l4161 0B6E                           l4153 0B3A                           l4145 0A96  
                         l4137 0A10                           l4129 0976                           l4073 0708  
                         l4057 0608                           l4065 06D0                           l4049 0598  
                         l4321 191C                           l4313 18B8                           l3515 1FF6  
                         l3507 1FDC                           l3451 1DE8                           l3443 1D9E  
                         l3427 1D5A                           l3435 1D7A                           l3419 1D1C  
                         l4411 36BE                           l4403 3698                           l3339 29DC  
                         l3371 2B0E                           l3363 2AB6                           l3355 2A66  
                         l3283 3B30                           l3291 3C68                           l3611 1714  
                         l3603 16CC                           l3531 1476                           l3523 144A  
                         l3275 1428                           l3267 140C                           l3259 13C8  
                         l3195 11E2                           l3187 11AA                           l3179 1164  
                         l3099 0FF0                           l4243 0E4E                           l4251 0E9E  
                         l4235 0E2C                           l4227 0DFE                           l4219 0DC8  
                         l4171 0C2A                           l4163 0B92                           l4147 0AEC  
                         l4155 0B3E                           l4139 0A42                           l4091 07B8  
                         l4075 0710                           l4067 06E0                           l4059 0662  
                         l4331 19EC                           l4323 192C                           l4315 18BC  
                         l4307 1874                           l4501 2D0E                           l3509 1FE0  
                         l3461 1E2E                           l3453 1DF0                           l3445 1DB8  
                         l3437 1D8A                           l3429 1D62                           l4421 36DA  
                         l4413 36C2                           l4405 36A0                           l3381 2B76  
                         l3373 2B2E                           l3365 2ABE                           l3357 2A6A  
                         l3349 2A34                           l3285 3B3C                           l3293 3C74  
                         l3613 1722                           l3605 16EA                           l3541 14B2  
                         l3533 1486                           l3525 1456                           l3277 1436  
                         l3269 141A                           l3197 11E6                           l3189 11BA  
                         l4261 0EEE                           l4253 0EB0                           l4245 0E74  
                         l4237 0E34                           l4229 0E06                           l4181 0C72  
                         l4173 0C38                           l4165 0BF6                           l4157 0B4E  
                         l4149 0AF2                           l4093 07C0                           l4085 0754  
                         l4077 072A                           l4069 06E4                           l4341 1A5A  
                         l4325 195C                           l4317 18DC                           l4309 1898  
                         l4511 2D50                           l4503 2D24                           l3471 1E86  
                         l3463 1E4C                           l3455 1E00                           l3447 1DC8  
                         l3439 1D8A                           l3391 1C84                           l4423 36E2  
                         l4415 36CA                           l4407 36A6                           l3375 2B40  
                         l3367 2AD2                           l3359 2A78                           l3287 3B4E  
                         l3295 3C78                           l3711 3518                           l3703 34FA  
                         l3623 178C                           l3631 17D4                           l3615 1726  
                         l3607 16F4                           l3551 14E8                           l3543 14B8  
                         l3535 1496                           l3527 1464                           l3279 1438  
                         l3199 11F4                           l4271 0F12                           l4263 0EF6  
                         l4255 0ECA                           l4247 0E90                           l4239 0E3C  
                         l4191 0C9C                           l4183 0C76                           l4167 0C04  
                         l4175 0C40                           l4159 0B62                           l4087 0766  
                         l4095 07C4                           l4079 0742                           l4343 1A8A  
                         l4335 1A24                           l4327 1980                           l4319 18EC  
                         l4431 3986                           l4513 2D6E                           l4505 2D2C  
                         l4521 2D90                           l3481 1EC4                           l3473 1E8C  
                         l3465 1E4E                           l3457 1E14                           l3449 1DD8  
                         l3393 1C94                           l3385 1C68                           l4417 36CC  
                         l4409 36B8                           l4441 3B94                           l4433 3B74  
                         l4601 2C0C                           l3369 2AE0                           l3377 2B46  
                         l3289 3B52                           l3297 3C90                           l3721 3550  
                         l3713 3526                           l3705 34FE                           l3641 1848  
                         l3633 17EE                           l3625 1798                           l3617 1734  
                         l3609 1702                           l3553 14F8                           l3545 14C6  
                         l3537 149C                           l3529 1466                           l3801 2F44  
                         l4281 0F68                           l4273 0F3E                           l4265 0F06  
                         l4257 0ED0                           l4249 0E98                           l4193 0CA2  
                         l4185 0C7C                           l4177 0C54                           l4169 0C18  
                         l4097 07CC                           l4089 0782                           l4353 1B0A  
                         l4337 1A36                           l4329 19A4                           l4425 394A  
                         l4523 2DA0                           l4515 2D7E                           l4507 2D38  
                         l4531 270A                           l3491 1F2E                           l3483 1EC8  
                         l3475 1E96                           l3467 1E5E                           l3459 1E22  
                         l3395 1CA4                           l3387 1C74                           l4451 3CD8  
                         l4419 36D4                           l4443 3BAE                           l4435 3B7A  
                         l4611 2C34                           l4603 2C14                           l3379 2B56  
                         l3723 355E                           l3731 3588                           l3715 352E  
                         l3707 350C                           l3643 1856                           l3635 1802  
                         l3627 17A6                           l3619 1762                           l3571 157A  
                         l3563 1542                           l3555 14FE                           l3547 14C8  
                         l3539 14AC                           l3811 2F70                           l4275 0F4A  
                         l4267 0F0C                           l4259 0EE2                           l4187 0C88  
                         l4179 0C62                           l4195 0CA8                           l4099 07DE  
                         l4355 1B48                           l4363 1BC0                           l4339 1A4C  
                         l4347 1AB6                           l4427 3952                           l4525 2DB0  
                         l4517 2D80                           l4509 2D46                           l4541 2788  
                         l4533 2718                           l3493 1F3A                           l3485 1ED6  
                         l3477 1EA4                           l3469 1E70                           l3397 1CB4  
                         l3389 1C82                           l4461 3918                           l3661 3378  
                         l4437 3B7A                           l4621 2CA0                           l4613 2C38  
                         l4701 2E30                           l3733 3598                           l3725 3574  
                         l3717 3540                           l3709 3514                           l3741 35D8  
                         l3645 1858                           l3637 181C                           l3629 17D0  
                         l3581 15C4                           l3573 1592                           l3565 154E  
                         l3557 151E                           l3549 14D8                           l3653 3AEA  
                         l3821 2FA0                           l4277 0F52                           l4197 0CBA  
                         l4189 0C98                           l4293 320A                           l4381 1C54  
                         l4365 1BE4                           l4373 1C14                           l4357 1B7C  
                         l4349 1AE4                           l4429 3960                           ?_pad 0011  
                         l4519 2D8A                           l4551 27DC                           l4543 2790  
                         l4535 275E                           l3495 1F48                           l3487 1F04  
                         l3479 1EB6                           l3399 1CB6                           l4447 3CBE  
                         l4391 3674                           l4463 3C9E                           l4455 38E4  
                         l3671 33A8                           l3663 3386                           l4439 3B88  
                         l4623 2CA4                           l4615 2C54                           l4711 2E58  
                         l4703 2E38                           l3831 3446                           l3735 35A0  
                         l3727 357C                           l3719 3548                           l3751 3650  
                         l3743 35E8                           l3639 1838                           l3647 185E  
                         l3591 161A                           l3583 15D4                           l3575 159E  
                         l3567 1558                           l3559 152E                           l3655 3AFA  
                         l3823 2FB0                           l3807 2F5C                           l3911 24A8  
                         l3903 23E8                           l4279 0F62                           l4199 0CCC  
                         l4295 3218                           l4287 31D4                           l4375 1C22  
                         l4367 1BF2                           l4471 3A1A                           l4631 3806  
                         l4561 2852                           l4553 2818                           l4545 279C  
                         l4537 2774                           l4529 26FA                           l3497 1F72  
                         l4449 3CD0                           l4393 3678                           l4465 3CA6  
                         l4457 38F0                           l3681 33D6                           l3673 33AC  
                         l3665 338E                           l4625 2CA8                           l4617 2C70  
                         l4609 2C28                           l4721 2E7E                           l4713 2E68  
                         l4705 2E40                           l4481 3CF6                           l3841 349C  
                         l3833 345A                           l3921 2022                           l3729 3582  
                         l3745 3616                           l3761 303E                           l3649 1862  
                         l3593 1636                           l3585 15E0                           l3577 15AA  
                         l3569 156E                           l3825 2FC0                           l3817 2F84  
                         l3809 2F66                           l3913 24D0                           l3905 2424  
                         l4297 3230                           l4289 31FE                           l4369 1C06  
                         l4473 3A22                           l4641 384E                           l4633 3812  
                         l4801 251E                           l4491 2CD8                           l4571 289A  
                         l4563 2856                           l4555 2824                           l4547 27CE  
                         l3499 1F76                           l4395 3680                           l4387 3656  
                         l4467 3CAC                           l4459 3914                           l3691 340A  
                         l3683 33E4                           l3675 33B4                           l3667 3392  
                         l3659 3374                           l4619 2C88                           l4731 2EA0  
                         l4723 2E84                           l4715 2E6C                           l4707 2E4A  
                         l4483 3CFE                           l3851 3BB8                           l3843 34A0  
                         l3835 3468                           l3931 2094                           l3923 204A  
                         l3747 3626                           l3739 35AA                           l3771 30CC  
                         l3763 304E                           l3755 2FD2                           l3595 1642  
                         l3587 15F0                           l3579 15B8                           l3819 2F90  
                         l3915 24E0                           l3907 2458                           l4299 324C  
                         l4379 1C30                           l4475 3A2A                           l4635 3830  
                         l4651 37B0                           l4811 2530                           l4803 2520  
                         l4493 2CDC                           l4485 2CB6                           l4565 287A  
                         l4557 2832                           l4549 27D0                           l4661 36EC  
                         l4397 3682                           l4389 366E                           l3693 3410  
                         l3685 33EA                           l3677 33C6                           l3669 33A0  
                         l4581 2B9C                           l4741 2EBE                           l4733 2EA6  
                         l4725 2E8C                           l4717 2E74                           l4709 2E52  
                         l3853 3BD2                           l3845 34CC                           l3837 3474  
                         l3829 3438                           l3941 20DE                           l3933 20B0  
                         l3925 206A                           l3749 364A                           l3773 30D2  
                         l3765 305C                           l3757 3000                           l3597 165E  
                         l3589 160A                           l3781 3C56                           l3861 315C  
                         l3909 2494                           l4477 3A46                           l4469 3A08  
                         l4637 383C                           l4629 3802                           l4653 37BC  
                         l4645 377A                           l4821 2576                           l4813 2536  
                         l4805 2524                           l4495 2CEA                           l4487 2CBA  
                         l4567 288A                           l4559 2850                           l4663 36EC  
                         l4671 387A                           l4399 368A                           l3687 3400  
                         l3679 33CE                           l3695 3416                           l4583 2BA8  
                         l4743 2EC4                           l4735 2EAC                           l4727 2E94  
                         l4719 2E76                           l3847 34E0                           l3839 3488  
                         l3951 217C                           l3943 20E8                           l3935 20C2  
                         l3927 2078                           l3919 2002                           l3767 306E  
                         l3759 3010                           l3599 1688                           l3791 2EF6  
                         l3863 3168                           l3855 30D6                           l4639 3842  
                         l4655 37C2                           l4647 377E                           l4575 3CDE  
                         l4831 25A8                           l4823 257A                           l4815 253A  
                         l4807 2528                           l4497 2CFA                           l4489 2CC8  
                         l4569 2898                           l4665 370E                           l3697 3426  
                         l3689 3408                           l4593 2BC4                           l4585 2BB0  
                         l4737 2EB2                           l4729 2E9A                           l4681 2DC6  
                         l3961 224C                           l3945 20EE                           l3953 21E0  
                         l3937 20D0                           l3929 207A                           l3769 307C  
                         l3777 3C30                           l3793 2F20                           l3785 2ECC  
                         l3873 31CA                           l3857 30F6                           l3881 3AA4  
                         l4657 37CE                           l4649 378A                           l4577 3D08  
                         l4841 25E6                           l4833 25B4                           l4825 2592  
                         l4817 2552                           l4809 252C                           l4499 2CFE  
                         l4667 3750                           l3699 342E                           l4595 2BD0  
                         l4587 2BBC                           l4579 2B98                           l4739 2EB8  
                         l4691 2DFC                           l4683 2DCE                           l4675 2DC2  
                         l3971 2292                           l3955 21FA                           l3963 225A  
                         l3947 2170                           l3939 20D6                           l3779 3C46  
                         l3795 2F22                           l3787 2EE2                           l3859 3134  
                         l3867 3174                           l3891 22E0                           l4851 2632  
                         l4843 25F2                           l4835 25D4                           l4827 2596  
                         l4819 256A                           l4597 2BD4                           l4693 2E02  
                         l4685 2DE6                           l3973 229E                           l3965 226C  
                         l3957 2218                           l3949 2176                           l3797 2F32  
                         l3869 3186                           l3893 2300                           l3877 39AC  
                         l3885 3AA4                           l3981 037A                           l4861 2670  
                         l4853 2656                           l4845 2612                           l4837 25D6  
                         l4829 259C                           l4781 24FA      print_threshold@message_bc 00C7  
                         l4599 2BF0                           l4695 2E18                           l4687 2DEA  
                         l4679 2DC2                           l3975 22A6                           l3967 227A  
                         l3959 2232                           l3799 2F36                           l3895 2356  
                         l3879 39BC                           l3887 3AD2                           l3991 03CE  
                         l3983 0384                           l4871 26CE                           l4863 2688  
                         l4855 265A                           l4847 2614                           l4839 25DA  
                         l4791 250A                           l4783 24FC                           l4697 2E20  
                         l4689 2DF4                           l3969 2280                           l3977 22B6  
                         l3897 236A                           l3993 03D8                           l3985 0394  
                         l4873 26D2                           l4865 26AC                           l4857 2660  
                         l4849 2628                           l4793 250E                           l4785 2502  
                         l4699 2E22                           l3899 2378                           l3995 03E0  
                         l3987 03A2                           l4875 26D8                           l4867 26AE  
                         l4859 266C                           l4795 2512                           l4787 2504  
                         l4779 24F2                           l3997 03F2                           l3989 03AA  
                         l4877 26E4                           l4869 26C2                           l4797 2516  
                         l4789 2506                           l3999 0400                           l4799 251A  
    print_threshold@message_fr 00B3                           STR_1 0322                           STR_2 0301  
                         STR_4 0347                           STR_5 033D                           STR_6 0351  
                         STR_7 0331                           STR_8 035B                           STR_9 0312  
                         _T0CS 007EAD                           u3000 12B8                           u3001 12B4  
                         u3010 12E4                           u3011 12E0                           _T0SE 007EAC  
                         u3100 13C6                           u3020 12F4                           u3101 13C2  
                         u3021 12F0                           u3110 13D8                           u3030 1310  
                         u3111 13D4                           u3031 130C                           _LATC 000F8B  
                         u3200 28BE                           u3120 13E8                           u3040 1320  
                         u4000 2F80                           u3201 28BA                           u3121 13E4  
                         u3041 131C                           u4001 2F7C                           u3210 28F0  
                         u3130 1408                           u3050 1332                           u4010 2FA0  
                         u3211 28EC                           u3131 1404                           u3051 132E  
                         u4011 2F9C                           u3300 2AE0                           u3140 141A  
                         u3060 1348                           u4020 2FB0                           u4100 315C  
                         u3221 291A                           u3301 2ADC                           u3141 1416  
                         u3061 1344                           u4021 2FAC                           u4101 3158  
                         u3230 293E                           u3310 2B0E                           u4030 3446  
                         u3150 1436                           u3070 135E                           u4110 3186  
                         u3231 293A                           u3311 2B0A                           u4031 3442  
                         u3151 1432                           u3071 135A                           u4111 3182  
                         u3400 1D8A                           u3240 2968                           u3320 2B56  
                         u3160 3B72                           u4040 3468                           u3080 1372  
                         u4200 2378                           u5000 19A4                           u3401 1D86  
                         u3241 2964                           u3321 2B52                           u3161 3B6E  
                         u4041 3464                           u3081 136E                           u4201 2374  
                         u5001 19A0                           u3410 1E00                           u3330 1C82  
                         u3250 29A8                           u3170 3C90                           u4050 34BE  
                         u3090 138C                           u4130 31C0                           u5010 1A36  
                         u3411 1DFC                           u3331 1C7E                           u3251 29A4  
                         u3171 3C8C                           u4051 34BA                           u3091 1388  
                         u4131 31BA                           u5011 1A32                           u3500 1F1A  
                         u3420 1E22                           u3340 1C94                           u5100 3910  
                         u3260 29F2                           u4060 34CC                           u4300 204A  
                         u4140 31C2                           u4220 23E4                           u3180 3C28  
                         u5020 1AE4                           u3501 1F16                           u3421 1E1E  
                         u3341 1C90                           u3261 29EE                           u4061 34C8  
                         u4301 2046                           u4125 3198                           u4221 23E0  
                         u3181 3C22                           u5021 1AE0                           u3510 1F2E  
                         u3430 1E4C                           u3350 1CA4                           u5110 3938  
                         u3270 2A46                           u4070 3BD2                           u4310 2078  
                         u4230 2408                           u4150 39F4                           u3190 3C2A  
                         u5030 1B48                           u3511 1F2A                           u3431 1E48  
                         u3351 1CA0                           u3271 2A42                           u4071 3BCE  
                         u4311 2074                           u4215 238C                           u5031 1B44  
                         u5200 2718                           u3520 1F48                           u3440 1E70  
                         u3360 1CE8                           u5120 3948                           u3280 2A78  
                         u4400 226C                           u4320 2094                           u3600 14D8  
                         u2800 1008                           u4080 3116                           u4240 2424  
                         u4216 2396                           u4160 3A06                           u5040 1BE4  
                         _IPEN 007E87                           u5201 2714                           u3521 1F44  
                         u3441 1E6C                           u3361 1CE4                           u5121 3944  
                         u3281 2A74                           u4401 2268                           u4321 2090  
                         u3601 14D4                           u2801 1004                           u4241 2420  
                         u4217 23A6                           u4161 3A02                           u5041 1BE0  
                         u5130 2CC8                           u5210 2774                           u3530 1F90  
                         u3450 1E86                           u3370 1CFA                           u5050 366E  
                         u3290 2AB6                           u2730 32BC                           u4410 227A  
                         u4330 20C2                           u3610 14E8                           u2810 101E  
                         u4090 3134                           u4250 2478                           u4170 3AD2  
                         u5131 2CC4                           u5211 2770                           u3531 1F8C  
                         u3451 1E82                           u3371 1CF6                           u5051 366A  
                         u5107 3906                           u3291 2AB2                           u2731 32B8  
                         u4411 2276                           u4331 20BE                           u3611 14E4  
                         u2811 101A                           u4091 3130                           u4235 23FE  
                         u4171 3ACE                           u5140 2CEA                           u5220 27CA  
                         u3540 1FC0                           u3460 1EA4                           u3380 1D0A  
                         u5060 36B8                           u5300 2C54                           u2740 32CE  
                         u4420 2292                           u4340 20D0                           u3700 178C  
                         u3620 151E                           u2900 1158                           u2820 1030  
                         u4260 2494                           u4180 2328                           u4500 0542  
                         u5141 2CE6                           u5221 27C6                           u3541 1FBC  
                         u3461 1EA0                           u3381 1D06                           u5061 36B4  
                         u5117 392E                           u5301 2C50                           u2741 32CA  
                         u4421 228E                           u4341 20CC                           u3701 1788  
                         u3621 151A                           u2901 1154                           u2821 102C  
                         u4085 310C                           u4261 2490                           u4157 39EA  
                         u4501 053E                           u5150 2D24                           u5230 2814  
                         u3550 1FEE                           u3470 1EC4                           u3390 1D4A  
                         u2750 32F6                           u4350 21FA                           u3710 17A6  
                         u3630 152E                           u2910 1178                           u2830 1040  
                         u4270 24D0                           u4190 2356                           u4510 05CA  
                         u4430 03A2                           u5070 39A2                           u5151 2D20  
                         u5231 2810                           u3551 1FEA                           u3471 1EC0  
                         u3391 1D46                           u2751 32F2                           u4351 21F6  
                         u3711 17A2                           u3631 152A                           u2911 1174  
                         u2831 103C                           u4271 24CC                           u4255 246E  
                         u4191 2352                           u4511 05C6                           u4431 039E  
                         u5071 399E                           u5311 380C                           u5160 2D46  
                         u5240 2832                           u3480 1ED6                           u3800 3426  
                         u5080 3B88                           u2760 332C                           u4360 2218  
                         u4280 2032                           u3720 17EE                           u3640 16A8  
                         u3560 1464                           u2920 1186                           u2840 107C  
                         u4600 07B8                           u4520 065E                           u4440 03F2  
                         u5400 25D4                           u5161 2D42                           u5241 282E  
                         u3481 1ED2                           u3801 3422                           u5081 3B84  
                         u2761 3328                           u4361 2214                           u4281 202C  
                         u3721 17EA                           u3561 1460                           u2921 1182  
                         u2841 1078                           u4185 231E                           u4601 07B4  
                         u4521 065A                           u4441 03EE                           u5321 3848  
                         u5401 25D0                           u5170 2D6E                           u5250 2842  
                         u3490 1F04                           u5090 3CD0                           u4370 2232  
                         u4290 2034                           u3810 350C                           u3730 181C  
                         u3650 1702                           u3570 1476                           u2930 1196  
                         u2850 108A                           u2770 0FA4                           u4610 07DE  
                         u4530 06D0                           u4450 0400                           u5410 2612  
                         u5171 2D6A                           u5251 283E                           u3491 1F00  
                         u5091 3CCC                           u4371 222E                           u3811 3508  
                         u3731 1818                           u3651 16FE                           u3571 1472  
                         u2931 1192                           u2851 1086                           u2771 0FA0  
                         u4611 07DA                           u4531 06CC                           u4451 03FC  
                         u5331 3784                           u5411 260E                           _PEIE 007F96  
                         u5180 2DA0                           u5260 2850                           u4380 224C  
                         u3820 3526                           u3900 3000                           u3740 1856  
                         u3660 1722                           u3580 1486                           u2940 11C8  
                         u2860 10F8                           u2780 0FB6                           u4700 0A52  
                         u4620 07F0                           u4540 06F6                           u4460 0412  
                         u5420 26C2                           u5181 2D9C                           u5261 284C  
                         u4381 2248                           u3821 3522                           u3901 2FFC  
                         u3741 1852                           u3661 171E                           u3645 169E  
                         u3581 1482                           u2941 11C4                           u2861 10F4  
                         u2781 0FB2                           u4701 0A4E                           u4621 07EC  
                         u4541 06F2                           u4461 040E                           u5341 37C8  
                         u5421 26BE                           u5270 288A                           u5190 270A  
                         u3750 3386                           u4390 225A                           u3830 3540  
                         u3910 303E                           u3670 1734                           u3590 14C6  
                         u2950 11D6                           u2870 1110                           u2790 0FC6  
                         u4710 0AEC                           u4630 07FE                           u4550 0708  
                         u4470 045A                           u5271 2886                           u5191 2706  
                         u3751 3382                           u4391 2256                           u3831 353C  
                         u3911 303A                           u3671 1730                           u3591 14C2  
                         u2951 11D2                           u2871 110A                           u2791 0FC2  
                         u4711 0AE8                           u4631 07FA                           u4551 0704  
                         u4471 0456                           u5280 2898                           u3760 33A0  
                         u3840 355E                           u3920 305C                           u3680 1762  
                         u2960 11F4                           u2880 1112                           u4800 0CBA  
                         u4720 0B3A                           u4640 0814                           u4560 072A  
                         u4480 0486                           u5281 2894                           u3761 339C  
                         u3841 355A                           u3921 3058                           u3681 175E  
                         u2961 11F0                           u4801 0CB6                           u4721 0B36  
                         u4641 0810                           u4561 0726                           u4481 0482  
                         u3770 33C6                           u5290 2BF0                           u3850 3574  
                         u3930 307C                           u3690 1778                           u2970 122C  
                         u2890 113A                           u4810 0D8C                           u4730 0B62  
                         u4650 0822                           u4570 0750                           u4490 0516  
                         u3771 33C2                           u5291 2BEC                           u5507 2E10  
                         u3851 3570                           u3931 3078                           u3691 1774  
                         u2971 1228                           u2891 1136                           u4811 0D88  
                         u4731 0B5E                           u4651 081E                           u4571 074C  
                         u4491 0512                           u3780 33E4                           u3860 3598  
                         u3940 30CC                           u2980 1272                           u4900 0F3E  
                         u4820 0DA8                           u4740 0C04                           u4660 084C  
                         u4580 0766                           u3781 33E0                           u5517 2E3A  
                         u3861 3594                           u3941 30C8                           u2981 126E  
                         u4901 0F3A                           u4821 0DA4                           u4741 0C00  
                         u4661 0848                           u4581 0762                           u3790 3400  
                         u3870 35D8                           u3950 3C46                           u2990 12A8  
                         u4830 0DBA                           u4750 0C18                           u4670 0994  
                         u4590 0782                           u4910 31FE                           u3791 33FC  
                         u5527 2E62                           u3871 35D4                           u3951 3C42  
                         u2991 12A4                           u4831 0DB6                           u4751 0C14  
                         u4671 0990                           u4591 077E                           u4911 31FA  
                         u3880 3616                           u3960 2EE2                           u4840 0DC8  
                         u4760 0C2A                           u4680 09FA                           u4920 3230  
              ?_calculate_time 000F                           u5537 2E8E                           u3881 3612  
                         u3961 2EDE                           u4841 0DC4                           u4761 0C26  
                         u4681 09F6                           u4921 322C                           u5457 2544  
                         u3890 364A                           u3970 2F16                           u4850 0DFE  
                         u4770 0C38                           u4690 0A42                           u4930 324C  
                         u5547 2C7A                           u3891 3646                           u4851 0DFA  
                         u4771 0C34                           u4691 0A3E                           u4931 3248  
                         u5467 255C                           u3980 2F44                           u4860 0E2C  
                         u4780 0C54                           u4940 325E                           u5557 2C92  
                         u3981 2F40                           u4861 0E28                           u4781 0C50  
                         u4941 325A                           u5477 2584                           u3990 2F58  
                         u4870 0EB0                           u4790 0C62                           u4950 3286  
                         u5567 3CB2                           u3991 2F54                           u3975 2F0C  
                         u4871 0EAC                           u4791 0C5E                           u4951 3282  
                         u5487 267A                           u4880 0ECA                           u4960 1898  
                         u5577 36E4                           u5497 2DD8                           u4881 0EC6  
                         u4961 1894                           u4890 0EE2                           u4970 18EC  
                         u4891 0EDE                           u4971 18E8                           u4980 192C  
                         u4981 1928                           u4990 1980                           i2l87 0032  
                         u4991 197C                           i2l88 005C                           abs@a 0013  
                         _dbuf 0162                           _int0 0008                           _main 24F2  
                         _dtoa 2002                           _prec 0058                           _nout 00EF  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf1 000FE7                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001A                           fsr2l 000FD9  
                         btemp 005E                  ___fpclassifyf 30D6                           prodh 000FF4  
                         prodl 000FF3                           start 0060                ___fldiv@new_exp 0012  
                 ___param_bank 000000                          ??_abs 0015                          ??_pad 0017  
                ___fltol@sign1 0009                __end_of___aldiv 2DC2                          ?_int0 0001  
              __end_of___aodiv 2A34                __end_of___fladd 144A                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 2B98                __end_of___fldiv 2002  
              __end_of___awdiv 3438                __end_of___flneg 3C68                          STR_10 035B  
                        STR_11 0365                          STR_12 036D                          STR_21 0375  
                        STR_15 0369                          STR_16 0371                          STR_19 0375  
              __end_of___awmod 35AA                __end_of___flmul 1874                __end_of___flsub 3B30  
              __end_of___fltol 2FD2                ___awdiv@divisor 0003                ___awdiv@counter 0005  
                 vfpfcnvrt@fmt 0094                          _TMR0H 000FD7                          _TMR0L 000FD6  
                        _PORTD 000F83                          _PORTE 000F84                          _TRISA 000F92  
                        _TRISB 000F93                          _TRISC 000F94                          _TRISD 000F95  
                        _TRISE 000F96                          _flags 005A                          _fputc 32AA  
                        _fputs 3B30                          pad@fp 0011                          _width 00F1  
                        _putch 3D16                          dtoa@d 001E                          dtoa@i 003E  
                        dtoa@n 0036                          dtoa@p 0030                          dtoa@s 0034  
                        dtoa@w 0032                __end_of_isupper 3C30                          tablat 000FF5  
                 main@velocity 00E3                          ttemp5 005F                          ttemp6 0062  
                        ttemp7 0066                          status 000FD8                          wtemp8 005F  
              __end_of_sprintf 3A5A                 ?___fpclassifyf 0001                __end_of_tolower 3AEA  
              _change_position 3CBE                __end_of_strncmp 32AA                __initialization 3A5A  
                 __end_of_int0 0060                   __end_of_main 26F8                   __end_of_dtoa 22E0  
                       ??_int0 0001                         ??_main 0056                         ??_dtoa 0026  
                __activetblptr 000002                         _ADCON0 000FC2                         _ADCON1 000FC1  
                       _ADCON2 000FC0                         ?_fputc 0001                         ?_fputs 000A  
                       _ADRESH 000FC4                         _ADRESL 000FC3                         _T08BIT 007EAE  
             ___awdiv@dividend 0001                         _ANSELA 000F38                         ?_putch 0001  
                       _ANSELB 000F39                         _INT0IE 007F94                         _INT0IF 007F91  
                       i2l4751 0026                         i2l4761 0058                         i2l4753 0028  
                       i2l4763 005A                         i2l4747 000A                         i2l4757 0040  
                       i2l4749 0018                         i2l4759 004E                         _OSCCON 000FD3  
                       _TMR0IE 007F95                         _TMR0IF 007F92                         _TMR0ON 007EAF  
             __end_of___xxtofl 28AC                   vfprintf@cfmt 0054               __end_of_lcd_init 2ECC  
             __end_of_lcd_goto 3D08                         ___flge 2FD2                         ___fleq 35AA  
             __end_of_lcd_puts 394A                      ??___aldiv 0009                      ??___aodiv 0011  
                    ??___fladd 0009                      ??___aomod 0011                      ??___fldiv 0009  
                    ??___awdiv 0005                      ??___flneg 0005                      ??___awmod 0005  
                    ??___flmul 0009                      ??___flsub 0022                      ??___fltol 0005  
                       _efgtoa 037A                         _floorf 22E0               __end_of_read_adc 3BB8  
                       clear_0 3A78                         clear_1 3A84               ___awdiv@quotient 0007  
              ___awmod@divisor 0003                         isa$std 000001                ___awmod@counter 0005  
                       pad@buf 0013                         dtoa@fp 001C                         _strcpy 39AC  
                       _strlen 3C68                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                ___fpclassifyf@e 0009  
              ___fpclassifyf@u 000B                ___fpclassifyf@x 0001                   __mediumconst 0000  
                       tblptrh 000FF7                      ??_isupper 0003                         tblptrl 000FF6  
                       tblptru 000FF8       print_time_velocity@F6351 0114       print_time_velocity@F6353 0100  
                       putch@c 0001               __end_of_vfprintf 39AC        __end_of_change_position 3CDE  
                    ??_sprintf 0056                      ??_tolower 0009           print_threshold@F6344 013C  
         print_threshold@F6346 0128                      ??_strncmp 0007  print_time_velocity@message_bc 00CF  
print_time_velocity@message_fr 00BB                     ___flge@ff1 001A                     ___flge@ff2 001E  
              ??___fpclassifyf 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0001                     ___fleq@ff2 0005  
                   __accesstop 0060        __end_of__initialization 3A96                     ___flneg@f1 0001  
                ___rparam_used 000001                     ___fltol@f1 0001         calculate_velocity@time 001A  
         calculate_time@result 0015                 __pcstackCOMRAM 0001                   __pidataBANK0 3D14  
                __end_of_fputc 3374                  __end_of_fputs 3B74                  __end_of_putch 3D18  
               calibrate@i_106 0011               ??_calculate_time 0013                        ??_fputc 0005  
                      ??_fputs 000E                        ??_putch 0001                     __pbssBANK0 00EF  
                   __pbssBANK1 0100            _print_time_velocity 377A                  _button_pushed 00F3  
                   _efgtoa$754 0062                     _efgtoa$755 0064                     _efgtoa$747 0060  
                      ?___flge 001A                        ?___fleq 0001                        ?_efgtoa 002E  
                      ?_floorf 001A           ?_print_time_velocity 00B3               debug_print@F6340 0150  
                      ?_strcpy 0001                        ?_strlen 0001                        _INTEDG0 007F8E  
                    ?___xxtofl 0001              __end_of_calibrate 2CB6               ?_change_position 0001  
                    ?_lcd_init 0001                      ?_lcd_goto 0001                      ?_lcd_puts 0002  
                    ?_read_adc 0009                     calibrate@i 000F                        __Hparam 0000  
                      __Lparam 0000              __end_of_lcd_clear 3CBE                        ___aldiv 2CB6  
                      ___aodiv 28AC                        ___fladd 0F8A                        ___aomod 2A34  
                      ___fldiv 1C68                        ___awdiv 3374                        ___flneg 3C30  
                      ___awmod 34FA                        ___flmul 144A                        ___flsub 3AEA  
                      ___fltol 2ECC              __end_of_lcd_write 36EC                      ?_vfprintf 0098  
        ??_print_time_velocity 0056                   __psmallconst 0300                        __pcinit 3A5A  
                      __ramtop 0300                        __ptext0 24F2                        __ptext1 3CDE  
                      __ptext2 3D08                        __ptext3 377A                        __ptext4 3802  
                      __ptext5 3A08                        __ptext6 394A                        __ptext7 1874  
                      __ptext8 31D4                        __ptext9 037A     __end_of_calculate_velocity 38E4  
                   ??___xxtofl 0005               ___awmod@dividend 0001               ___aldiv@dividend 0001  
                      _isupper 3BF8                        efgtoa@c 0034                        efgtoa@d 0072  
                      efgtoa@e 008A                        efgtoa@f 0030                        efgtoa@g 0086  
                      efgtoa@h 007C                        efgtoa@i 0084                        efgtoa@l 0080  
                      efgtoa@m 006C                        efgtoa@n 008C                        efgtoa@p 0076  
                      efgtoa@t 0066                        efgtoa@u 008E                        efgtoa@w 0078  
                      _sprintf 3A08                        _tolower 3AA4                     ??_lcd_init 0002  
                   ??_lcd_goto 0002                        _strncmp 31D4                     ??_lcd_puts 0004  
         end_of_initialization 3A96                        floorf@e 0028                        floorf@m 0024  
                      floorf@u 002A                        floorf@x 001A                        fputc@fp 0003  
                __Lmediumconst 0000                     ??_read_adc 000B                        fputs@fp 000C  
            __end_of_vfpfcnvrt 1C68                     efgtoa@mode 007B                     efgtoa@sign 0074  
             ___aldiv@quotient 000B                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE                     ??_vfprintf 0054  
                      strcpy@d 0009                        strlen@a 0003                        strcpy@s 0007  
                      strlen@s 0001                    ___fladd@grs 0010              ??_setup_timer_int 0001  
                ___xxtofl@sign 0009                    ___fldiv@grs 0014                    ___fldiv@rem 000D  
                  ___flmul@grs 000E                     lcd_write@c 0001              ??_print_threshold 0056  
               __end_of___flge 30D6                 __end_of___fleq 3654                    vfpfcnvrt@ap 0096  
                  vfpfcnvrt@ct 0050                    vfpfcnvrt@fp 0092                    vfpfcnvrt@ll 0044  
               __end_of_efgtoa 0F8A                 __end_of_floorf 24F2                     floorf@F526 015A  
               __end_of_strcpy 3A08                 __end_of_strlen 3C9E            start_initialization 3A5A  
                  __end_of_abs 3BF8                    __end_of_pad 34FA                _timer_overflows 00F5  
                 calibrate@sum 0013          __end_of___fpclassifyf 31D4                    vfprintf@fmt 009A  
                     ??___flge 0022                       ??___fleq 0009                       ??_efgtoa 0035  
                  __pdataBANK0 00FB                       ??_floorf 001E                       ??_strcpy 0005  
                     ??_strlen 0003                      ___fladd@a 0005                      ___fladd@b 0001  
                    ___fldiv@a 0005                      ___fldiv@b 0001                      ___flmul@a 0005  
                    ___flmul@b 0001                    __pbssCOMRAM 0058                      ___flsub@a 001E  
                    ___flsub@b 001A        print_time_velocity@time 00B3                  __pcstackBANK0 0060  
             ___aodiv@dividend 0001    print_time_velocity@velocity 00B7                      _calibrate 2B98  
                    __pintcode 0008                       ?___aldiv 0001                       ?___aodiv 0001  
                     ?___fladd 0001                       ?___aomod 0001                       ?___fldiv 0001  
                     ?___awdiv 0001               ___aodiv@quotient 0013                       ?___flneg 0001  
                     ?___awmod 0001                       ?___flmul 0001                       ?___flsub 001A  
                     ?___fltol 0001                      _lcd_clear 3C9E                      _lcd_write 3654  
                  __smallconst 0300                       ?_isupper 0001                       ?_sprintf 009E  
                     ?_tolower 0007                       ?_strncmp 0001                ___aldiv@divisor 0005  
           _calculate_velocity 387A                ___aldiv@counter 0009                     ?_calibrate 0001  
  __end_of_print_time_velocity 3802                       i2u535_40 0018                       i2u535_41 0014  
                     i2u536_40 0026                       i2u536_41 0022                       i2u537_40 0040  
                     i2u537_41 003C                       i2u538_40 004E                       i2u538_41 004A  
          ?_calculate_velocity 001A                _setup_timer_int 3CDE                    _LCD_RS_flag 005C  
                   ?_lcd_clear 0001                      _vfpfcnvrt 1874                 read_adc@result 000B  
                   ?_lcd_write 0001                      main@front 00E7                      lcd_puts@s 0002  
         ??_calculate_velocity 001E        change_position@position 0001                     vfpfcnvrt@c 0053  
                   vfpfcnvrt@f 004C                _print_threshold 3802                  _gate_distance 00FB  
                     __Hrparam 0000                     vfprintf@ap 009C                       __Lrparam 0000  
                   vfprintf@fp 0098                     ?_vfpfcnvrt 0092              _setup_buttons_int 3D08  
              ___aodiv@divisor 0009                ___aodiv@counter 0011             ___fpclassifyf@F465 015E  
           ?_setup_buttons_int 0001                     sprintf@fmt 00A0                       ___xxtofl 26F8  
                     _dtoa$723 002E                       __ptext10 3AA4                       __ptext11 3BF8  
                     __ptext20 2FD2                       __ptext12 39AC                       __ptext21 35AA  
                     __ptext13 22E0                       __ptext30 2A34                       __ptext22 34FA  
                     __ptext14 30D6                       __ptext31 28AC                       __ptext23 2002  
                     __ptext15 2ECC                       __ptext40 3CBE                       __ptext32 3CF4  
                     __ptext24 3438                       __ptext16 3AEA                       __ptext41 387A  
                     __ptext33 2DC2                       __ptext25 3C68                       __ptext17 0F8A  
              _threshold_front 00F9                       __ptext42 1C68                       __ptext34 2B98  
                     __ptext26 3B30                       __ptext18 3C30                       __ptext43 36EC  
                     __ptext35 3B74                       __ptext27 32AA                       __ptext19 144A  
                     __ptext44 26F8                       __ptext36 3374                       __ptext28 3D16  
                     __ptext45 2CB6                       __ptext37 38E4                       __ptext29 3BB8  
                     __ptext38 3C9E                       __ptext39 3654            ??_setup_buttons_int 0001  
                     _lcd_init 2DC2                       _lcd_goto 3CF4                       _lcd_puts 38E4  
                   strcpy@dest 0001                    ??_calibrate 000D                       _read_adc 3B74  
      __end_of_setup_timer_int 3CF4                       efgtoa@fp 002E                       efgtoa@ne 006A  
                     efgtoa@pp 0068                       efgtoa@ou 006E                       isa$xinst 000000  
                     int$flags 005E      __end_of_setup_buttons_int 3D14                       _vfprintf 394A  
            ??_change_position 0003                       main@back 00E9                    ??_lcd_clear 0002  
                     main@time 00EB                    ??_lcd_write 0001               ___aomod@dividend 0001  
      __end_of_print_threshold 387A                       intlevel2 0000                      sprintf@ap 00A6  
               _threshold_back 00F7                 _calculate_time 36EC                      strcpy@src 0003  
                     isupper@c 0001                      strncmp@_l 0001                      strncmp@_r 0003  
                  efgtoa@nmode 007A                ___aomod@divisor 0009                    ??_vfpfcnvrt 0040  
              ___aomod@counter 0011        _calculate_velocity$1106 001E                       sprintf@f 00A8  
                     tolower@c 0007                       sprintf@s 009E                       strncmp@l 0008  
                     strncmp@n 0005                       strncmp@r 000A                   ___aldiv@sign 000A  
                ___fladd@signs 000D         __end_of_calculate_time 377A                   ___aodiv@sign 0012  
                 ___fladd@aexp 000E                   ___fladd@bexp 000F               ?_setup_timer_int 0001  
                 ___aomod@sign 0012  
